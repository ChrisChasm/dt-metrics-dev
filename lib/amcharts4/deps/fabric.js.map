{"version":3,"sources":["webpack:///../es2015/.internal/fabric/fabric.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/buffer/index.js","webpack:///(webpack)/buildin/global.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/base64-js/index.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/ieee754/index.js","webpack:///C:/Dropbox/www/amcharts4dev/node_modules/isarray/index.js"],"names":["Buffer","global","sqrt","atan2","pow","abs","PiBy180","PiBy2","min","max","supportQuality","degreesToRadians","originXOffset","originYOffset","clone","toFixed","multipleSpacesRegex","setObjectScaleOverridden","fabric","version","copyGLTo2DDrawImage","gl","pipelineState","glCanvas","canvas","targetCanvas","ctx","getContext","translate","height","scale","sourceY","drawImage","width","copyGLTo2DPutImageData","dWidth","destinationWidth","dHeight","destinationHeight","numBytes","u8","Uint8Array","this","imageBuffer","u8Clamped","Uint8ClampedArray","readPixels","RGBA","UNSIGNED_BYTE","imgData","ImageData","putImageData","exports","document","window","__webpack_require__","jsdom","decodeURIComponent","features","FetchExternalResources","jsdomImplForWrapper","implForWrapper","nodeCanvas","Canvas","defaultView","DOMParser","isTouchSupported","isLikelyNode","SHARED_ATTRIBUTES","DPI","reNum","fontPaths","iMatrix","canvasModule","perfLimitSizeTotal","maxCacheSideLimit","minCacheSideLimit","charWidthsCache","textureSize","enableGLFiltering","devicePixelRatio","webkitDevicePixelRatio","mozDevicePixelRatio","browserShadowBlurConstant","initFilterBackend","isWebglSupported","console","log","maxTextureSize","WebglFilterBackend","tileSize","Canvas2dFilterBackend","_removeEventListener","eventName","handler","__eventListeners","eventListener","indexOf","util","array","fill","observe","arguments","length","prop","on","push","stopObserving","call","fire","options","listenersForEvent","i","len","filter","value","Observable","off","trigger","Collection","_objects","add","apply","_onObjectAdded","renderOnAddRemove","requestRenderAll","insertAt","object","index","nonSplicing","objects","getObjects","splice","remove","somethingRemoved","_onObjectRemoved","forEachObject","callback","context","type","o","item","isEmpty","size","contains","complexity","reduce","memo","current","CommonMethods","_setOptions","set","_initGradient","filler","property","colorStops","Gradient","_initPattern","source","Pattern","_initClipping","clipTo","functionBody","getFunctionBody","Function","_setObject","obj","_set","key","get","toggle","Math","PI","cos","angle","sin","sign","removeFromArray","idx","getRandomInt","floor","random","degrees","radiansToDegrees","radians","rotatePoint","point","origin","subtractEquals","v","rotateVector","Point","x","y","addEquals","vector","transformPoint","p","t","ignoreOffset","makeBoundingBoxFromPoints","points","xPoints","minX","yPoints","minY","left","top","invertTransform","a","r","number","fractionDigits","parseFloat","Number","parseUnit","fontSize","unit","exec","Text","DEFAULT_SVG_FONT_SIZE","falseFunction","getKlass","namespace","string","camelize","charAt","toUpperCase","slice","resolveNamespace","getSvgAttributes","attributes","concat","parts","split","loadImage","url","crossOrigin","img","createImage","onLoadCallback","onload","onerror","src","substring","loadImageInDom","div","createElement","style","position","appendChild","querySelector","parentNode","removeChild","enlivenObjects","reviver","onLoaded","numLoadedObjects","numTotalObjects","enlivenedObjects","forEach","fromObject","error","enlivenPatterns","patterns","numLoadedPatterns","numPatterns","enlivenedPatterns","pattern","groupSVGElements","elements","path","centerPoint","Group","sourcePath","populateWithProperties","destination","properties","Object","prototype","toString","drawDashedLine","x2","y2","da","dx","dy","rot","dc","di","draw","save","moveTo","rotate","restore","createCanvasElement","clipContext","receiver","beginPath","clip","multiplyTransformMatrices","b","is2x2","qrDecompose","denom","scaleX","scaleY","skewX","skewY","translateX","translateY","customTransformMatrix","skewMatrixX","tan","scaleMatrix","resetObjectTransform","target","flipX","flipY","fn","String","match","isTransparent","tolerance","_isTransparent","imageData","getImageData","l","data","parsePreserveAspectRatioAttribute","attribute","align","meetOrSlice","aspectRatioAttrs","pop","alignX","alignY","clearFabricFontCache","fontFamily","toLowerCase","limitDimsByArea","ar","maximumArea","roughWidth","perfLimitSizeY","capValue","findScaleToFit","findScaleToCover","arcToSegmentsCache","segmentToBezierCache","boundsOfCurveCache","_join","Array","join","arcToSegments","toX","toY","rx","ry","large","sweep","rotateX","argsString","th","sinTh","cosTh","fromX","fromY","px","py","rx2","ry2","py2","px2","pl","root","s","cx","cy","cx1","cy1","mTheta","calcVectorAngle","dtheta","segments","ceil","result","mDelta","mT","th3","segmentToBezier","th2","argsString2","costh2","sinth2","costh3","sinth3","cp1X","cp1Y","cp2X","cp2Y","ux","uy","vx","vy","ta","tb","getBoundsOfCurve","x0","y0","x1","y1","x3","y3","c","t1","t2","b2ac","sqrtb2ac","tvalues","bounds","mt","j","jlen","drawArc","fx","fy","coords","segs","segsNorm","bezierCurveTo","getBoundsOfArc","tx","ty","bound","find","byProperty","condition","k","invoke","method","args","value1","value2","extend","deep","Element","hasOwnProperty","getWholeChar","str","code","charCodeAt","isNaN","next","prev","replace","character","capitalize","firstLetterOnly","escapeXml","graphemeSplit","textstring","chr","graphemes","emptyFunction","IS_DONTENUM_BUGGY","addMethods","klass","parent","superclass","constructor","returnValue","valueOf","Subclass","callSuper","methodName","parentMethod","_this","superClassMethod","createClass","initialize","shift","subclasses","unknown","areHostMethods","methodNames","test","getElement","setElement","uid","getUniqueId","element","__uniqueID","createListener","wrappedHandler","e","event","createWrappedHandler","addListener","removeListener","shouldUseAddListenerRemoveListener","documentElement","shouldUseAttachEventDetachEvent","listeners","handlers","addEventListener","removeEventListener","listener","attachEvent","detachEvent","existingHandler","handlersForEvent","createDispatcher","pointerX","clientX","pointerY","clientY","_getPointer","pageProp","clientProp","pointer","eventTouchProp","getPointer","srcElement","scroll","getScrollLeftTop","parseEl","supportsOpacity","opacity","supportsFilters","reOpacity","setOpacity","es","currentStyle","hasLayout","zoom","setStyle","styles","elementStyle","cssText","styleFloat","_slice","sliceCanConvertNodelists","getElementStyle","toArray","arrayLike","childNodes","err","makeElement","tagName","el","className","htmlFor","setAttribute","docElement","body","scrollLeft","scrollTop","host","nodeType","arr","getComputedStyle","attr","undefined","selectProp","makeElementUnselectable","onselectstart","unselectable","makeElementSelectable","getScript","headEl","getElementsByTagName","scriptEl","loading","onreadystatechange","readyState","getById","id","getElementById","addClass","wrapElement","wrapper","replaceChild","getElementOffset","docElem","scrollLeftTop","doc","ownerDocument","box","offset","offsetAttributes","borderLeftWidth","borderTopWidth","paddingLeft","paddingTop","parseInt","getBoundingClientRect","clientLeft","clientTop","getNodeCanvas","impl","_canvas","_image","makeXHR","factories","ActiveXObject","XMLHttpRequest","emptyFn","request","onComplete","xhr","parameters","param","addParamToUrl","open","setRequestHeader","send","warn","noop","_requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","_cancelAnimFrame","cancelAnimationFrame","clearTimeout","requestAnimFrame","animate","timestamp","time","start","Date","duration","finish","onChange","abort","easing","d","startValue","endValue","byValue","onStart","tick","ticktime","currentTime","timePerc","valuePerc","cancelAnimFrame","animateColor","fromColor","toColor","startColor","Color","getSource","endColor","begin","end","pos","color","posValue","colorEasing","normalize","asin","elastic","opts","easeInBounce","easeOutBounce","ease","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInOutBounce","attributesMap","display","visibility","transform","fill-opacity","fill-rule","font-family","font-size","font-style","font-weight","letter-spacing","paint-order","stroke-dasharray","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-decoration","text-anchor","colorAttributes","stroke","normalizeAttr","normalizeValue","parentAttributes","parsed","isArray","map","n","transformMatrix","parseTransformAttribute","visible","fillIndex","strokeIndex","getSvgRegex","RegExp","_getMultipleNodes","nodeNames","nodeName","nodeList","nodeArray","elementMatchesRule","selectors","firstMatching","parentMatching","selectorMatches","selector","doesSomeParentMatch","matcher","classNames","getAttribute","elementById","node","nodelist","svgValidTagNamesRegEx","svgViewBoxElementsRegEx","svgInvalidAncestorsRegEx","svgValidParentsRegEx","cssRules","gradientDefs","skewMatrix","matrix","commaWsp","reTransformList","reTransform","attributeValue","matrices","m","operation","translateMatrix","rotateMatrix","multiplierX","multiplierY","combinedMatrix","reViewBoxAttrValue","applyViewboxTransform","viewBoxWidth","viewBoxHeight","viewBoxAttr","widthAttr","heightAttr","preserveAspectRatio","missingViewBox","missingDimAttr","toBeParsed","parsedDim","widthDiff","heightDiff","firstChild","parseSVGDocument","parsingOptions","attrs","xlink","substr","el2","cloneNode","currentTrans","oldLength","el3","nodeValue","removeAttribute","parseUseDirectives","svgUid","__uid","descendants","selectNodes","hasAncestorWithNodeName","getGradientDefs","getCSSRules","parseElements","instances","reFontDeclaration","parseFontDeclaration","oStyle","fontStyle","fontWeight","lineHeight","elList","idsToXlinkMap","parseAttributes","ownAttributes","rule","getGlobalStylesForElement","parseStyleAttribute","normalizedAttr","normalizedValue","normalizedStyle","font","mergedAttrs","setAlpha","getAlpha","toRgba","_setStrokeFillOpacity","ElementsParser","parse","chunk","pair","trim","parseStyleString","parseStyleObject","parsePointsAttribute","parsedPoints","allRules","styleContents","textContent","text","ruleObj","propertyValuePairs","_rule","loadSVGFromURL","xml","responseXML","responseText","async","loadXML","results","_options","allElements","loadSVGFromString","parser","parseFromString","regexUrl","numElements","createObjects","_obj","createObject","fromElement","_createObject","checkIfDone","createCallback","resolveGradient","Image","_removeTransformMatrix","instanceFillValue","gradientId","lastIndex","that","scalarAdd","scalar","scalarAddEquals","subtract","scalarSubtract","scalarSubtractEquals","multiply","multiplyEquals","divide","divideEquals","eq","lt","lte","gt","gte","lerp","distanceFrom","midPointFrom","setXY","setX","setY","setFromPoint","swap","Intersection","status","appendPoint","appendPoints","intersectLineLine","a1","a2","b1","b2","uaT","ubT","uB","ua","ub","intersectLinePolygon","inter","intersectPolygonPolygon","points1","points2","intersectPolygonRectangle","r1","r2","topRight","bottomLeft","inter1","inter2","inter3","inter4","_tryParsingColor","setSource","hue2rgb","q","colorNameMap","sourceFromHex","sourceFromRgb","sourceFromHsl","_rgbToHsl","g","h","round","_source","toRgb","toHsl","hsl","toHsla","toHex","toHexa","alpha","toGrayscale","average","currentAlpha","toBlackWhite","threshold","overlayWith","otherColor","otherSource","reRGBa","reHSLa","reHex","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","fromRgb","fromSource","fromRgba","fromHsl","fromHsla","fromHex","isShortNotation","isRGBa","oColor","getColorStop","colorAlpha","keyValuePairs","_convertPercentUnitsToValues","gradientUnits","propValue","addFactor","multFactor","ellipseMatrix","scaleFactor","offsetX","offsetY","gradientTransform","addColorStop","toObject","propertiesToInclude","toSVG","markup","commonAttributes","needsSwap","sort","pathOffset","reverse","minRadius","percentageShift","colorStop","toLive","gradient","createLinearGradient","createRadialGradient","instance","colorStopEls","getLinearCoords","getRadialCoords","forObject","repeat","patternTransform","setOptions","NUM_FRACTION_DIGITS","toDataURL","patternSource","patternWidth","patternHeight","patternOffsetX","patternOffsetY","patternImgSrc","complete","naturalWidth","naturalHeight","createPattern","Shadow","blur","affectStroke","includeDefaultValues","_parseShadow","shadow","shadowStr","offsetsAndBlur","reOffsetsAndBlur","fBoxX","fBoxY","proto","StaticCanvas","CANVAS_INIT_ERROR","Error","renderAndResetBound","renderAndReset","bind","requestRenderAllBound","_initStatic","backgroundColor","backgroundImage","overlayColor","overlayImage","stateful","controlsAboveOverlay","allowTouchScrolling","imageSmoothingEnabled","viewportTransform","backgroundVpt","overlayVpt","onBeforeScaleRotate","enableRetinaScaling","vptCoords","skipOffscreen","cb","_createLowerCanvas","_initOptions","_setImageSmoothing","interactive","_initRetinaScaling","setOverlayImage","setBackgroundImage","setBackgroundColor","setOverlayColor","calcOffset","_isRetinaScaling","getRetinaScaling","lowerCanvasEl","contextContainer","_offset","image","__setBgOverlayImage","__setBgOverlayColor","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","msImageSmoothingEnabled","oImageSmoothingEnabled","_createCanvasElement","canvasEl","_applyCanvasStyle","getWidth","getHeight","setWidth","setDimensions","setHeight","dimensions","cssValue","cssOnly","_setBackstoreDimension","hasLostContext","backstoreOnly","_setCssDimension","_isCurrentlyDrawing","freeDrawingBrush","_setBrushStyles","upperCanvasEl","cacheCanvasEl","wrapperEl","getZoom","setViewportTransform","vpt","activeObject","_activeObject","group","setCoords","calcViewportBoundaries","zoomToPoint","before","after","setZoom","absolutePan","relativePan","setupState","clearContext","clearRect","clear","_hasITextHandlers","_mouseUpITextHandler","_iTextInstances","renderAll","canvasToDrawOn","renderCanvas","isRendering","iVpt","tl","br","tr","bl","_renderBackground","_renderObjects","drawControls","_renderOverlay","render","_renderBackgroundOrOverlay","fillStyle","fillRect","getCenter","centerObjectH","_centerObject","getCenterPoint","centerObjectV","centerObject","center","viewportCenterObject","vpCenter","getVpCenter","viewportCenterObjectH","viewportCenterObjectV","setPositionByOrigin","toDatalessJSON","toDatalessObject","_toObjectMethod","_toObjects","__serializeBgOverlay","excludeFromExport","_toObject","originalValue","bgImage","overlay","background","svgViewportTransformation","_setSVGPreamble","_setSVGHeader","_setSVGBgOverlayColor","_setSVGBgOverlayImage","_setSVGObjects","suppressPreamble","encoding","viewBox","createSVGFontFacesMarkup","createSVGRefElementsMarkup","row","rowIndex","charIndex","fontList","_setSVGObject","finalWidth","finalHeight","sendToBack","objs","activeSelection","unshift","bringToFront","sendBackwards","intersecting","newIdx","objsMoved","_findNewLowerIndex","intersectsWithObject","isContainedWithinObject","bringForward","_findNewUpperIndex","dispose","DataURLExporter","EMPTY_JSON","supports","setLineDash","toJSON","createPNGStream","createJPEGStream","BaseBrush","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeDashArray","setShadow","contextTop","strokeStyle","lineWidth","lineCap","miterLimit","lineJoin","_saveAndTransform","_setShadow","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","_resetShadow","PencilBrush","_points","_drawSegment","p1","p2","midPoint","quadraticCurveTo","onMouseDown","_prepareForDrawing","_captureDrawingPath","_render","onMouseMove","needsFullRender","oldEnd","onMouseUp","_finalizeAndAddPath","_reset","_addPoint","pointerPoint","lineTo","convertPointsToSVGPath","multSignX","multSignY","manyPoints","createPath","pathData","Path","strokeWidth","translateToGivenOrigin","originX","originY","closePath","CircleBrush","drawDot","addPoint","arc","radius","originalRenderOnAddRemove","circles","circle","Circle","circleRadius","circleColor","SprayBrush","density","dotWidth","dotWidthVariance","randomOpacity","optimizeOverlapping","sprayChunks","addSprayChunk","sprayChunkPoints","rects","ilen","sprayChunk","rect","Rect","_getOptimizedRects","uniqueRects","uniqueRectsArray","globalAlpha","PatternBrush","getPatternSrc","patternCanvas","patternCtx","getPatternSrcFunction","getPattern","topLeft","_getLeftTopCoords","supportLineDash","_initInteractive","_createCacheCanvas","uniScaleTransform","uniScaleKey","centeredScaling","centeredRotation","centeredKey","altActionKey","selection","selectionKey","altSelectionKey","selectionColor","selectionDashArray","selectionBorderColor","selectionLineWidth","selectionFullyContained","hoverCursor","moveCursor","defaultCursor","freeDrawingCursor","rotationCursor","notAllowedCursor","containerClass","perPixelTargetFind","targetFindTolerance","skipTargetFind","isDrawingMode","preserveObjectStacking","snapAngle","snapThreshold","stopContextMenu","fireRightClick","fireMiddleClick","_currentTransform","_groupSelector","_initWrapperElement","_createUpperCanvas","_initEventListeners","_chooseObjectsToRender","objsToRender","activeGroupObjects","activeObjects","getActiveObjects","contextTopDirty","renderTopLayer","_drawSelection","renderTop","_resetCurrentTransform","original","_shouldCenterTransform","mouseXSign","mouseYSign","containsPoint","xy","_normalizePointer","_findTargetCorner","calcTransformMatrix","invertedM","vptPointer","restorePointerVpt","isTargetTransparent","shouldCache","_cacheCanvas","normalizedPointer","targetRelativeX","cacheTranslationX","zoomX","targetRelativeY","cacheTranslationY","zoomY","_cacheContext","contextCache","originalColor","selectionBackgroundColor","_renderControls","hasBorders","transparentCorners","_isSelectionKeyPressed","_shouldClearSelection","evented","selectable","centerTransform","action","altKey","_getOriginFromCorner","corner","_getActionFromCorner","_setupCurrentTransform","ex","ey","lastX","lastY","theta","shiftKey","_beforeTransform","_translateObject","newLeft","newTop","moveX","moveY","_changeSkewTransformOrigin","mouseMove","by","origins","0","skew","originA","originB","flipSign","skewSign","_skewObject","skewed","lockSkewingX","lockSkewingY","actualMouseByOrigin","constraintPosition","actualMouseByCenter","toLocalPoint","lastMouseByCenter","dim","_getTransformedDimensions","translateToOriginPoint","_setObjectSkew","localMouse","_dim","newValue","newDim","dimNoSkew","otherBy","_otherBy","_by","newDimMouse","atan","_scaleObject","lockScalingX","lockScalingY","lockScalingFlip","scaled","_setLocalMouse","_setObjectScale","changeX","changeY","forbidScalingX","forbidScalingY","_scaleObjectEqually","newScaleX","newScaleY","_flipObject","dist","lastDist","signX","signY","padding","_rotateObject","lockRotation","lastAngle","curAngle","hasRotated","rightAngleLocked","leftAngleLocked","setCursor","cursor","_resetObjectTransform","groupSelector","aleft","atop","_setLineDash","strokeRect","findTarget","skipGroup","activeTarget","activeTargetSubs","aObjects","targets","_searchPossibleTargets","_checkTarget","isEditing","subTarget","subTargetCheck","ignoreZoom","_absolutePointer","_pointer","cssScale","boundsWidth","boundsHeight","bottom","right","lowerCanvasClass","_copyCanvasStyle","class","touch-action","fromEl","toEl","getSelectionContext","getSelectionElement","getActiveObject","active","_discardActiveObject","_hoveredTarget","_fireSelectionEvents","oldObjects","somethingChanged","added","removed","opt","oldObject","selected","deselected","updated","setActiveObject","currentActives","_setActiveObject","onSelect","onDeselect","discardActiveObject","removeListeners","originalProperties","_realizeGroupTransformOnObject","_unwindGroupTransformOnObject","originalValues","realizeTransform","clearContextTop","_setCursorFromEvent","cursorOffset","mr","mb","ml","addEventOptions","passive","checkClick","which","button","cursorMap","_bindEvents","addOrRemove","functor","eventjsFunctor","_onResize","_onMouseDown","_onMouseMove","_onMouseOut","_onMouseEnter","_onMouseWheel","_onContextMenu","_onDoubleClick","_onDragOver","_onDragEnter","_onDragLeave","_onDrop","eventjs","_onGesture","_onDrag","_onOrientationChange","_onShake","_onLongPress","_onMouseUp","eventsBound","_simpleEventHandler","self","__onTransformGesture","__onDrag","__onMouseWheel","hiddenTextarea","focus","__onOrientationChange","__onShake","__onLongPress","preventDefault","_fireEnterLeaveEvents","stopPropagation","_cacheTransformEventData","_handleEvent","_resetTransformEventData","__onMouseDown","__onMouseUp","__onMouseMove","_shouldRender","isMoving","_previousPointer","isClick","_target","_onMouseUpInDrawingMode","_finalizeCurrentTransform","shouldRender","_maybeGroupObjects","__corner","eventType","subTargets","absolutePointer","_scaling","actionPerformed","hasStateChanged","_addEventOptions","_fire","_onMouseDownInDrawingMode","_onMouseMoveInDrawingMode","shouldGroup","_shouldGroup","_handleGrouping","saveState","touches","_transformObject","_fireOverOutEvents","fireSynteticInOutEvents","targetName","canvasEvtOut","evtOut","canvasEvtIn","evtIn","config","inOpt","outOpt","inFires","oldTarget","targetChanged","previousTarget","nextTarget","reset","_beforeScaleTransform","_performTransformAction","_onScale","_isUniscalePossible","currentAction","getCornerCursor","actionIsDisabled","_getRotatedCornerCursor","hasRotatingPoint","_updateActiveSelection","_createActiveSelection","currentActiveObjects","removeWithUpdate","addWithUpdate","_createGroup","groupObjects","exitEditing","ActiveSelection","_groupSelectedObjects","aGroup","_collectObjects","currentObject","selectionX1Y1","selectionX2Y2","allowIntersect","intersectsWithRect","isContainedWithinRect","format","quality","multiplier","cropping","__toDataURLWithMultiplier","origWidth","origHeight","scaledWidth","scaledHeight","newZoom","vp","newVp","originalInteractive","originalSkipOffScreen","needsResize","__toDataURL","loadFromDatalessJSON","json","loadFromJSON","serialized","JSON","_enlivenObjects","_setBgOverlay","loaded","cbIfLoaded","__setBgOverlay","enlivedObject","_toDataURL","_toDataURLWithMultiplier","toDataURLWithMultiplier","stringify","cloneWithoutData","backgroundImageOpacity","backgroundImageStretch","supportsLineDash","objectCaching","cornerSize","borderColor","borderDashArray","cornerColor","cornerStrokeColor","cornerStyle","cornerDashArray","fillRule","globalCompositeOperation","borderOpacityWhenMoving","borderScaleFactor","minScaleLimit","hasControls","rotatingPointOffset","lockMovementX","lockMovementY","lockUniScaling","statefullCache","noScaleCache","dirty","paintFirst","stateProperties","cacheProperties","_cacheProperties","_updateCacheCanvas","_limitCacheSize","dims","limitedDims","capped","_getCacheCanvasDimensions","objectScale","getObjectScaling","retina","_getNonTransformedDimensions","drawingWidth","drawingHeight","minCacheSize","dimensionsChanged","cacheWidth","cacheHeight","zoomChanged","shouldRedraw","additionalWidth","additionalHeight","shouldResizeCanvas","canvasWidth","canvasHeight","sizeGrowing","setTransform","_transformDone","calcOwnMatrix","_removeDefaultValues","scaling","getObjectOpacity","shouldConstrainValue","isChanged","groupNeedsUpdate","_constrainScale","isOnACache","setOnGroup","getViewportTransform","isNotVisible","isOnScreen","_setupCompositeOperation","drawSelectionBackground","_setOpacity","isCacheDirty","propertySet","drawObject","drawCacheOnCanvas","_removeCacheCanvas","needsItsOwnCache","ownCaching","willDrawShadow","_setStrokeStyles","_setFillStyles","skipCanvas","_removeShadow","decl","dashArray","alternative","styleOverride","drawBorders","forActiveSelection","drawBordersInGroup","multX","multY","_applyPatternGradientTransform","_renderPaintInOrder","_renderStroke","_renderFill","_renderDashedStroke","_findCenterFromElement","_assignTransformMatrixProps","preserveAspectRatioOptions","cropX","cropY","offsetLeft","offsetTop","objectForm","_fromObject","cloneAsImage","dataUrl","boundingRect","getBoundingRect","origParams","originalCanvas","isType","setGradient","setPatternFill","setColor","shouldCenterOrigin","_setOriginToCenter","_resetOrigin","centerH","viewportCenterH","centerV","viewportCenterV","viewportCenter","getLocalPointer","pClicked","objectLeftTop","createAccessors","extraParam","fromOriginX","fromOriginY","toOriginX","toOriginY","translateToCenterPoint","leftTop","getPointByOrigin","adjustPosition","to","offsetFrom","offsetTo","hypotFull","getScaledWidth","xFull","yFull","_originalOriginX","_originalOriginY","originPoint","multiplyMatrices","oCoords","aCoords","ownMatrixCache","matrixCache","getCoords","absolute","calculate","calcCoords","pointTL","pointBR","other","lines","_getImageLines","_findCrossPoints","_containsCenterOfCanvas","isPartiallyOnScreen","topline","rightline","bottomline","leftline","xi","iLine","xcount","lineKey","getScaledHeight","scaleToWidth","boundingRectFactor","scaleToHeight","_calcRotateMatrix","_calcTranslateMatrix","startMatrix","finalMatrix","w","cosP","sinP","cosPSinP","cosPMinusSinP","mtr","skipAbsolute","_setCornerCoords","transformMatrixKey","prefix","cache","dimensionMatrix","_calcDimensionsTransformMatrix","flipping","bbox","dimX","dimY","_calculateCurrentDimensions","getSvgColorString","getSvgStyles","skipShadow","getSvgFilter","getSvgSpanStyles","useWhiteSpace","textDecoration","getSvgTextDecoration","deltaY","overline","underline","linethrough","getSvgId","getSvgTransform","translatePart","anglePart","scalePart","skewXPart","skewYPart","getSvgTransformMatrix","_setSVGBg","textBgRects","_getFillAttributes","_createBaseSVGMarkup","addPaintOrder","saveProps","props","tmpObj","dashedPropertySet","keys","_isEqual","origValue","currentValue","firstPass","_controlsVisibility","isControlVisible","newTheta","cornerHypotenuse","cosHalfOffset","sinHalfOffset","wh","drawRotatingPoint","rotateHeight","scaleOffset","_drawControl","control","controlName","_getControlsVisibility","setControlVisible","setControlsVisibility","FX_DURATION","fxCenterObjectH","callbacks","empty","fxCenterObjectV","fxRemove","skipCallbacks","propsToAnimate","_animate","propPair","from","valueProgress","timeProgress","coordProps","makeEdgeToOriginGetter","propertyNames","originValues","axis1","axis2","dimension","nearest","farthest","Line","_setWidthHeight","_getLeftToOriginX","_getTopToOriginY","calcLinePoints","origStrokeStyle","xMult","yMult","ATTRIBUTE_NAMES","parsedAttributes","pi","startAngle","endAngle","setRadius","startX","startY","endX","endY","largeFlag","getRadiusX","getRadiusY","Triangle","widthBy2","heightBy2","piBy2","Ellipse","getRx","getRy","_initRxRy","isRounded","Polyline","calcDim","_calcDimensions","diffX","diffY","commonRender","Polygon","_toString","commandLengths","repeatedCommands","M","fromArray","_parsePath","_setPositionDimensions","_parseDimensions","_renderPathCommands","tempX","tempY","previous","subpathStartX","subpathStartY","controlX","controlY","addTransform","chunks","currentPath","coordsStr","coordsParsed","re","command","commandLength","repeatedCommand","klen","aX","aY","pathUrl","useSetOnGroup","isAlreadyGrouped","_updateObjectsACoords","_calcBounds","_updateObjectsCoords","_updateObjectCoords","objectLeft","objectTop","_restoreObjectsState","objsToObject","originalDefaults","ownCache","_restoreObjectState","destroy","toActiveSelection","ungroupOnCanvas","setObjectsCoords","onlyWidthHeight","iLen","jLen","_getBounds","minXY","maxXY","toGroup","newGroup","childrenOverride","_lastScaleX","_lastScaleY","_filterScalingX","_filterScalingY","minimumScaleTrigger","cacheKey","filters","_initElement","_element","backend","filterBackend","evictCachesForKey","_originalElement","_initConfig","resizeFilter","applyResizeFilters","applyFilters","_filteredEl","setCrossOrigin","getOriginalSize","_stroke","filterObj","getSrc","hasCrop","clipPath","clipPathId","imageMarkup","getSvgSrc","origFill","filtered","setSrc","retinaScaling","minimumScale","elementToFilter","sourceWidth","sourceHeight","imgElement","_needsResize","sW","sH","elementToDraw","_resetWidthHeight","CSS_CANVAS","_initFilters","pAR","rWidth","rHeight","pWidth","pHeight","_object","resizeFilters","fromURL","imgOptions","_getAngleValueForStraighten","straighten","fxStraighten","straightenObject","fxStraightenObject","testPrecision","precision","fragmentSource","fragmentShader","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","setupGLContext","captureGPUInfo","isSupported","getParameter","MAX_TEXTURE_SIZE","precisions","webGlPrecision","resources","createWebGLCanvas","aPosition","Float32Array","chooseFastestCopyGLTo2DMethod","canUseImageData","canMeasurePerf","performance","canUseArrayBuffer","ArrayBuffer","canUseUint8Clamped","startTime","drawImageTime","testContext","now","copyGLTo2D","glOptions","premultipliedAlpha","depth","stencil","antialias","clearColor","cachedTexture","getCachedTexture","originalWidth","originalHeight","sourceTexture","createTexture","targetTexture","originalTexture","passes","webgl","programCache","pass","tempFbo","createFramebuffer","bindFramebuffer","FRAMEBUFFER","applyTo","resizeCanvasIfNeeded","bindTexture","TEXTURE_2D","deleteTexture","deleteFramebuffer","applyFiltersDebug","ret","glError","getError","NO_ERROR","errorString","glErrorToString","glErrorCode","errorCode","INVALID_ENUM","INVALID_VALUE","INVALID_OPERATION","INVALID_FRAMEBUFFER_OPERATION","OUT_OF_MEMORY","CONTEXT_LOST_WEBGL","clearWebGLCaches","textureCache","textureImageSource","texture","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","uniqueId","gpuInfo","ext","getExtension","renderer","vendor","UNMASKED_RENDERER_WEBGL","UNMASKED_VENDOR_WEBGL","sourceElement","originalEl","originalImageData","BaseFilter","vertexSource","createProgram","vertexShader","VERTEX_SHADER","getShaderInfoLog","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","attributeLocations","getAttributeLocations","uniformLocations","getUniformLocations","uStepW","getUniformLocation","uStepH","getAttribLocation","sendAttributeData","aPositionData","attributeLocation","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","FLOAT","bufferData","STATIC_DRAW","_setupFrameBuffer","framebufferTexture2D","COLOR_ATTACHMENT0","_swapTextures","temp","isNeutralState","applyToWebGL","applyTo2d","retrieveShader","shader","useProgram","uniform1f","sendUniformData","viewport","drawArrays","TRIANGLE_STRIP","bindAdditionalTexture","textureUnit","activeTexture","TEXTURE0","unbindAdditionalTexture","getMainParameter","mainParameter","setMainParameter","createHelpLayer","helpLayer","mainP","ColorMatrix","colorsOnly","_class","uColorMatrix","uConstants","constants","uniformMatrix4fv","uniform4fv","Brightness","brightness","uBrightness","Convolute","opaque","Convolute_3_1","Convolute_3_0","Convolute_5_1","Convolute_5_0","Convolute_7_1","Convolute_7_0","Convolute_9_1","Convolute_9_0","dstOff","scx","scy","srcOff","wt","weights","side","halfSide","sw","sh","output","createImageData","dst","alphaFac","uMatrix","uOpaque","uHalfSize","uSize","uniform1fv","Grayscale","lightness","luminosity","mode","uMode","uniform1i","Invert","invert","uInvert","Noise","noise","rand","uNoise","uSeed","Pixelate","blocksize","_i","_j","_iLen","_jLen","uBlocksize","RemoveColor","distance","useAlpha","lowC","highC","uLow","uHigh","Brownie","Vintage","Kodachrome","Technicolor","Polaroid","Sepia","BlackWhite","BlendColor","screen","diff","lighten","darken","exclusion","tint","buildSource","tg","alpha1","uColor","BlendImage","mask","TEXTURE1","calculateMatrix","canvas1","blendData","blendImage","uTransformMatrix","uImage","uniformMatrix3fv","Resize","resizeType","lanczosLobes","uDelta","uTaps","uniform2fv","horizontal","taps","filterWindow","getFilterWindow","generateShader","tempScale","getTaps","lobeFunction","lanczosCreate","offsets","fragmentSourceTOP","dW","dH","lobes","xx","rcpScaleX","rcpScaleY","newData","oW","oH","sliceByTwo","hermiteFastResize","bilinearFiltering","lanczosResize","tmpCanvas","doneW","doneH","stepW","stepH","sX","sY","dX","dY","srcData","destImg","destData","lanczos","ratioX","ratioY","rcpRatioX","rcpRatioY","range2X","range2Y","cacheLanc","icenter","process","u","weight","fX","fY","xDiff","yDiff","chnl","origPix","w4","pixels","destImage","destPixels","ratioW","ratioH","ratioWHalf","ratioHHalf","img2","data2","weightsAlpha","gxR","gxG","gxB","gxA","centerY","yy","centerX","w0","Contrast","contrast","contrastF","uContrast","Saturation","saturation","adjust","uSaturation","Blur","aspectRatio","simpleBlur","canvas2","blurLayer1","blurLayer2","percent","ctx1","ctx2","newImageData","delta","chooseRightDelta","blurScale","Gamma","gamma","rInv","gInv","bInv","rVals","gVals","bVals","uGamma","uniform3fv","Composed","subFilters","HueRotation","rotation","rad","aThirdSqtSin","OneMinusCos","_dimensionAffectingProps","_reNewline","_reSpacesAndTabs","_reSpaceAndTab","_reWords","textAlign","superscript","baseline","subscript","textBackgroundColor","_fontSizeFraction","_fontSizeMult","charSpacing","_measuringContext","_styleProperties","__charBounds","CACHE_FONT_SIZE","MIN_TEXT_WIDTH","__skipDimension","initDimensions","getMeasuringContext","_splitText","newLines","_splitTextIntoLines","textLines","_textLines","graphemeLines","_unwrappedTextLines","_unwrappedLines","_text","graphemeText","_clearCache","calcTextWidth","cursorWidth","enlargeSpaces","calcTextHeight","diffSpace","currentLineWidth","numberOfSpaces","accumulatedSpace","line","charBound","spaces","isEndOfWrapping","getLineWidth","kernedWidth","lineIndex","_setTextStyles","_renderTextLinesBackground","_renderTextDecoration","_renderText","_renderTextStroke","_renderTextFill","charStyle","forMeasuring","textBaseline","_getFontDeclaration","maxWidth","_renderTextLine","_renderChars","styleHas","heightOfLine","lineLeftOffset","lastColor","charBox","currentColor","lineTopOffset","originalFill","leftOffset","_getLeftOffset","topOffset","_getTopOffset","boxStart","boxWidth","getHeightOfLine","_getLineLeftOffset","getValueOfPropertyAt","getFontCache","cacheProp","_applyCharStyles","styleDeclaration","_measureChar","_char","previousChar","prevCharStyle","coupleWidth","previousWidth","fontCache","couple","stylesAreEqual","fontMultiplier","measureText","getHeightOfChar","char","measureLine","lineInfo","_measureLine","_getWidthOfCharSpacing","grapheme","prevGrapheme","graphemeInfo","lineBounds","_getGraphemeBox","numOfSpaces","skipLeft","getCompleteStyleDeclaration","prevStyle","info","previousBox","__lineHeights","maxHeight","_renderTextCommon","lineHeights","isEmptyStyles","actualStyle","nextStyle","timeToRender","isJustify","charsToRender","shortCut","_renderChar","_hasStyleChanged","_getStyleDeclaration","fullDecl","shouldFill","shouldStroke","fillText","strokeText","setSuperscript","_setScript","setSubscript","schema","loc","get2DCursorLocation","setSelectionStyles","thisStyle","_hasStyleChangedForSvg","__lineWidths","_shouldClearDimensionCache","shouldClear","_forceClearCache","_size","_dy","lastDecoration","currentDecoration","currentFill","lastFill","styleObject","family","fontIsGeneric","genericFonts","newLine","newText","additionalProperties","needsDims","_key","parsedAnchor","textAnchor","originalStrokeWidth","textHeightScaleFactor","scaledDiff","textHeight","offX","p3","cleanStyle","letterCount","stylePropertyValue","stylesCount","allStyleObjectPropertiesMatch","graphemeCount","removeStyle","lineNum","charNum","_extendStyles","_getLineStyle","_setLineStyle","_setStyleDeclaration","selectionStart","skipWrapping","getSelectionStyles","startIndex","endIndex","selectionEnd","getStyleAtPosition","lineStyle","_deleteStyleDeclaration","_deleteLineStyle","parseDecoration","IText","editable","editingBorderColor","cursorColor","cursorDelay","cursorDuration","caching","_reSpace","_currentCursorOpacity","_selectionDirection","_abortCursorAnimation","__widthOfSpace","inCompositionMode","initBehavior","setSelectionStart","_updateAndFire","setSelectionEnd","_fireSelectionChanged","_updateTextarea","initDelayedCursor","cursorOffsetCache","renderCursorOrSelection","skipRestore","_clearTextArea","boundaries","_getCursorBoundaries","renderCursor","renderSelection","_getCursorBoundariesOffsets","cursorPosition","cursorLocation","charHeight","__isMousedown","startLine","endLine","startChar","endChar","realLineHeight","lineOffset","boxEnd","compositionColor","getCurrentCharFontSize","cp","_getCurrentCharIndex","getCurrentCharColor","initAddedHandler","initRemovedHandler","initCursorSelectionHandlers","initDoubleClickSimulation","mouseMoveHandler","_initCanvasHandlers","_removeCanvasHandlers","_tick","_currentTickState","_animateCursor","targetOpacity","completeMethod","tickState","isAborted","_onTickComplete","_cursorTimeout1","_currentTickCompleteState","restart","delay","abortCursorAnimation","_cursorTimeout2","selectAll","getSelectedText","findWordBoundaryLeft","startFrom","findWordBoundaryRight","findLineBoundaryLeft","findLineBoundaryRight","searchWordBoundary","direction","reNonWord","selectWord","newSelectionStart","newSelectionEnd","selectLine","enterEditing","exitEditingOnOthers","initHiddenTextarea","_saveEditingProps","_setEditingProps","_textBeforeEdit","initMouseMoveHandler","getSelectionStartFromPointer","currentStart","currentEnd","__selectionStartOnMouseDown","restartCursorIfNeeded","fromStringToGraphemeSelection","smallerTextStart","graphemeStart","smallerTextEnd","fromGraphemeToStringSelection","newSelection","updateTextareaPosition","updateFromTextArea","_calcTextareaPosition","desiredPostion","compositionStart","upperCanvas","upperCanvasWidth","upperCanvasHeight","clientWidth","clientHeight","_savedProps","_restoreEditingProps","isTextChanged","_removeExtraneousStyles","removeStyleFromTo","styleObj","cursorStart","cursorEnd","lineStart","charStart","lineEnd","charEnd","shiftLineStyles","numericChar","clonedStyles","numericLine","insertNewlineStyleObject","qty","copiedStyle","currentCharStyle","newLineStyles","somethingAdded","numIndex","insertCharStyleObject","quantity","currentLineStyles","currentLineStylesCloned","numericIndex","newStyle","insertNewStyleBlock","insertedText","cursorLoc","addedLines","linesLenght","setSelectionStartEndWithShift","setSelectionInBoundaries","__lastClickTime","__lastLastClickTime","__lastPointer","__newClickTime","newPointer","isTripleClick","_stopEvent","__lastIsEditing","__lastSelected","initMousedownHandler","initMouseupHandler","initClicks","_mouseDownHandler","setCursorByClick","_mouseDownHandlerBefore","mouseUpHandler","mouseOffset","prevWidth","_getNewSelectionStartFromOffset","distanceBtwLastCharAndCursor","distanceBtwNextCharAndCursor","onKeyDown","onKeyUp","onInput","copy","paste","onCompositionStart","onCompositionUpdate","onCompositionEnd","_clickHandlerInitialized","onClick","keysMap","9","27","33","34","35","36","37","38","39","40","ctrlKeysMapUp","67","88","ctrlKeysMapDown","65","keyCode","ctrlKey","metaKey","stopImmediatePropagation","_copyDone","fromPaste","removedText","nextText","charCount","nextCharCount","charDiff","textareaSelection","backDelete","copiedText","copiedTextStyle","compositionEnd","_getClipboardData","clipboardData","_getWidthBeforeCursor","widthBeforeCursor","getDownCursorOffset","isRight","selectionProp","_getSelectionForOffset","indexOnOtherLine","_getIndexOnLine","getUpCursorOffset","textBeforeCursor","charWidth","foundMatch","widthOfCharsOnLine","indexOnLine","leftEdge","rightEdge","offsetFromLeftEdge","moveCursorDown","_moveCursorUpOrDown","moveCursorUp","moveCursorWithShift","moveCursorWithoutShift","moveCursorLeft","_moveCursorLeftOrRight","_move","_moveLeft","_moveRight","moveCursorLeftWithoutShift","change","moveCursorLeftWithShift","moveCursorRight","actionName","moveCursorRightWithShift","moveCursorRightWithoutShift","changed","removeChars","insertChars","_getSVGLeftTopOffsets","textAndBg","_getSVGTextAndBg","textTop","textLeft","_wrapSVGTextAndBg","lineTop","textSpans","textTopOffset","textLeftOffset","_setSVGTextLineBg","_setSVGTextLineText","_createTextCharSpan","styleDecl","shouldUseWhitespace","styleProps","fillStyles","dySpan","_pushTextBgRect","fillColor","_getSVGLineTopOffset","lastHeight","Textbox","minWidth","dynamicMinWidth","__cachedLines","_styleMap","_generateStyleMap","textInfo","realLineCount","realLineCharCount","isWrapping","nextOffset","shouldLimit","mapNextLine","_wrapText","desiredWidth","wrapped","_wrapLine","_measureWord","word","charOffset","_line","reservedSpace","words","wordWidth","infixWidth","largestWordWidth","lineJustStarted","additionalSpace","getMinWidth","tw","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","RangeError","__proto__","arg","encodingOrOffset","allocUnsafe","TypeError","byteOffset","byteLength","fromArrayLike","fromArrayBuffer","isEncoding","actual","write","fromString","isBuffer","checked","val","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","read","buf","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","fromByteArray","utf8Slice","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","Symbol","species","defineProperty","configurable","allocUnsafeSlow","_isBuffer","compare","list","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","_arr","out","bytes","checkOffset","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","stringtrim","base64clean","eval","module","b64","placeHoldersCount","tmp","placeHolders","Arr","L","revLookup","uint8","extraBytes","len2","encodeChunk","lookup","num","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2"],"mappings":"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","file":"deps/fabric.js","sourcesContent":["/* build: `node build.js modules=ALL exclude=gestures,accessors requirejs minifier=uglifyjs` */\n/*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */\n\nvar fabric = fabric || { version: '2.3.3' };\nif (typeof exports !== 'undefined') {\n  exports.fabric = fabric;\n}\n/* _AMD_START_ */\nelse if (typeof define === 'function' && define.amd) {\n  define([], function() { return fabric; });\n}\n/* _AMD_END_ */\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  fabric.document = document;\n  fabric.window = window;\n}\nelse {\n  // assume we're running under node.js when document/window are not present\n  fabric.document = require('jsdom')\n    .jsdom(\n      decodeURIComponent('%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3C%2Fhead%3E%3Cbody%3E%3C%2Fbody%3E%3C%2Fhtml%3E'),\n      { features: {\n        FetchExternalResources: ['img']\n      }\n      });\n  fabric.jsdomImplForWrapper = require('jsdom/lib/jsdom/living/generated/utils').implForWrapper;\n  fabric.nodeCanvas = require('jsdom/lib/jsdom/utils').Canvas;\n  fabric.window = fabric.document.defaultView;\n  DOMParser = require('xmldom').DOMParser;\n}\n\n/**\n * True when in environment that supports touch events\n * @type boolean\n */\nfabric.isTouchSupported = 'ontouchstart' in fabric.window;\n\n/**\n * True when in environment that's probably Node.js\n * @type boolean\n */\nfabric.isLikelyNode = typeof Buffer !== 'undefined' &&\n                      typeof window === 'undefined';\n\n/* _FROM_SVG_START_ */\n/**\n * Attributes parsed from all SVG elements\n * @type array\n */\nfabric.SHARED_ATTRIBUTES = [\n  \"display\",\n  \"transform\",\n  \"fill\", \"fill-opacity\", \"fill-rule\",\n  \"opacity\",\n  \"stroke\", \"stroke-dasharray\", \"stroke-linecap\",\n  \"stroke-linejoin\", \"stroke-miterlimit\",\n  \"stroke-opacity\", \"stroke-width\",\n  \"id\", \"paint-order\",\n  \"instantiated_by_use\"\n];\n/* _FROM_SVG_END_ */\n\n/**\n * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n */\nfabric.DPI = 96;\nfabric.reNum = '(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:e[-+]?\\\\d+)?)';\nfabric.fontPaths = { };\nfabric.iMatrix = [1, 0, 0, 1, 0, 0];\nfabric.canvasModule = 'canvas';\n\n/**\n * Pixel limit for cache canvases. 1Mpx , 4Mpx should be fine.\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.perfLimitSizeTotal = 2097152;\n\n/**\n * Pixel limit for cache canvases width or height. IE fixes the maximum at 5000\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.maxCacheSideLimit = 4096;\n\n/**\n * Lowest pixel limit for cache canvases, set at 256PX\n * @since 1.7.14\n * @type Number\n * @default\n */\nfabric.minCacheSideLimit = 256;\n\n/**\n * Cache Object for widths of chars in text rendering.\n */\nfabric.charWidthsCache = { };\n\n/**\n * if webgl is enabled and available, textureSize will determine the size\n * of the canvas backend\n * @since 2.0.0\n * @type Number\n * @default\n */\nfabric.textureSize = 2048;\n\n/**\n * Enable webgl for filtering picture is available\n * A filtering backend will be initialized, this will both take memory and\n * time since a default 2048x2048 canvas will be created for the gl context\n * @since 2.0.0\n * @type Boolean\n * @default\n */\nfabric.enableGLFiltering = true;\n\n/**\n * Device Pixel Ratio\n * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n */\nfabric.devicePixelRatio = fabric.window.devicePixelRatio ||\n                          fabric.window.webkitDevicePixelRatio ||\n                          fabric.window.mozDevicePixelRatio ||\n                          1;\n/**\n * Browser-specific constant to adjust CanvasRenderingContext2D.shadowBlur value,\n * which is unitless and not rendered equally across browsers.\n *\n * Values that work quite well (as of October 2017) are:\n * - Chrome: 1.5\n * - Edge: 1.75\n * - Firefox: 0.9\n * - Safari: 0.95\n *\n * @since 2.0.0\n * @type Number\n * @default 1\n */\nfabric.browserShadowBlurConstant = 1;\n\nfabric.initFilterBackend = function() {\n  if (fabric.enableGLFiltering && fabric.isWebglSupported && fabric.isWebglSupported(fabric.textureSize)) {\n    console.log('max texture size: ' + fabric.maxTextureSize);\n    return (new fabric.WebglFilterBackend({ tileSize: fabric.textureSize }));\n  }\n  else if (fabric.Canvas2dFilterBackend) {\n    return (new fabric.Canvas2dFilterBackend());\n  }\n};\n\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  // ensure globality even if entire library were function wrapped (as in Meteor.js packaging system)\n  window.fabric = fabric;\n}\n\n\n(function() {\n\n  /**\n   * @private\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  function _removeEventListener(eventName, handler) {\n    if (!this.__eventListeners[eventName]) {\n      return;\n    }\n    var eventListener = this.__eventListeners[eventName];\n    if (handler) {\n      eventListener[eventListener.indexOf(handler)] = false;\n    }\n    else {\n      fabric.util.array.fill(eventListener, false);\n    }\n  }\n\n  /**\n   * Observes specified event\n   * @deprecated `observe` deprecated since 0.8.34 (use `on` instead)\n   * @memberOf fabric.Observable\n   * @alias on\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function observe(eventName, handler) {\n    if (!this.__eventListeners) {\n      this.__eventListeners = { };\n    }\n    // one object with key/value pairs was passed\n    if (arguments.length === 1) {\n      for (var prop in eventName) {\n        this.on(prop, eventName[prop]);\n      }\n    }\n    else {\n      if (!this.__eventListeners[eventName]) {\n        this.__eventListeners[eventName] = [];\n      }\n      this.__eventListeners[eventName].push(handler);\n    }\n    return this;\n  }\n\n  /**\n   * Stops event observing for a particular event handler. Calling this method\n   * without arguments removes all handlers for all events\n   * @deprecated `stopObserving` deprecated since 0.8.34 (use `off` instead)\n   * @memberOf fabric.Observable\n   * @alias off\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function to be deleted from EventListeners\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function stopObserving(eventName, handler) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    // remove all key/value pairs (event name -> event handler)\n    if (arguments.length === 0) {\n      for (eventName in this.__eventListeners) {\n        _removeEventListener.call(this, eventName);\n      }\n    }\n    // one object with key/value pairs was passed\n    else if (arguments.length === 1 && typeof arguments[0] === 'object') {\n      for (var prop in eventName) {\n        _removeEventListener.call(this, prop, eventName[prop]);\n      }\n    }\n    else {\n      _removeEventListener.call(this, eventName, handler);\n    }\n    return this;\n  }\n\n  /**\n   * Fires event with an optional options object\n   * @deprecated `fire` deprecated since 1.0.7 (use `trigger` instead)\n   * @memberOf fabric.Observable\n   * @alias trigger\n   * @param {String} eventName Event name to fire\n   * @param {Object} [options] Options object\n   * @return {Self} thisArg\n   * @chainable\n   */\n  function fire(eventName, options) {\n    if (!this.__eventListeners) {\n      return;\n    }\n\n    var listenersForEvent = this.__eventListeners[eventName];\n    if (!listenersForEvent) {\n      return;\n    }\n\n    for (var i = 0, len = listenersForEvent.length; i < len; i++) {\n      listenersForEvent[i] && listenersForEvent[i].call(this, options || { });\n    }\n    this.__eventListeners[eventName] = listenersForEvent.filter(function(value) {\n      return value !== false;\n    });\n    return this;\n  }\n\n  /**\n   * @namespace fabric.Observable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\n   * @see {@link http://fabricjs.com/events|Events demo}\n   */\n  fabric.Observable = {\n    observe: observe,\n    stopObserving: stopObserving,\n    fire: fire,\n\n    on: observe,\n    off: stopObserving,\n    trigger: fire\n  };\n})();\n\n\n/**\n * @namespace fabric.Collection\n */\nfabric.Collection = {\n\n  _objects: [],\n\n  /**\n   * Adds objects to collection, Canvas or Group, then renders canvas\n   * (if `renderOnAddRemove` is not `false`).\n   * in case of Group no changes to bounding box are made.\n   * Objects should be instances of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the add method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  add: function () {\n    this._objects.push.apply(this._objects, arguments);\n    if (this._onObjectAdded) {\n      for (var i = 0, length = arguments.length; i < length; i++) {\n        this._onObjectAdded(arguments[i]);\n      }\n    }\n    this.renderOnAddRemove && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * An object should be an instance of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the insertAt method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {Object} object Object to insert\n   * @param {Number} index Index to insert object at\n   * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  insertAt: function (object, index, nonSplicing) {\n    var objects = this.getObjects();\n    if (nonSplicing) {\n      objects[index] = object;\n    }\n    else {\n      objects.splice(index, 0, object);\n    }\n    this._onObjectAdded && this._onObjectAdded(object);\n    this.renderOnAddRemove && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  remove: function() {\n    var objects = this.getObjects(),\n        index, somethingRemoved = false;\n\n    for (var i = 0, length = arguments.length; i < length; i++) {\n      index = objects.indexOf(arguments[i]);\n\n      // only call onObjectRemoved if an object was actually removed\n      if (index !== -1) {\n        somethingRemoved = true;\n        objects.splice(index, 1);\n        this._onObjectRemoved && this._onObjectRemoved(arguments[i]);\n      }\n    }\n\n    this.renderOnAddRemove && somethingRemoved && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Executes given function for each object in this group\n   * @param {Function} callback\n   *                   Callback invoked with current object as first argument,\n   *                   index - as second and an array of all objects - as third.\n   *                   Callback is invoked in a context of Global Object (e.g. `window`)\n   *                   when no `context` argument is given\n   *\n   * @param {Object} context Context (aka thisObject)\n   * @return {Self} thisArg\n   * @chainable\n   */\n  forEachObject: function(callback, context) {\n    var objects = this.getObjects();\n    for (var i = 0, len = objects.length; i < len; i++) {\n      callback.call(context, objects[i], i, objects);\n    }\n    return this;\n  },\n\n  /**\n   * Returns an array of children objects of this instance\n   * Type parameter introduced in 1.3.10\n   * @param {String} [type] When specified, only objects of this type are returned\n   * @return {Array}\n   */\n  getObjects: function(type) {\n    if (typeof type === 'undefined') {\n      return this._objects;\n    }\n    return this._objects.filter(function(o) {\n      return o.type === type;\n    });\n  },\n\n  /**\n   * Returns object at specified index\n   * @param {Number} index\n   * @return {Self} thisArg\n   */\n  item: function (index) {\n    return this.getObjects()[index];\n  },\n\n  /**\n   * Returns true if collection contains no objects\n   * @return {Boolean} true if collection is empty\n   */\n  isEmpty: function () {\n    return this.getObjects().length === 0;\n  },\n\n  /**\n   * Returns a size of a collection (i.e: length of an array containing its objects)\n   * @return {Number} Collection size\n   */\n  size: function() {\n    return this.getObjects().length;\n  },\n\n  /**\n   * Returns true if collection contains an object\n   * @param {Object} object Object to check against\n   * @return {Boolean} `true` if collection contains an object\n   */\n  contains: function(object) {\n    return this.getObjects().indexOf(object) > -1;\n  },\n\n  /**\n   * Returns number representation of a collection complexity\n   * @return {Number} complexity\n   */\n  complexity: function () {\n    return this.getObjects().reduce(function (memo, current) {\n      memo += current.complexity ? current.complexity() : 0;\n      return memo;\n    }, 0);\n  }\n};\n\n\n/**\n * @namespace fabric.CommonMethods\n */\nfabric.CommonMethods = {\n\n  /**\n   * Sets object's properties from options\n   * @param {Object} [options] Options object\n   */\n  _setOptions: function(options) {\n    for (var prop in options) {\n      this.set(prop, options[prop]);\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Gradient to\n   */\n  _initGradient: function(filler, property) {\n    if (filler && filler.colorStops && !(filler instanceof fabric.Gradient)) {\n      this.set(property, new fabric.Gradient(filler));\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Pattern to\n   * @param {Function} [callback] callback to invoke after pattern load\n   */\n  _initPattern: function(filler, property, callback) {\n    if (filler && filler.source && !(filler instanceof fabric.Pattern)) {\n      this.set(property, new fabric.Pattern(filler, callback));\n    }\n    else {\n      callback && callback();\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [options] Options object\n   */\n  _initClipping: function(options) {\n    if (!options.clipTo || typeof options.clipTo !== 'string') {\n      return;\n    }\n\n    var functionBody = fabric.util.getFunctionBody(options.clipTo);\n    if (typeof functionBody !== 'undefined') {\n      this.clipTo = new Function('ctx', functionBody);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _setObject: function(obj) {\n    for (var prop in obj) {\n      this._set(prop, obj[prop]);\n    }\n  },\n\n  /**\n   * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n   * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n   * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  set: function(key, value) {\n    if (typeof key === 'object') {\n      this._setObject(key);\n    }\n    else {\n      if (typeof value === 'function' && key !== 'clipTo') {\n        this._set(key, value(this.get(key)));\n      }\n      else {\n        this._set(key, value);\n      }\n    }\n    return this;\n  },\n\n  _set: function(key, value) {\n    this[key] = value;\n  },\n\n  /**\n   * Toggles specified property from `true` to `false` or from `false` to `true`\n   * @param {String} property Property to toggle\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  toggle: function(property) {\n    var value = this.get(property);\n    if (typeof value === 'boolean') {\n      this.set(property, !value);\n    }\n    return this;\n  },\n\n  /**\n   * Basic getter\n   * @param {String} property Property name\n   * @return {*} value of a property\n   */\n  get: function(property) {\n    return this[property];\n  }\n};\n\n\n(function(global) {\n\n  var sqrt = Math.sqrt,\n      atan2 = Math.atan2,\n      pow = Math.pow,\n      abs = Math.abs,\n      PiBy180 = Math.PI / 180,\n      PiBy2 = Math.PI / 2;\n\n  /**\n   * @namespace fabric.util\n   */\n  fabric.util = {\n\n    /**\n     * Calculate the cos of an angle, avoiding returning floats for known results\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} angle the angle in radians or in degree\n     * @return {Number}\n     */\n    cos: function(angle) {\n      if (angle === 0) { return 1; }\n      if (angle < 0) {\n        // cos(a) = cos(-a)\n        angle = -angle;\n      }\n      var angleSlice = angle / PiBy2;\n      switch (angleSlice) {\n        case 1: case 3: return 0;\n        case 2: return -1;\n      }\n      return Math.cos(angle);\n    },\n\n    /**\n     * Calculate the sin of an angle, avoiding returning floats for known results\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} angle the angle in radians or in degree\n     * @return {Number}\n     */\n    sin: function(angle) {\n      if (angle === 0) { return 0; }\n      var angleSlice = angle / PiBy2, sign = 1;\n      if (angle < 0) {\n        // sin(-a) = -sin(a)\n        sign = -1;\n      }\n      switch (angleSlice) {\n        case 1: return sign;\n        case 2: return 0;\n        case 3: return -sign;\n      }\n      return Math.sin(angle);\n    },\n\n    /**\n     * Removes value from an array.\n     * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} array\n     * @param {*} value\n     * @return {Array} original array\n     */\n    removeFromArray: function(array, value) {\n      var idx = array.indexOf(value);\n      if (idx !== -1) {\n        array.splice(idx, 1);\n      }\n      return array;\n    },\n\n    /**\n     * Returns random number between 2 specified ones.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} min lower limit\n     * @param {Number} max upper limit\n     * @return {Number} random value (between min and max)\n     */\n    getRandomInt: function(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n\n    /**\n     * Transforms degrees to radians.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} degrees value in degrees\n     * @return {Number} value in radians\n     */\n    degreesToRadians: function(degrees) {\n      return degrees * PiBy180;\n    },\n\n    /**\n     * Transforms radians to degrees.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} radians value in radians\n     * @return {Number} value in degrees\n     */\n    radiansToDegrees: function(radians) {\n      return radians / PiBy180;\n    },\n\n    /**\n     * Rotates `point` around `origin` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {fabric.Point} point The point to rotate\n     * @param {fabric.Point} origin The origin of the rotation\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {fabric.Point} The new rotated point\n     */\n    rotatePoint: function(point, origin, radians) {\n      point.subtractEquals(origin);\n      var v = fabric.util.rotateVector(point, radians);\n      return new fabric.Point(v.x, v.y).addEquals(origin);\n    },\n\n    /**\n     * Rotates `vector` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} vector The vector to rotate (x and y)\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {Object} The new rotated point\n     */\n    rotateVector: function(vector, radians) {\n      var sin = fabric.util.sin(radians),\n          cos = fabric.util.cos(radians),\n          rx = vector.x * cos - vector.y * sin,\n          ry = vector.x * sin + vector.y * cos;\n      return {\n        x: rx,\n        y: ry\n      };\n    },\n\n    /**\n     * Apply transform t to point p\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Point} p The point to transform\n     * @param  {Array} t The transform\n     * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n     * @return {fabric.Point} The transformed point\n     */\n    transformPoint: function(p, t, ignoreOffset) {\n      if (ignoreOffset) {\n        return new fabric.Point(\n          t[0] * p.x + t[2] * p.y,\n          t[1] * p.x + t[3] * p.y\n        );\n      }\n      return new fabric.Point(\n        t[0] * p.x + t[2] * p.y + t[4],\n        t[1] * p.x + t[3] * p.y + t[5]\n      );\n    },\n\n    /**\n     * Returns coordinates of points's bounding rectangle (left, top, width, height)\n     * @param {Array} points 4 points array\n     * @return {Object} Object with left, top, width, height properties\n     */\n    makeBoundingBoxFromPoints: function(points) {\n      var xPoints = [points[0].x, points[1].x, points[2].x, points[3].x],\n          minX = fabric.util.array.min(xPoints),\n          maxX = fabric.util.array.max(xPoints),\n          width = maxX - minX,\n          yPoints = [points[0].y, points[1].y, points[2].y, points[3].y],\n          minY = fabric.util.array.min(yPoints),\n          maxY = fabric.util.array.max(yPoints),\n          height = maxY - minY;\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Invert transformation t\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} t The transform\n     * @return {Array} The inverted transform\n     */\n    invertTransform: function(t) {\n      var a = 1 / (t[0] * t[3] - t[1] * t[2]),\n          r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],\n          o = fabric.util.transformPoint({ x: t[4], y: t[5] }, r, true);\n      r[4] = -o.x;\n      r[5] = -o.y;\n      return r;\n    },\n\n    /**\n     * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number|String} number number to operate on\n     * @param {Number} fractionDigits number of fraction digits to \"leave\"\n     * @return {Number}\n     */\n    toFixed: function(number, fractionDigits) {\n      return parseFloat(Number(number).toFixed(fractionDigits));\n    },\n\n    /**\n     * Converts from attribute value to pixel value if applicable.\n     * Returns converted pixels or original value not converted.\n     * @param {Number|String} value number to operate on\n     * @param {Number} fontSize\n     * @return {Number|String}\n     */\n    parseUnit: function(value, fontSize) {\n      var unit = /\\D{0,2}$/.exec(value),\n          number = parseFloat(value);\n      if (!fontSize) {\n        fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n      }\n      switch (unit[0]) {\n        case 'mm':\n          return number * fabric.DPI / 25.4;\n\n        case 'cm':\n          return number * fabric.DPI / 2.54;\n\n        case 'in':\n          return number * fabric.DPI;\n\n        case 'pt':\n          return number * fabric.DPI / 72; // or * 4 / 3\n\n        case 'pc':\n          return number * fabric.DPI / 72 * 12; // or * 16\n\n        case 'em':\n          return number * fontSize;\n\n        default:\n          return number;\n      }\n    },\n\n    /**\n     * Function which always returns `false`.\n     * @static\n     * @memberOf fabric.util\n     * @return {Boolean}\n     */\n    falseFunction: function() {\n      return false;\n    },\n\n    /**\n     * Returns klass \"Class\" object of given namespace\n     * @memberOf fabric.util\n     * @param {String} type Type of object (eg. 'circle')\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @return {Object} klass \"Class\"\n     */\n    getKlass: function(type, namespace) {\n      // capitalize first letter only\n      type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\n      return fabric.util.resolveNamespace(namespace)[type];\n    },\n\n    /**\n     * Returns array of attributes for given svg that fabric parses\n     * @memberOf fabric.util\n     * @param {String} type Type of svg element (eg. 'circle')\n     * @return {Array} string names of supported attributes\n     */\n    getSvgAttributes: function(type) {\n      var attributes = [\n        'instantiated_by_use',\n        'style',\n        'id',\n        'class'\n      ];\n      switch (type) {\n        case 'linearGradient':\n          attributes = attributes.concat(['x1', 'y1', 'x2', 'y2', 'gradientUnits', 'gradientTransform']);\n          break;\n        case 'radialGradient':\n          attributes = attributes.concat(['gradientUnits', 'gradientTransform', 'cx', 'cy', 'r', 'fx', 'fy', 'fr']);\n          break;\n        case 'stop':\n          attributes = attributes.concat(['offset', 'stop-color', 'stop-opacity']);\n          break;\n      }\n      return attributes;\n    },\n\n    /**\n     * Returns object of given namespace\n     * @memberOf fabric.util\n     * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'\n     * @return {Object} Object for given namespace (default fabric)\n     */\n    resolveNamespace: function(namespace) {\n      if (!namespace) {\n        return fabric;\n      }\n\n      var parts = namespace.split('.'),\n          len = parts.length, i,\n          obj = global || fabric.window;\n\n      for (i = 0; i < len; ++i) {\n        obj = obj[parts[i]];\n      }\n\n      return obj;\n    },\n\n    /**\n     * Loads image element from given url and passes it to a callback\n     * @memberOf fabric.util\n     * @param {String} url URL representing an image\n     * @param {Function} callback Callback; invoked with loaded image\n     * @param {*} [context] Context to invoke callback in\n     * @param {Object} [crossOrigin] crossOrigin value to set image element to\n     */\n    loadImage: function(url, callback, context, crossOrigin) {\n      if (!url) {\n        callback && callback.call(context, url);\n        return;\n      }\n\n      var img = fabric.util.createImage();\n\n      /** @ignore */\n      var onLoadCallback = function () {\n        callback && callback.call(context, img);\n        img = img.onload = img.onerror = null;\n      };\n\n      img.onload = onLoadCallback;\n      /** @ignore */\n      img.onerror = function() {\n        fabric.log('Error loading ' + img.src);\n        callback && callback.call(context, null, true);\n        img = img.onload = img.onerror = null;\n      };\n\n      // data-urls appear to be buggy with crossOrigin\n      // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767\n      // see https://code.google.com/p/chromium/issues/detail?id=315152\n      //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069\n      if (url.indexOf('data') !== 0 && crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n\n      // IE10 / IE11-Fix: SVG contents from data: URI\n      // will only be available if the IMG is present\n      // in the DOM (and visible)\n      if (url.substring(0,14) === 'data:image/svg') {\n        img.onload = null;\n        fabric.util.loadImageInDom(img, onLoadCallback);\n      }\n\n      img.src = url;\n    },\n\n    /**\n     * Attaches SVG image with data: URL to the dom\n     * @memberOf fabric.util\n     * @param {Object} img Image object with data:image/svg src\n     * @param {Function} callback Callback; invoked with loaded image\n     * @return {Object} DOM element (div containing the SVG image)\n     */\n    loadImageInDom: function(img, onLoadCallback) {\n      var div = fabric.document.createElement('div');\n      div.style.width = div.style.height = '1px';\n      div.style.left = div.style.top = '-100%';\n      div.style.position = 'absolute';\n      div.appendChild(img);\n      fabric.document.querySelector('body').appendChild(div);\n      /**\n       * Wrap in function to:\n       *   1. Call existing callback\n       *   2. Cleanup DOM\n       */\n      img.onload = function () {\n        onLoadCallback();\n        div.parentNode.removeChild(div);\n        div = null;\n      };\n    },\n\n    /**\n     * Creates corresponding fabric instances from their object representations\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} objects Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @param {Function} reviver Method for further parsing of object elements,\n     * called after each fabric object created.\n     */\n    enlivenObjects: function(objects, callback, namespace, reviver) {\n      objects = objects || [];\n\n      function onLoaded() {\n        if (++numLoadedObjects === numTotalObjects) {\n          callback && callback(enlivenedObjects);\n        }\n      }\n\n      var enlivenedObjects = [],\n          numLoadedObjects = 0,\n          numTotalObjects = objects.length;\n\n      if (!numTotalObjects) {\n        callback && callback(enlivenedObjects);\n        return;\n      }\n\n      objects.forEach(function (o, index) {\n        // if sparse array\n        if (!o || !o.type) {\n          onLoaded();\n          return;\n        }\n        var klass = fabric.util.getKlass(o.type, namespace);\n        klass.fromObject(o, function (obj, error) {\n          error || (enlivenedObjects[index] = obj);\n          reviver && reviver(o, obj, error);\n          onLoaded();\n        });\n      });\n    },\n\n    /**\n     * Create and wait for loading of patterns\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} patterns Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * called after each fabric object created.\n     */\n    enlivenPatterns: function(patterns, callback) {\n      patterns = patterns || [];\n\n      function onLoaded() {\n        if (++numLoadedPatterns === numPatterns) {\n          callback && callback(enlivenedPatterns);\n        }\n      }\n\n      var enlivenedPatterns = [],\n          numLoadedPatterns = 0,\n          numPatterns = patterns.length;\n\n      if (!numPatterns) {\n        callback && callback(enlivenedPatterns);\n        return;\n      }\n\n      patterns.forEach(function (p, index) {\n        if (p && p.source) {\n          new fabric.Pattern(p, function(pattern) {\n            enlivenedPatterns[index] = pattern;\n            onLoaded();\n          });\n        }\n        else {\n          enlivenedPatterns[index] = p;\n          onLoaded();\n        }\n      });\n    },\n\n    /**\n     * Groups SVG elements (usually those retrieved from SVG document)\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} elements SVG elements to group\n     * @param {Object} [options] Options object\n     * @param {String} path Value to set sourcePath to\n     * @return {fabric.Object|fabric.Group}\n     */\n    groupSVGElements: function(elements, options, path) {\n      var object;\n      if (elements.length === 1) {\n        return elements[0];\n      }\n      if (options) {\n        if (options.width && options.height) {\n          options.centerPoint = {\n            x: options.width / 2,\n            y: options.height / 2\n          };\n        }\n        else {\n          delete options.width;\n          delete options.height;\n        }\n      }\n      object = new fabric.Group(elements, options);\n      if (typeof path !== 'undefined') {\n        object.sourcePath = path;\n      }\n      return object;\n    },\n\n    /**\n     * Populates an object with properties of another object\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} source Source object\n     * @param {Object} destination Destination object\n     * @return {Array} properties Properties names to include\n     */\n    populateWithProperties: function(source, destination, properties) {\n      if (properties && Object.prototype.toString.call(properties) === '[object Array]') {\n        for (var i = 0, len = properties.length; i < len; i++) {\n          if (properties[i] in source) {\n            destination[properties[i]] = source[properties[i]];\n          }\n        }\n      }\n    },\n\n    /**\n     * Draws a dashed line between two points\n     *\n     * This method is used to draw dashed line around selection area.\n     * See <a href=\"http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas\">dotted stroke in canvas</a>\n     *\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x  start x coordinate\n     * @param {Number} y start y coordinate\n     * @param {Number} x2 end x coordinate\n     * @param {Number} y2 end y coordinate\n     * @param {Array} da dash array pattern\n     */\n    drawDashedLine: function(ctx, x, y, x2, y2, da) {\n      var dx = x2 - x,\n          dy = y2 - y,\n          len = sqrt(dx * dx + dy * dy),\n          rot = atan2(dy, dx),\n          dc = da.length,\n          di = 0,\n          draw = true;\n\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.moveTo(0, 0);\n      ctx.rotate(rot);\n\n      x = 0;\n      while (len > x) {\n        x += da[di++ % dc];\n        if (x > len) {\n          x = len;\n        }\n        ctx[draw ? 'lineTo' : 'moveTo'](x, 0);\n        draw = !draw;\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * Creates canvas element\n     * @static\n     * @memberOf fabric.util\n     * @return {CanvasElement} initialized canvas element\n     */\n    createCanvasElement: function() {\n      return fabric.document.createElement('canvas');\n    },\n\n    /**\n     * Creates image element (works on client and node)\n     * @static\n     * @memberOf fabric.util\n     * @return {HTMLImageElement} HTML image element\n     */\n    createImage: function() {\n      return fabric.document.createElement('img');\n    },\n\n    /**\n     * @static\n     * @memberOf fabric.util\n     * @deprecated since 2.0.0\n     * @param {fabric.Object} receiver Object implementing `clipTo` method\n     * @param {CanvasRenderingContext2D} ctx Context to clip\n     */\n    clipContext: function(receiver, ctx) {\n      ctx.save();\n      ctx.beginPath();\n      receiver.clipTo(ctx);\n      ctx.clip();\n    },\n\n    /**\n     * Multiply matrix A by matrix B to nest transformations\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a First transformMatrix\n     * @param  {Array} b Second transformMatrix\n     * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\n     * @return {Array} The product of the two transform matrices\n     */\n    multiplyTransformMatrices: function(a, b, is2x2) {\n      // Matrix multiply a * b\n      return [\n        a[0] * b[0] + a[2] * b[1],\n        a[1] * b[0] + a[3] * b[1],\n        a[0] * b[2] + a[2] * b[3],\n        a[1] * b[2] + a[3] * b[3],\n        is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4],\n        is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5]\n      ];\n    },\n\n    /**\n     * Decomposes standard 2x2 matrix into transform componentes\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a transformMatrix\n     * @return {Object} Components of transform\n     */\n    qrDecompose: function(a) {\n      var angle = atan2(a[1], a[0]),\n          denom = pow(a[0], 2) + pow(a[1], 2),\n          scaleX = sqrt(denom),\n          scaleY = (a[0] * a[3] - a[2] * a [1]) / scaleX,\n          skewX = atan2(a[0] * a[2] + a[1] * a [3], denom);\n      return {\n        angle: angle  / PiBy180,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        skewX: skewX / PiBy180,\n        skewY: 0,\n        translateX: a[4],\n        translateY: a[5]\n      };\n    },\n\n    customTransformMatrix: function(scaleX, scaleY, skewX) {\n      var skewMatrixX = [1, 0, abs(Math.tan(skewX * PiBy180)), 1],\n          scaleMatrix = [abs(scaleX), 0, 0, abs(scaleY)];\n      return fabric.util.multiplyTransformMatrices(scaleMatrix, skewMatrixX, true);\n    },\n\n    resetObjectTransform: function (target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.flipX = false;\n      target.flipY = false;\n      target.rotate(0);\n    },\n\n    /**\n     * Returns string representation of function body\n     * @param {Function} fn Function to get body of\n     * @return {String} Function body\n     */\n    getFunctionBody: function(fn) {\n      return (String(fn).match(/function[^{]*\\{([\\s\\S]*)\\}/) || {})[1];\n    },\n\n    /**\n     * Returns true if context has transparent pixel\n     * at specified location (taking tolerance into account)\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x x coordinate\n     * @param {Number} y y coordinate\n     * @param {Number} tolerance Tolerance\n     */\n    isTransparent: function(ctx, x, y, tolerance) {\n\n      // If tolerance is > 0 adjust start coords to take into account.\n      // If moves off Canvas fix to 0\n      if (tolerance > 0) {\n        if (x > tolerance) {\n          x -= tolerance;\n        }\n        else {\n          x = 0;\n        }\n        if (y > tolerance) {\n          y -= tolerance;\n        }\n        else {\n          y = 0;\n        }\n      }\n\n      var _isTransparent = true, i, temp,\n          imageData = ctx.getImageData(x, y, (tolerance * 2) || 1, (tolerance * 2) || 1),\n          l = imageData.data.length;\n\n      // Split image data - for tolerance > 1, pixelDataSize = 4;\n      for (i = 3; i < l; i += 4) {\n        temp = imageData.data[i];\n        _isTransparent = temp <= 0;\n        if (_isTransparent === false) {\n          break; // Stop if colour found\n        }\n      }\n\n      imageData = null;\n\n      return _isTransparent;\n    },\n\n    /**\n     * Parse preserveAspectRatio attribute from element\n     * @param {string} attribute to be parsed\n     * @return {Object} an object containing align and meetOrSlice attribute\n     */\n    parsePreserveAspectRatioAttribute: function(attribute) {\n      var meetOrSlice = 'meet', alignX = 'Mid', alignY = 'Mid',\n          aspectRatioAttrs = attribute.split(' '), align;\n\n      if (aspectRatioAttrs && aspectRatioAttrs.length) {\n        meetOrSlice = aspectRatioAttrs.pop();\n        if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {\n          align = meetOrSlice;\n          meetOrSlice = 'meet';\n        }\n        else if (aspectRatioAttrs.length) {\n          align = aspectRatioAttrs.pop();\n        }\n      }\n      //divide align in alignX and alignY\n      alignX = align !== 'none' ? align.slice(1, 4) : 'none';\n      alignY = align !== 'none' ? align.slice(5, 8) : 'none';\n      return {\n        meetOrSlice: meetOrSlice,\n        alignX: alignX,\n        alignY: alignY\n      };\n    },\n\n    /**\n     * Clear char widths cache for the given font family or all the cache if no\n     * fontFamily is specified.\n     * Use it if you know you are loading fonts in a lazy way and you are not waiting\n     * for custom fonts to load properly when adding text objects to the canvas.\n     * If a text object is added when its own font is not loaded yet, you will get wrong\n     * measurement and so wrong bounding boxes.\n     * After the font cache is cleared, either change the textObject text content or call\n     * initDimensions() to trigger a recalculation\n     * @memberOf fabric.util\n     * @param {String} [fontFamily] font family to clear\n     */\n    clearFabricFontCache: function(fontFamily) {\n      fontFamily = (fontFamily || '').toLowerCase();\n      if (!fontFamily) {\n        fabric.charWidthsCache = { };\n      }\n      else if (fabric.charWidthsCache[fontFamily]) {\n        delete fabric.charWidthsCache[fontFamily];\n      }\n    },\n\n    /**\n     * Given current aspect ratio, determines the max width and height that can\n     * respect the total allowed area for the cache.\n     * @memberOf fabric.util\n     * @param {Number} ar aspect ratio\n     * @param {Number} maximumArea Maximum area you want to achieve\n     * @return {Object.x} Limited dimensions by X\n     * @return {Object.y} Limited dimensions by Y\n     */\n    limitDimsByArea: function(ar, maximumArea) {\n      var roughWidth = Math.sqrt(maximumArea * ar),\n          perfLimitSizeY = Math.floor(maximumArea / roughWidth);\n      return { x: Math.floor(roughWidth), y: perfLimitSizeY };\n    },\n\n    capValue: function(min, value, max) {\n      return Math.max(min, Math.min(value, max));\n    },\n\n    findScaleToFit: function(source, destination) {\n      return Math.min(destination.width / source.width, destination.height / source.height);\n    },\n\n    findScaleToCover: function(source, destination) {\n      return Math.max(destination.width / source.width, destination.height / source.height);\n    }\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var arcToSegmentsCache = { },\n      segmentToBezierCache = { },\n      boundsOfCurveCache = { },\n      _join = Array.prototype.join;\n\n  /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp\n   * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n   * http://mozilla.org/MPL/2.0/\n   */\n  function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\n    var argsString = _join.call(arguments);\n    if (arcToSegmentsCache[argsString]) {\n      return arcToSegmentsCache[argsString];\n    }\n\n    var PI = Math.PI, th = rotateX * PI / 180,\n        sinTh = fabric.util.sin(th),\n        cosTh = fabric.util.cos(th),\n        fromX = 0, fromY = 0;\n\n    rx = Math.abs(rx);\n    ry = Math.abs(ry);\n\n    var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,\n        py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,\n        rx2 = rx * rx, ry2 = ry * ry, py2 = py * py, px2 = px * px,\n        pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,\n        root = 0;\n\n    if (pl < 0) {\n      var s = Math.sqrt(1 - pl / (rx2 * ry2));\n      rx *= s;\n      ry *= s;\n    }\n    else {\n      root = (large === sweep ? -1.0 : 1.0) *\n              Math.sqrt( pl / (rx2 * py2 + ry2 * px2));\n    }\n\n    var cx = root * rx * py / ry,\n        cy = -root * ry * px / rx,\n        cx1 = cosTh * cx - sinTh * cy + toX * 0.5,\n        cy1 = sinTh * cx + cosTh * cy + toY * 0.5,\n        mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),\n        dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\n\n    if (sweep === 0 && dtheta > 0) {\n      dtheta -= 2 * PI;\n    }\n    else if (sweep === 1 && dtheta < 0) {\n      dtheta += 2 * PI;\n    }\n\n    // Convert into cubic bezier segments <= 90deg\n    var segments = Math.ceil(Math.abs(dtheta / PI * 2)),\n        result = [], mDelta = dtheta / segments,\n        mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),\n        th3 = mTheta + mDelta;\n\n    for (var i = 0; i < segments; i++) {\n      result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\n      fromX = result[i][4];\n      fromY = result[i][5];\n      mTheta = th3;\n      th3 += mDelta;\n    }\n    arcToSegmentsCache[argsString] = result;\n    return result;\n  }\n\n  function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\n    var argsString2 = _join.call(arguments);\n    if (segmentToBezierCache[argsString2]) {\n      return segmentToBezierCache[argsString2];\n    }\n\n    var costh2 = fabric.util.cos(th2),\n        sinth2 = fabric.util.sin(th2),\n        costh3 = fabric.util.cos(th3),\n        sinth3 = fabric.util.sin(th3),\n        toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,\n        toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,\n        cp1X = fromX + mT * ( -cosTh * rx * sinth2 - sinTh * ry * costh2),\n        cp1Y = fromY + mT * ( -sinTh * rx * sinth2 + cosTh * ry * costh2),\n        cp2X = toX + mT * ( cosTh * rx * sinth3 + sinTh * ry * costh3),\n        cp2Y = toY + mT * ( sinTh * rx * sinth3 - cosTh * ry * costh3);\n\n    segmentToBezierCache[argsString2] = [\n      cp1X, cp1Y,\n      cp2X, cp2Y,\n      toX, toY\n    ];\n    return segmentToBezierCache[argsString2];\n  }\n\n  /*\n   * Private\n   */\n  function calcVectorAngle(ux, uy, vx, vy) {\n    var ta = Math.atan2(uy, ux),\n        tb = Math.atan2(vy, vx);\n    if (tb >= ta) {\n      return tb - ta;\n    }\n    else {\n      return 2 * Math.PI - (ta - tb);\n    }\n  }\n\n  /**\n   * Draws arc\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Number} fx\n   * @param {Number} fy\n   * @param {Array} coords\n   */\n  fabric.util.drawArc = function(ctx, fx, fy, coords) {\n    var rx = coords[0],\n        ry = coords[1],\n        rot = coords[2],\n        large = coords[3],\n        sweep = coords[4],\n        tx = coords[5],\n        ty = coords[6],\n        segs = [[], [], [], []],\n        segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segsNorm.length; i < len; i++) {\n      segs[i][0] = segsNorm[i][0] + fx;\n      segs[i][1] = segsNorm[i][1] + fy;\n      segs[i][2] = segsNorm[i][2] + fx;\n      segs[i][3] = segsNorm[i][3] + fy;\n      segs[i][4] = segsNorm[i][4] + fx;\n      segs[i][5] = segsNorm[i][5] + fy;\n      ctx.bezierCurveTo.apply(ctx, segs[i]);\n    }\n  };\n\n  /**\n   * Calculate bounding box of a elliptic-arc\n   * @param {Number} fx start point of arc\n   * @param {Number} fy\n   * @param {Number} rx horizontal radius\n   * @param {Number} ry vertical radius\n   * @param {Number} rot angle of horizontal axe\n   * @param {Number} large 1 or 0, whatever the arc is the big or the small on the 2 points\n   * @param {Number} sweep 1 or 0, 1 clockwise or counterclockwise direction\n   * @param {Number} tx end point of arc\n   * @param {Number} ty\n   */\n  fabric.util.getBoundsOfArc = function(fx, fy, rx, ry, rot, large, sweep, tx, ty) {\n\n    var fromX = 0, fromY = 0, bound, bounds = [],\n        segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segs.length; i < len; i++) {\n      bound = getBoundsOfCurve(fromX, fromY, segs[i][0], segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5]);\n      bounds.push({ x: bound[0].x + fx, y: bound[0].y + fy });\n      bounds.push({ x: bound[1].x + fx, y: bound[1].y + fy });\n      fromX = segs[i][4];\n      fromY = segs[i][5];\n    }\n    return bounds;\n  };\n\n  /**\n   * Calculate bounding box of a beziercurve\n   * @param {Number} x0 starting point\n   * @param {Number} y0\n   * @param {Number} x1 first control point\n   * @param {Number} y1\n   * @param {Number} x2 secondo control point\n   * @param {Number} y2\n   * @param {Number} x3 end of beizer\n   * @param {Number} y3\n   */\n  // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.\n  function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var argsString = _join.call(arguments);\n    if (boundsOfCurveCache[argsString]) {\n      return boundsOfCurveCache[argsString];\n    }\n\n    var sqrt = Math.sqrt,\n        min = Math.min, max = Math.max,\n        abs = Math.abs, tvalues = [],\n        bounds = [[], []],\n        a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n\n    b = 6 * x0 - 12 * x1 + 6 * x2;\n    a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n    c = 3 * x1 - 3 * x0;\n\n    for (var i = 0; i < 2; ++i) {\n      if (i > 0) {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n\n      if (abs(a) < 1e-12) {\n        if (abs(b) < 1e-12) {\n          continue;\n        }\n        t = -c / b;\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n        continue;\n      }\n      b2ac = b * b - 4 * c * a;\n      if (b2ac < 0) {\n        continue;\n      }\n      sqrtb2ac = sqrt(b2ac);\n      t1 = (-b + sqrtb2ac) / (2 * a);\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n      t2 = (-b - sqrtb2ac) / (2 * a);\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    var x, y, j = tvalues.length, jlen = j, mt;\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      x = (mt * mt * mt * x0) + (3 * mt * mt * t * x1) + (3 * mt * t * t * x2) + (t * t * t * x3);\n      bounds[0][j] = x;\n\n      y = (mt * mt * mt * y0) + (3 * mt * mt * t * y1) + (3 * mt * t * t * y2) + (t * t * t * y3);\n      bounds[1][j] = y;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    var result = [\n      {\n        x: min.apply(null, bounds[0]),\n        y: min.apply(null, bounds[1])\n      },\n      {\n        x: max.apply(null, bounds[0]),\n        y: max.apply(null, bounds[1])\n      }\n    ];\n    boundsOfCurveCache[argsString] = result;\n    return result;\n  }\n\n  fabric.util.getBoundsOfCurve = getBoundsOfCurve;\n\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice;\n\n  /**\n   * Invokes method on all items in a given array\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} method Name of a method to invoke\n   * @return {Array}\n   */\n  function invoke(array, method) {\n    var args = slice.call(arguments, 2), result = [];\n    for (var i = 0, len = array.length; i < len; i++) {\n      result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\n    }\n    return result;\n  }\n\n  /**\n   * Finds maximum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function max(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 >= value2;\n    });\n  }\n\n  /**\n   * Finds minimum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n  function min(array, byProperty) {\n    return find(array, byProperty, function(value1, value2) {\n      return value1 < value2;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function fill(array, value) {\n    var k = array.length;\n    while (k--) {\n      array[k] = value;\n    }\n    return array;\n  }\n\n  /**\n   * @private\n   */\n  function find(array, byProperty, condition) {\n    if (!array || array.length === 0) {\n      return;\n    }\n\n    var i = array.length - 1,\n        result = byProperty ? array[i][byProperty] : array[i];\n    if (byProperty) {\n      while (i--) {\n        if (condition(array[i][byProperty], result)) {\n          result = array[i][byProperty];\n        }\n      }\n    }\n    else {\n      while (i--) {\n        if (condition(array[i], result)) {\n          result = array[i];\n        }\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @namespace fabric.util.array\n   */\n  fabric.util.array = {\n    fill: fill,\n    invoke: invoke,\n    min: min,\n    max: max\n  };\n\n})();\n\n\n(function() {\n  /**\n   * Copies all enumerable properties of one js object to another\n   * Does not clone or extend fabric.Object subclasses.\n   * @memberOf fabric.util.object\n   * @param {Object} destination Where to copy to\n   * @param {Object} source Where to copy from\n   * @return {Object}\n   */\n\n  function extend(destination, source, deep) {\n    // JScript DontEnum bug is not taken care of\n    // the deep clone is for internal use, is not meant to avoid\n    // javascript traps or cloning html element or self referenced objects.\n    if (deep) {\n      if (!fabric.isLikelyNode && source instanceof Element) {\n        // avoid cloning deep images, canvases,\n        destination = source;\n      }\n      else if (source instanceof Array) {\n        destination = [];\n        for (var i = 0, len = source.length; i < len; i++) {\n          destination[i] = extend({ }, source[i], deep);\n        }\n      }\n      else if (source && typeof source === 'object') {\n        for (var property in source) {\n          if (source.hasOwnProperty(property)) {\n            destination[property] = extend({ }, source[property], deep);\n          }\n        }\n      }\n      else {\n        // this sounds odd for an extend but is ok for recursive use\n        destination = source;\n      }\n    }\n    else {\n      for (var property in source) {\n        destination[property] = source[property];\n      }\n    }\n    return destination;\n  }\n\n  /**\n   * Creates an empty object and copies all enumerable properties of another object to it\n   * @memberOf fabric.util.object\n   * TODO: this function return an empty object if you try to clone null\n   * @param {Object} object Object to clone\n   * @return {Object}\n   */\n  function clone(object, deep) {\n    return extend({ }, object, deep);\n  }\n\n  /** @namespace fabric.util.object */\n  fabric.util.object = {\n    extend: extend,\n    clone: clone\n  };\n  fabric.util.object.extend(fabric.util, fabric.Observable);\n})();\n\n\n(function() {\n\n  /**\n   * Camelizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to camelize\n   * @return {String} Camelized version of a string\n   */\n  function camelize(string) {\n    return string.replace(/-+(.)?/g, function(match, character) {\n      return character ? character.toUpperCase() : '';\n    });\n  }\n\n  /**\n   * Capitalizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to capitalize\n   * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n   * and other letters stay untouched, if false first letter is capitalized\n   * and other letters are converted to lowercase.\n   * @return {String} Capitalized version of a string\n   */\n  function capitalize(string, firstLetterOnly) {\n    return string.charAt(0).toUpperCase() +\n      (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\n  }\n\n  /**\n   * Escapes XML in a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to escape\n   * @return {String} Escaped version of a string\n   */\n  function escapeXml(string) {\n    return string.replace(/&/g, '&amp;')\n      .replace(/\"/g, '&quot;')\n      .replace(/'/g, '&apos;')\n      .replace(/</g, '&lt;')\n      .replace(/>/g, '&gt;');\n  }\n\n  /**\n   * Divide a string in the user perceived single units\n   * @memberOf fabric.util.string\n   * @param {String} textstring String to escape\n   * @return {Array} array containing the graphemes\n   */\n  function graphemeSplit(textstring) {\n    var i = 0, chr, graphemes = [];\n    for (i = 0, chr; i < textstring.length; i++) {\n      if ((chr = getWholeChar(textstring, i)) === false) {\n        continue;\n      }\n      graphemes.push(chr);\n    }\n    return graphemes;\n  }\n\n  // taken from mdn in the charAt doc page.\n  function getWholeChar(str, i) {\n    var code = str.charCodeAt(i);\n\n    if (isNaN(code)) {\n      return ''; // Position not found\n    }\n    if (code < 0xD800 || code > 0xDFFF) {\n      return str.charAt(i);\n    }\n\n    // High surrogate (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n    if (0xD800 <= code && code <= 0xDBFF) {\n      if (str.length <= (i + 1)) {\n        throw 'High surrogate without following low surrogate';\n      }\n      var next = str.charCodeAt(i + 1);\n      if (0xDC00 > next || next > 0xDFFF) {\n        throw 'High surrogate without following low surrogate';\n      }\n      return str.charAt(i) + str.charAt(i + 1);\n    }\n    // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\n    if (i === 0) {\n      throw 'Low surrogate without preceding high surrogate';\n    }\n    var prev = str.charCodeAt(i - 1);\n\n    // (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n    if (0xD800 > prev || prev > 0xDBFF) {\n      throw 'Low surrogate without preceding high surrogate';\n    }\n    // We can pass over low surrogates now as the second component\n    // in a pair which we have already processed\n    return false;\n  }\n\n\n  /**\n   * String utilities\n   * @namespace fabric.util.string\n   */\n  fabric.util.string = {\n    camelize: camelize,\n    capitalize: capitalize,\n    escapeXml: escapeXml,\n    graphemeSplit: graphemeSplit\n  };\n})();\n\n\n(function() {\n\n  var slice = Array.prototype.slice, emptyFunction = function() { },\n\n      IS_DONTENUM_BUGGY = (function() {\n        for (var p in { toString: 1 }) {\n          if (p === 'toString') {\n            return false;\n          }\n        }\n        return true;\n      })(),\n\n      /** @ignore */\n      addMethods = function(klass, source, parent) {\n        for (var property in source) {\n\n          if (property in klass.prototype &&\n              typeof klass.prototype[property] === 'function' &&\n              (source[property] + '').indexOf('callSuper') > -1) {\n\n            klass.prototype[property] = (function(property) {\n              return function() {\n\n                var superclass = this.constructor.superclass;\n                this.constructor.superclass = parent;\n                var returnValue = source[property].apply(this, arguments);\n                this.constructor.superclass = superclass;\n\n                if (property !== 'initialize') {\n                  return returnValue;\n                }\n              };\n            })(property);\n          }\n          else {\n            klass.prototype[property] = source[property];\n          }\n\n          if (IS_DONTENUM_BUGGY) {\n            if (source.toString !== Object.prototype.toString) {\n              klass.prototype.toString = source.toString;\n            }\n            if (source.valueOf !== Object.prototype.valueOf) {\n              klass.prototype.valueOf = source.valueOf;\n            }\n          }\n        }\n      };\n\n  function Subclass() { }\n\n  function callSuper(methodName) {\n    var parentMethod = null,\n        _this = this;\n\n    // climb prototype chain to find method not equal to callee's method\n    while (_this.constructor.superclass) {\n      var superClassMethod = _this.constructor.superclass.prototype[methodName];\n      if (_this[methodName] !== superClassMethod) {\n        parentMethod = superClassMethod;\n        break;\n      }\n      // eslint-disable-next-line\n      _this = _this.constructor.superclass.prototype;\n    }\n\n    if (!parentMethod) {\n      return console.log('tried to callSuper ' + methodName + ', method not found in prototype chain', this);\n    }\n\n    return (arguments.length > 1)\n      ? parentMethod.apply(this, slice.call(arguments, 1))\n      : parentMethod.call(this);\n  }\n\n  /**\n   * Helper for creation of \"classes\".\n   * @memberOf fabric.util\n   * @param {Function} [parent] optional \"Class\" to inherit from\n   * @param {Object} [properties] Properties shared by all instances of this class\n   *                  (be careful modifying objects defined here as this would affect all instances)\n   */\n  function createClass() {\n    var parent = null,\n        properties = slice.call(arguments, 0);\n\n    if (typeof properties[0] === 'function') {\n      parent = properties.shift();\n    }\n    function klass() {\n      this.initialize.apply(this, arguments);\n    }\n\n    klass.superclass = parent;\n    klass.subclasses = [];\n\n    if (parent) {\n      Subclass.prototype = parent.prototype;\n      klass.prototype = new Subclass();\n      parent.subclasses.push(klass);\n    }\n    for (var i = 0, length = properties.length; i < length; i++) {\n      addMethods(klass, properties[i], parent);\n    }\n    if (!klass.prototype.initialize) {\n      klass.prototype.initialize = emptyFunction;\n    }\n    klass.prototype.constructor = klass;\n    klass.prototype.callSuper = callSuper;\n    return klass;\n  }\n\n  fabric.util.createClass = createClass;\n})();\n\n\n(function () {\n\n  var unknown = 'unknown';\n\n  /* EVENT HANDLING */\n\n  function areHostMethods(object) {\n    var methodNames = Array.prototype.slice.call(arguments, 1),\n        t, i, len = methodNames.length;\n    for (i = 0; i < len; i++) {\n      t = typeof object[methodNames[i]];\n      if (!(/^(?:function|object|unknown)$/).test(t)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /** @ignore */\n  var getElement,\n      setElement,\n      getUniqueId = (function () {\n        var uid = 0;\n        return function (element) {\n          return element.__uniqueID || (element.__uniqueID = 'uniqueID__' + uid++);\n        };\n      })();\n\n  (function () {\n    var elements = { };\n    /** @ignore */\n    getElement = function (uid) {\n      return elements[uid];\n    };\n    /** @ignore */\n    setElement = function (uid, element) {\n      elements[uid] = element;\n    };\n  })();\n\n  function createListener(uid, handler) {\n    return {\n      handler: handler,\n      wrappedHandler: createWrappedHandler(uid, handler)\n    };\n  }\n\n  function createWrappedHandler(uid, handler) {\n    return function (e) {\n      handler.call(getElement(uid), e || fabric.window.event);\n    };\n  }\n\n  function createDispatcher(uid, eventName) {\n    return function (e) {\n      if (handlers[uid] && handlers[uid][eventName]) {\n        var handlersForEvent = handlers[uid][eventName];\n        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n          handlersForEvent[i].call(this, e || fabric.window.event);\n        }\n      }\n    };\n  }\n\n  var shouldUseAddListenerRemoveListener = (\n        areHostMethods(fabric.document.documentElement, 'addEventListener', 'removeEventListener') &&\n        areHostMethods(fabric.window, 'addEventListener', 'removeEventListener')),\n\n      shouldUseAttachEventDetachEvent = (\n        areHostMethods(fabric.document.documentElement, 'attachEvent', 'detachEvent') &&\n        areHostMethods(fabric.window, 'attachEvent', 'detachEvent')),\n\n      // IE branch\n      listeners = { },\n\n      // DOM L0 branch\n      handlers = { },\n\n      addListener, removeListener;\n\n  if (shouldUseAddListenerRemoveListener) {\n    /** @ignore */\n    addListener = function (element, eventName, handler, options) {\n      // since ie10 or ie9 can use addEventListener but they do not support options, i need to check\n      element && element.addEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler, options) {\n      element && element.removeEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\n    };\n  }\n\n  else if (shouldUseAttachEventDetachEvent) {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      setElement(uid, element);\n      if (!listeners[uid]) {\n        listeners[uid] = { };\n      }\n      if (!listeners[uid][eventName]) {\n        listeners[uid][eventName] = [];\n\n      }\n      var listener = createListener(uid, handler);\n      listeners[uid][eventName].push(listener);\n      element.attachEvent('on' + eventName, listener.wrappedHandler);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element), listener;\n      if (listeners[uid] && listeners[uid][eventName]) {\n        for (var i = 0, len = listeners[uid][eventName].length; i < len; i++) {\n          listener = listeners[uid][eventName][i];\n          if (listener && listener.handler === handler) {\n            element.detachEvent('on' + eventName, listener.wrappedHandler);\n            listeners[uid][eventName][i] = null;\n          }\n        }\n      }\n    };\n  }\n  else {\n    /** @ignore */\n    addListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      if (!handlers[uid]) {\n        handlers[uid] = { };\n      }\n      if (!handlers[uid][eventName]) {\n        handlers[uid][eventName] = [];\n        var existingHandler = element['on' + eventName];\n        if (existingHandler) {\n          handlers[uid][eventName].push(existingHandler);\n        }\n        element['on' + eventName] = createDispatcher(uid, eventName);\n      }\n      handlers[uid][eventName].push(handler);\n    };\n    /** @ignore */\n    removeListener = function (element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n      var uid = getUniqueId(element);\n      if (handlers[uid] && handlers[uid][eventName]) {\n        var handlersForEvent = handlers[uid][eventName];\n        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n          if (handlersForEvent[i] === handler) {\n            handlersForEvent.splice(i, 1);\n          }\n        }\n      }\n    };\n  }\n\n  /**\n   * Adds an event listener to an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.addListener = addListener;\n\n  /**\n   * Removes an event listener from an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  fabric.util.removeListener = removeListener;\n\n  /**\n   * Cross-browser wrapper for getting event's coordinates\n   * @memberOf fabric.util\n   * @param {Event} event Event object\n   */\n  function getPointer(event) {\n    event || (event = fabric.window.event);\n\n    var element = event.target ||\n                  (typeof event.srcElement !== unknown ? event.srcElement : null),\n\n        scroll = fabric.util.getScrollLeftTop(element);\n    return {\n      x: pointerX(event) + scroll.left,\n      y: pointerY(event) + scroll.top\n    };\n  }\n\n  var pointerX = function(event) {\n        return event.clientX;\n      },\n\n      pointerY = function(event) {\n        return event.clientY;\n      };\n\n  function _getPointer(event, pageProp, clientProp) {\n    var touchProp = event.type === 'touchend' ? 'changedTouches' : 'touches';\n    var pointer, eventTouchProp = event[touchProp];\n\n    if (eventTouchProp && eventTouchProp[0]) {\n      pointer = eventTouchProp[0][clientProp];\n    }\n\n    if (typeof pointer === 'undefined') {\n      pointer = event[clientProp];\n    }\n\n    return pointer;\n  }\n\n  if (fabric.isTouchSupported) {\n    pointerX = function(event) {\n      return _getPointer(event, 'pageX', 'clientX');\n    };\n    pointerY = function(event) {\n      return _getPointer(event, 'pageY', 'clientY');\n    };\n  }\n\n  fabric.util.getPointer = getPointer;\n\n})();\n\n\n(function () {\n\n  /**\n   * Cross-browser wrapper for setting element's style\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {Object} styles\n   * @return {HTMLElement} Element that was passed as a first argument\n   */\n  function setStyle(element, styles) {\n    var elementStyle = element.style;\n    if (!elementStyle) {\n      return element;\n    }\n    if (typeof styles === 'string') {\n      element.style.cssText += ';' + styles;\n      return styles.indexOf('opacity') > -1\n        ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1])\n        : element;\n    }\n    for (var property in styles) {\n      if (property === 'opacity') {\n        setOpacity(element, styles[property]);\n      }\n      else {\n        var normalizedProperty = (property === 'float' || property === 'cssFloat')\n          ? (typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat')\n          : property;\n        elementStyle[normalizedProperty] = styles[property];\n      }\n    }\n    return element;\n  }\n\n  var parseEl = fabric.document.createElement('div'),\n      supportsOpacity = typeof parseEl.style.opacity === 'string',\n      supportsFilters = typeof parseEl.style.filter === 'string',\n      reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/,\n\n      /** @ignore */\n      setOpacity = function (element) { return element; };\n\n  if (supportsOpacity) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      element.style.opacity = value;\n      return element;\n    };\n  }\n  else if (supportsFilters) {\n    /** @ignore */\n    setOpacity = function(element, value) {\n      var es = element.style;\n      if (element.currentStyle && !element.currentStyle.hasLayout) {\n        es.zoom = 1;\n      }\n      if (reOpacity.test(es.filter)) {\n        value = value >= 0.9999 ? '' : ('alpha(opacity=' + (value * 100) + ')');\n        es.filter = es.filter.replace(reOpacity, value);\n      }\n      else {\n        es.filter += ' alpha(opacity=' + (value * 100) + ')';\n      }\n      return element;\n    };\n  }\n\n  fabric.util.setStyle = setStyle;\n\n})();\n\n\n(function() {\n\n  var _slice = Array.prototype.slice;\n\n  /**\n   * Takes id and returns an element with that id (if one exists in a document)\n   * @memberOf fabric.util\n   * @param {String|HTMLElement} id\n   * @return {HTMLElement|null}\n   */\n  function getById(id) {\n    return typeof id === 'string' ? fabric.document.getElementById(id) : id;\n  }\n\n  var sliceCanConvertNodelists,\n      /**\n       * Converts an array-like object (e.g. arguments or NodeList) to an array\n       * @memberOf fabric.util\n       * @param {Object} arrayLike\n       * @return {Array}\n       */\n      toArray = function(arrayLike) {\n        return _slice.call(arrayLike, 0);\n      };\n\n  try {\n    sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\n  }\n  catch (err) { }\n\n  if (!sliceCanConvertNodelists) {\n    toArray = function(arrayLike) {\n      var arr = new Array(arrayLike.length), i = arrayLike.length;\n      while (i--) {\n        arr[i] = arrayLike[i];\n      }\n      return arr;\n    };\n  }\n\n  /**\n   * Creates specified element with specified attributes\n   * @memberOf fabric.util\n   * @param {String} tagName Type of an element to create\n   * @param {Object} [attributes] Attributes to set on an element\n   * @return {HTMLElement} Newly created element\n   */\n  function makeElement(tagName, attributes) {\n    var el = fabric.document.createElement(tagName);\n    for (var prop in attributes) {\n      if (prop === 'class') {\n        el.className = attributes[prop];\n      }\n      else if (prop === 'for') {\n        el.htmlFor = attributes[prop];\n      }\n      else {\n        el.setAttribute(prop, attributes[prop]);\n      }\n    }\n    return el;\n  }\n\n  /**\n   * Adds class to an element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to add class to\n   * @param {String} className Class to add to an element\n   */\n  function addClass(element, className) {\n    if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {\n      element.className += (element.className ? ' ' : '') + className;\n    }\n  }\n\n  /**\n   * Wraps element with another element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to wrap\n   * @param {HTMLElement|String} wrapper Element to wrap with\n   * @param {Object} [attributes] Attributes to set on a wrapper\n   * @return {HTMLElement} wrapper\n   */\n  function wrapElement(element, wrapper, attributes) {\n    if (typeof wrapper === 'string') {\n      wrapper = makeElement(wrapper, attributes);\n    }\n    if (element.parentNode) {\n      element.parentNode.replaceChild(wrapper, element);\n    }\n    wrapper.appendChild(element);\n    return wrapper;\n  }\n\n  /**\n   * Returns element scroll offsets\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to operate on\n   * @return {Object} Object with left/top values\n   */\n  function getScrollLeftTop(element) {\n\n    var left = 0,\n        top = 0,\n        docElement = fabric.document.documentElement,\n        body = fabric.document.body || {\n          scrollLeft: 0, scrollTop: 0\n        };\n\n    // While loop checks (and then sets element to) .parentNode OR .host\n    //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\n    //  but the .parentNode of a root ShadowDOM node will always be null, instead\n    //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\n    while (element && (element.parentNode || element.host)) {\n\n      // Set element to element parent, or 'host' in case of ShadowDOM\n      element = element.parentNode || element.host;\n\n      if (element === fabric.document) {\n        left = body.scrollLeft || docElement.scrollLeft || 0;\n        top = body.scrollTop ||  docElement.scrollTop || 0;\n      }\n      else {\n        left += element.scrollLeft || 0;\n        top += element.scrollTop || 0;\n      }\n\n      if (element.nodeType === 1 && element.style.position === 'fixed') {\n        break;\n      }\n    }\n\n    return { left: left, top: top };\n  }\n\n  /**\n   * Returns offset for a given element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get offset for\n   * @return {Object} Object with \"left\" and \"top\" properties\n   */\n  function getElementOffset(element) {\n    var docElem,\n        doc = element && element.ownerDocument,\n        box = { left: 0, top: 0 },\n        offset = { left: 0, top: 0 },\n        scrollLeftTop,\n        offsetAttributes = {\n          borderLeftWidth: 'left',\n          borderTopWidth:  'top',\n          paddingLeft:     'left',\n          paddingTop:      'top'\n        };\n\n    if (!doc) {\n      return offset;\n    }\n\n    for (var attr in offsetAttributes) {\n      offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\n    }\n\n    docElem = doc.documentElement;\n    if ( typeof element.getBoundingClientRect !== 'undefined' ) {\n      box = element.getBoundingClientRect();\n    }\n\n    scrollLeftTop = getScrollLeftTop(element);\n\n    return {\n      left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n      top: box.top + scrollLeftTop.top - (docElem.clientTop || 0)  + offset.top\n    };\n  }\n\n  /**\n   * Returns style attribute value of a given element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get style attribute for\n   * @param {String} attr Style attribute to get for element\n   * @return {String} Style attribute value of the given element.\n   */\n  var getElementStyle;\n  if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\n    getElementStyle = function(element, attr) {\n      var style = fabric.document.defaultView.getComputedStyle(element, null);\n      return style ? style[attr] : undefined;\n    };\n  }\n  else {\n    getElementStyle = function(element, attr) {\n      var value = element.style[attr];\n      if (!value && element.currentStyle) {\n        value = element.currentStyle[attr];\n      }\n      return value;\n    };\n  }\n\n  (function () {\n    var style = fabric.document.documentElement.style,\n        selectProp = 'userSelect' in style\n          ? 'userSelect'\n          : 'MozUserSelect' in style\n            ? 'MozUserSelect'\n            : 'WebkitUserSelect' in style\n              ? 'WebkitUserSelect'\n              : 'KhtmlUserSelect' in style\n                ? 'KhtmlUserSelect'\n                : '';\n\n    /**\n     * Makes element unselectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make unselectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementUnselectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = fabric.util.falseFunction;\n      }\n      if (selectProp) {\n        element.style[selectProp] = 'none';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = 'on';\n      }\n      return element;\n    }\n\n    /**\n     * Makes element selectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make selectable\n     * @return {HTMLElement} Element that was passed in\n     */\n    function makeElementSelectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = null;\n      }\n      if (selectProp) {\n        element.style[selectProp] = '';\n      }\n      else if (typeof element.unselectable === 'string') {\n        element.unselectable = '';\n      }\n      return element;\n    }\n\n    fabric.util.makeElementUnselectable = makeElementUnselectable;\n    fabric.util.makeElementSelectable = makeElementSelectable;\n  })();\n\n  (function() {\n\n    /**\n     * Inserts a script element with a given url into a document; invokes callback, when that script is finished loading\n     * @memberOf fabric.util\n     * @param {String} url URL of a script to load\n     * @param {Function} callback Callback to execute when script is finished loading\n     */\n    function getScript(url, callback) {\n      var headEl = fabric.document.getElementsByTagName('head')[0],\n          scriptEl = fabric.document.createElement('script'),\n          loading = true;\n\n      /** @ignore */\n      scriptEl.onload = /** @ignore */ scriptEl.onreadystatechange = function(e) {\n        if (loading) {\n          if (typeof this.readyState === 'string' &&\n              this.readyState !== 'loaded' &&\n              this.readyState !== 'complete') {\n            return;\n          }\n          loading = false;\n          callback(e || fabric.window.event);\n          scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;\n        }\n      };\n      scriptEl.src = url;\n      headEl.appendChild(scriptEl);\n      // causes issue in Opera\n      // headEl.removeChild(scriptEl);\n    }\n\n    fabric.util.getScript = getScript;\n  })();\n\n  function getNodeCanvas(element) {\n    var impl = fabric.jsdomImplForWrapper(element);\n    return impl._canvas || impl._image;\n  };\n\n  fabric.util.getById = getById;\n  fabric.util.toArray = toArray;\n  fabric.util.makeElement = makeElement;\n  fabric.util.addClass = addClass;\n  fabric.util.wrapElement = wrapElement;\n  fabric.util.getScrollLeftTop = getScrollLeftTop;\n  fabric.util.getElementOffset = getElementOffset;\n  fabric.util.getElementStyle = getElementStyle;\n  fabric.util.getNodeCanvas = getNodeCanvas;\n\n})();\n\n\n(function() {\n\n  function addParamToUrl(url, param) {\n    return url + (/\\?/.test(url) ? '&' : '?') + param;\n  }\n\n  var makeXHR = (function() {\n    var factories = [\n      function() { return new ActiveXObject('Microsoft.XMLHTTP'); },\n      function() { return new ActiveXObject('Msxml2.XMLHTTP'); },\n      function() { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); },\n      function() { return new XMLHttpRequest(); }\n    ];\n    for (var i = factories.length; i--; ) {\n      try {\n        var req = factories[i]();\n        if (req) {\n          return factories[i];\n        }\n      }\n      catch (err) { }\n    }\n  })();\n\n  function emptyFn() { }\n\n  /**\n   * Cross-browser abstraction for sending XMLHttpRequest\n   * @memberOf fabric.util\n   * @param {String} url URL to send XMLHttpRequest to\n   * @param {Object} [options] Options object\n   * @param {String} [options.method=\"GET\"]\n   * @param {String} [options.parameters] parameters to append to url in GET or in body\n   * @param {String} [options.body] body to send with POST or PUT request\n   * @param {Function} options.onComplete Callback to invoke when request is completed\n   * @return {XMLHttpRequest} request\n   */\n  function request(url, options) {\n\n    options || (options = { });\n\n    var method = options.method ? options.method.toUpperCase() : 'GET',\n        onComplete = options.onComplete || function() { },\n        xhr = makeXHR(),\n        body = options.body || options.parameters;\n\n    /** @ignore */\n    xhr.onreadystatechange = function() {\n      if (xhr.readyState === 4) {\n        onComplete(xhr);\n        xhr.onreadystatechange = emptyFn;\n      }\n    };\n\n    if (method === 'GET') {\n      body = null;\n      if (typeof options.parameters === 'string') {\n        url = addParamToUrl(url, options.parameters);\n      }\n    }\n\n    xhr.open(method, url, true);\n\n    if (method === 'POST' || method === 'PUT') {\n      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    }\n\n    xhr.send(body);\n    return xhr;\n  }\n\n  fabric.util.request = request;\n})();\n\n\n/**\n * Wrapper around `console.log` (when available)\n * @param {*} [values] Values to log\n */\nfabric.log = function() { };\n\n/**\n * Wrapper around `console.warn` (when available)\n * @param {*} [values] Values to log as a warning\n */\nfabric.warn = function() { };\n\n/* eslint-disable */\nif (typeof console !== 'undefined') {\n\n  ['log', 'warn'].forEach(function(methodName) {\n\n    if (typeof console[methodName] !== 'undefined' &&\n        typeof console[methodName].apply === 'function') {\n\n      fabric[methodName] = function() {\n        return console[methodName].apply(console, arguments);\n      };\n    }\n  });\n}\n/* eslint-enable */\n\n\n(function() {\n\n  function noop() {\n    return false;\n  }\n\n  /**\n   * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Number} [options.startValue=0] Starting value\n   * @param {Number} [options.endValue=100] Ending value\n   * @param {Number} [options.byValue=100] Value to modify the property by\n   * @param {Function} [options.easing] Easing function\n   * @param {Number} [options.duration=500] Duration of change (in ms)\n   */\n  function animate(options) {\n\n    requestAnimFrame(function(timestamp) {\n      options || (options = { });\n\n      var start = timestamp || +new Date(),\n          duration = options.duration || 500,\n          finish = start + duration, time,\n          onChange = options.onChange || noop,\n          abort = options.abort || noop,\n          onComplete = options.onComplete || noop,\n          easing = options.easing || function(t, b, c, d) {return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;},\n          startValue = 'startValue' in options ? options.startValue : 0,\n          endValue = 'endValue' in options ? options.endValue : 100,\n          byValue = options.byValue || endValue - startValue;\n\n      options.onStart && options.onStart();\n\n      (function tick(ticktime) {\n        if (abort()) {\n          onComplete(endValue, 1, 1);\n          return;\n        }\n        time = ticktime || +new Date();\n        var currentTime = time > finish ? duration : (time - start),\n            timePerc = currentTime / duration,\n            current = easing(currentTime, startValue, byValue, duration),\n            valuePerc = Math.abs((current - startValue) / byValue);\n        onChange(current, valuePerc, timePerc);\n        if (time > finish) {\n          options.onComplete && options.onComplete();\n          return;\n        }\n        requestAnimFrame(tick);\n      })(start);\n    });\n\n  }\n\n  var _requestAnimFrame = fabric.window.requestAnimationFrame       ||\n                          fabric.window.webkitRequestAnimationFrame ||\n                          fabric.window.mozRequestAnimationFrame    ||\n                          fabric.window.oRequestAnimationFrame      ||\n                          fabric.window.msRequestAnimationFrame     ||\n                          function(callback) {\n                            return fabric.window.setTimeout(callback, 1000 / 60);\n                          };\n\n  var _cancelAnimFrame = fabric.window.cancelAnimationFrame || fabric.window.clearTimeout;\n\n  /**\n   * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n   * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method\n   * @memberOf fabric.util\n   * @param {Function} callback Callback to invoke\n   * @param {DOMElement} element optional Element to associate with animation\n   */\n  function requestAnimFrame() {\n    return _requestAnimFrame.apply(fabric.window, arguments);\n  }\n\n  function cancelAnimFrame() {\n    return _cancelAnimFrame.apply(fabric.window, arguments);\n  }\n\n  fabric.util.animate = animate;\n  fabric.util.requestAnimFrame = requestAnimFrame;\n  fabric.util.cancelAnimFrame = cancelAnimFrame;\n})();\n\n\n(function() {\n  // Calculate an in-between color. Returns a \"rgba()\" string.\n  // Credit: Edwin Martin <edwin@bitstorm.org>\n  //         http://www.bitstorm.org/jquery/color-animation/jquery.animate-colors.js\n  function calculateColor(begin, end, pos) {\n    var color = 'rgba('\n        + parseInt((begin[0] + pos * (end[0] - begin[0])), 10) + ','\n        + parseInt((begin[1] + pos * (end[1] - begin[1])), 10) + ','\n        + parseInt((begin[2] + pos * (end[2] - begin[2])), 10);\n\n    color += ',' + (begin && end ? parseFloat(begin[3] + pos * (end[3] - begin[3])) : 1);\n    color += ')';\n    return color;\n  }\n\n  /**\n   * Changes the color from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {String} fromColor The starting color in hex or rgb(a) format.\n   * @param {String} toColor The starting color in hex or rgb(a) format.\n   * @param {Number} [duration] Duration of change (in ms).\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Function} [options.colorEasing] Easing function. Note that this function only take two arguments (currentTime, duration). Thus the regular animation easing functions cannot be used.\n   */\n  function animateColor(fromColor, toColor, duration, options) {\n    var startColor = new fabric.Color(fromColor).getSource(),\n        endColor = new fabric.Color(toColor).getSource();\n\n    options = options || {};\n\n    fabric.util.animate(fabric.util.object.extend(options, {\n      duration: duration || 500,\n      startValue: startColor,\n      endValue: endColor,\n      byValue: endColor,\n      easing: function (currentTime, startValue, byValue, duration) {\n        var posValue = options.colorEasing\n          ? options.colorEasing(currentTime, duration)\n          : 1 - Math.cos(currentTime / duration * (Math.PI / 2));\n        return calculateColor(startValue, byValue, posValue);\n      }\n    }));\n  }\n\n  fabric.util.animateColor = animateColor;\n\n})();\n\n\n(function() {\n\n  function normalize(a, c, p, s) {\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    }\n    else {\n      //handle the 0/0 case:\n      if (c === 0 && a === 0) {\n        s = p / (2 * Math.PI) * Math.asin(1);\n      }\n      else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n    }\n    return { a: a, c: c, p: p, s: s };\n  }\n\n  function elastic(opts, t, d) {\n    return opts.a *\n      Math.pow(2, 10 * (t -= 1)) *\n      Math.sin( (t * d - opts.s) * (2 * Math.PI) / opts.p );\n  }\n\n  /**\n   * Cubic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCubic(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t + 1) + b;\n  }\n\n  /**\n   * Cubic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCubic(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t + 2) + b;\n  }\n\n  /**\n   * Quartic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuart(t, b, c, d) {\n    return c * (t /= d) * t * t * t + b;\n  }\n\n  /**\n   * Quartic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuart(t, b, c, d) {\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n  }\n\n  /**\n   * Quartic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuart(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t + b;\n    }\n    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n  }\n\n  /**\n   * Quintic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInQuint(t, b, c, d) {\n    return c * (t /= d) * t * t * t * t + b;\n  }\n\n  /**\n   * Quintic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutQuint(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n  }\n\n  /**\n   * Quintic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutQuint(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * t * t * t * t * t + b;\n    }\n    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n  }\n\n  /**\n   * Sinusoidal easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInSine(t, b, c, d) {\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  }\n\n  /**\n   * Sinusoidal easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutSine(t, b, c, d) {\n    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n  }\n\n  /**\n   * Sinusoidal easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutSine(t, b, c, d) {\n    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n  }\n\n  /**\n   * Exponential easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInExpo(t, b, c, d) {\n    return (t === 0) ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n  }\n\n  /**\n   * Exponential easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutExpo(t, b, c, d) {\n    return (t === d) ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n  }\n\n  /**\n   * Exponential easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutExpo(t, b, c, d) {\n    if (t === 0) {\n      return b;\n    }\n    if (t === d) {\n      return b + c;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n    }\n    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n  }\n\n  /**\n   * Circular easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInCirc(t, b, c, d) {\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n  }\n\n  /**\n   * Circular easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutCirc(t, b, c, d) {\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n  }\n\n  /**\n   * Circular easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutCirc(t, b, c, d) {\n    t /= d / 2;\n    if (t < 1) {\n      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n    }\n    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n  }\n\n  /**\n   * Elastic easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return -elastic(opts, t, d) + b;\n  }\n\n  /**\n   * Elastic easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d;\n    if (t === 1) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * 0.3;\n    }\n    var opts = normalize(a, c, p, s);\n    return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) + opts.c + b;\n  }\n\n  /**\n   * Elastic easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutElastic(t, b, c, d) {\n    var s = 1.70158, p = 0, a = c;\n    if (t === 0) {\n      return b;\n    }\n    t /= d / 2;\n    if (t === 2) {\n      return b + c;\n    }\n    if (!p) {\n      p = d * (0.3 * 1.5);\n    }\n    var opts = normalize(a, c, p, s);\n    if (t < 1) {\n      return -0.5 * elastic(opts, t, d) + b;\n    }\n    return opts.a * Math.pow(2, -10 * (t -= 1)) *\n      Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p ) * 0.5 + opts.c + b;\n  }\n\n  /**\n   * Backwards easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n  }\n\n  /**\n   * Backwards easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n  }\n\n  /**\n   * Backwards easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n    t /= d / 2;\n    if (t < 1) {\n      return c / 2 * (t * t * (((s *= (1.525)) + 1) * t - s)) + b;\n    }\n    return c / 2 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2) + b;\n  }\n\n  /**\n   * Bouncing easing in\n   * @memberOf fabric.util.ease\n   */\n  function easeInBounce(t, b, c, d) {\n    return c - easeOutBounce (d - t, 0, c, d) + b;\n  }\n\n  /**\n   * Bouncing easing out\n   * @memberOf fabric.util.ease\n   */\n  function easeOutBounce(t, b, c, d) {\n    if ((t /= d) < (1 / 2.75)) {\n      return c * (7.5625 * t * t) + b;\n    }\n    else if (t < (2 / 2.75)) {\n      return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\n    }\n    else if (t < (2.5 / 2.75)) {\n      return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\n    }\n    else {\n      return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\n    }\n  }\n\n  /**\n   * Bouncing easing in and out\n   * @memberOf fabric.util.ease\n   */\n  function easeInOutBounce(t, b, c, d) {\n    if (t < d / 2) {\n      return easeInBounce (t * 2, 0, c, d) * 0.5 + b;\n    }\n    return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n  }\n\n  /**\n   * Easing functions\n   * See <a href=\"http://gizma.com/easing/\">Easing Equations by Robert Penner</a>\n   * @namespace fabric.util.ease\n   */\n  fabric.util.ease = {\n\n    /**\n     * Quadratic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInQuad: function(t, b, c, d) {\n      return c * (t /= d) * t + b;\n    },\n\n    /**\n     * Quadratic easing out\n     * @memberOf fabric.util.ease\n     */\n    easeOutQuad: function(t, b, c, d) {\n      return -c * (t /= d) * (t - 2) + b;\n    },\n\n    /**\n     * Quadratic easing in and out\n     * @memberOf fabric.util.ease\n     */\n    easeInOutQuad: function(t, b, c, d) {\n      t /= (d / 2);\n      if (t < 1) {\n        return c / 2 * t * t + b;\n      }\n      return -c / 2 * ((--t) * (t - 2) - 1) + b;\n    },\n\n    /**\n     * Cubic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInCubic: function(t, b, c, d) {\n      return c * (t /= d) * t * t + b;\n    },\n\n    easeOutCubic: easeOutCubic,\n    easeInOutCubic: easeInOutCubic,\n    easeInQuart: easeInQuart,\n    easeOutQuart: easeOutQuart,\n    easeInOutQuart: easeInOutQuart,\n    easeInQuint: easeInQuint,\n    easeOutQuint: easeOutQuint,\n    easeInOutQuint: easeInOutQuint,\n    easeInSine: easeInSine,\n    easeOutSine: easeOutSine,\n    easeInOutSine: easeInOutSine,\n    easeInExpo: easeInExpo,\n    easeOutExpo: easeOutExpo,\n    easeInOutExpo: easeInOutExpo,\n    easeInCirc: easeInCirc,\n    easeOutCirc: easeOutCirc,\n    easeInOutCirc: easeInOutCirc,\n    easeInElastic: easeInElastic,\n    easeOutElastic: easeOutElastic,\n    easeInOutElastic: easeInOutElastic,\n    easeInBack: easeInBack,\n    easeOutBack: easeOutBack,\n    easeInOutBack: easeInOutBack,\n    easeInBounce: easeInBounce,\n    easeOutBounce: easeOutBounce,\n    easeInOutBounce: easeInOutBounce\n  };\n\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  /**\n   * @name fabric\n   * @namespace\n   */\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      parseUnit = fabric.util.parseUnit,\n      multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,\n\n      svgValidTagNames = ['path', 'circle', 'polygon', 'polyline', 'ellipse', 'rect', 'line',\n        'image', 'text', 'linearGradient', 'radialGradient', 'stop'],\n      svgViewBoxElements = ['symbol', 'image', 'marker', 'pattern', 'view', 'svg'],\n      svgInvalidAncestors = ['pattern', 'defs', 'symbol', 'metadata', 'clipPath', 'mask', 'desc'],\n      svgValidParents = ['symbol', 'g', 'a', 'svg'],\n\n      attributesMap = {\n        cx:                   'left',\n        x:                    'left',\n        r:                    'radius',\n        cy:                   'top',\n        y:                    'top',\n        display:              'visible',\n        visibility:           'visible',\n        transform:            'transformMatrix',\n        'fill-opacity':       'fillOpacity',\n        'fill-rule':          'fillRule',\n        'font-family':        'fontFamily',\n        'font-size':          'fontSize',\n        'font-style':         'fontStyle',\n        'font-weight':        'fontWeight',\n        'letter-spacing':     'charSpacing',\n        'paint-order':        'paintFirst',\n        'stroke-dasharray':   'strokeDashArray',\n        'stroke-linecap':     'strokeLineCap',\n        'stroke-linejoin':    'strokeLineJoin',\n        'stroke-miterlimit':  'strokeMiterLimit',\n        'stroke-opacity':     'strokeOpacity',\n        'stroke-width':       'strokeWidth',\n        'text-decoration':    'textDecoration',\n        'text-anchor':        'textAnchor',\n        opacity:              'opacity'\n      },\n\n      colorAttributes = {\n        stroke: 'strokeOpacity',\n        fill:   'fillOpacity'\n      };\n\n  fabric.svgValidTagNamesRegEx = getSvgRegex(svgValidTagNames);\n  fabric.svgViewBoxElementsRegEx = getSvgRegex(svgViewBoxElements);\n  fabric.svgInvalidAncestorsRegEx = getSvgRegex(svgInvalidAncestors);\n  fabric.svgValidParentsRegEx = getSvgRegex(svgValidParents);\n\n  fabric.cssRules = { };\n  fabric.gradientDefs = { };\n\n  function normalizeAttr(attr) {\n    // transform attribute names\n    if (attr in attributesMap) {\n      return attributesMap[attr];\n    }\n    return attr;\n  }\n\n  function normalizeValue(attr, value, parentAttributes, fontSize) {\n    var isArray = Object.prototype.toString.call(value) === '[object Array]',\n        parsed;\n\n    if ((attr === 'fill' || attr === 'stroke') && value === 'none') {\n      value = '';\n    }\n    else if (attr === 'strokeDashArray') {\n      if (value === 'none') {\n        value = null;\n      }\n      else {\n        value = value.replace(/,/g, ' ').split(/\\s+/).map(function(n) {\n          return parseFloat(n);\n        });\n      }\n    }\n    else if (attr === 'transformMatrix') {\n      if (parentAttributes && parentAttributes.transformMatrix) {\n        value = multiplyTransformMatrices(\n          parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\n      }\n      else {\n        value = fabric.parseTransformAttribute(value);\n      }\n    }\n    else if (attr === 'visible') {\n      value = value !== 'none' && value !== 'hidden';\n      // display=none on parent element always takes precedence over child element\n      if (parentAttributes && parentAttributes.visible === false) {\n        value = false;\n      }\n    }\n    else if (attr === 'opacity') {\n      value = parseFloat(value);\n      if (parentAttributes && typeof parentAttributes.opacity !== 'undefined') {\n        value *= parentAttributes.opacity;\n      }\n    }\n    else if (attr === 'textAnchor' /* text-anchor */) {\n      value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';\n    }\n    else if (attr === 'charSpacing') {\n      // parseUnit returns px and we convert it to em\n      parsed = parseUnit(value, fontSize) / fontSize * 1000;\n    }\n    else if (attr === 'paintFirst') {\n      var fillIndex = value.indexOf('fill');\n      var strokeIndex = value.indexOf('stroke');\n      var value = 'fill';\n      if (fillIndex > -1 && strokeIndex > -1 && strokeIndex < fillIndex) {\n        value = 'stroke';\n      }\n      else if (fillIndex === -1 && strokeIndex > -1) {\n        value = 'stroke';\n      }\n    }\n    else {\n      parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\n    }\n\n    return (!isArray && isNaN(parsed) ? value : parsed);\n  }\n\n  /**\n    * @private\n    */\n  function getSvgRegex(arr) {\n    return new RegExp('^(' + arr.join('|') + ')\\\\b', 'i');\n  }\n\n  /**\n   * @private\n   * @param {Object} attributes Array of attributes to parse\n   */\n  function _setStrokeFillOpacity(attributes) {\n    for (var attr in colorAttributes) {\n\n      if (typeof attributes[colorAttributes[attr]] === 'undefined' || attributes[attr] === '') {\n        continue;\n      }\n\n      if (typeof attributes[attr] === 'undefined') {\n        if (!fabric.Object.prototype[attr]) {\n          continue;\n        }\n        attributes[attr] = fabric.Object.prototype[attr];\n      }\n\n      if (attributes[attr].indexOf('url(') === 0) {\n        continue;\n      }\n\n      var color = new fabric.Color(attributes[attr]);\n      attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\n    }\n    return attributes;\n  }\n\n  /**\n   * @private\n   */\n  function _getMultipleNodes(doc, nodeNames) {\n    var nodeName, nodeArray = [], nodeList, i, len;\n    for (i = 0, len = nodeNames.length; i < len; i++) {\n      nodeName = nodeNames[i];\n      nodeList = doc.getElementsByTagName(nodeName);\n      nodeArray = nodeArray.concat(Array.prototype.slice.call(nodeList));\n    }\n    return nodeArray;\n  }\n\n  /**\n   * Parses \"transform\" attribute, returning an array of values\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {String} attributeValue String containing attribute value\n   * @return {Array} Array of 6 elements representing transformation matrix\n   */\n  fabric.parseTransformAttribute = (function() {\n    function rotateMatrix(matrix, args) {\n      var cos = fabric.util.cos(args[0]), sin = fabric.util.sin(args[0]),\n          x = 0, y = 0;\n      if (args.length === 3) {\n        x = args[1];\n        y = args[2];\n      }\n\n      matrix[0] = cos;\n      matrix[1] = sin;\n      matrix[2] = -sin;\n      matrix[3] = cos;\n      matrix[4] = x - (cos * x - sin * y);\n      matrix[5] = y - (sin * x + cos * y);\n    }\n\n    function scaleMatrix(matrix, args) {\n      var multiplierX = args[0],\n          multiplierY = (args.length === 2) ? args[1] : args[0];\n\n      matrix[0] = multiplierX;\n      matrix[3] = multiplierY;\n    }\n\n    function skewMatrix(matrix, args, pos) {\n      matrix[pos] = Math.tan(fabric.util.degreesToRadians(args[0]));\n    }\n\n    function translateMatrix(matrix, args) {\n      matrix[4] = args[0];\n      if (args.length === 2) {\n        matrix[5] = args[1];\n      }\n    }\n\n    // identity matrix\n    var iMatrix = [\n          1, // a\n          0, // b\n          0, // c\n          1, // d\n          0, // e\n          0  // f\n        ],\n\n        // == begin transform regexp\n        number = fabric.reNum,\n\n        commaWsp = '(?:\\\\s+,?\\\\s*|,\\\\s*)',\n\n        skewX = '(?:(skewX)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        skewY = '(?:(skewY)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n\n        rotate = '(?:(rotate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + ')' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        scale = '(?:(scale)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        translate = '(?:(translate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' +\n                    commaWsp + '(' + number + '))?\\\\s*\\\\))',\n\n        matrix = '(?:(matrix)\\\\s*\\\\(\\\\s*' +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' + commaWsp +\n                  '(' + number + ')' +\n                  '\\\\s*\\\\))',\n\n        transform = '(?:' +\n                    matrix + '|' +\n                    translate + '|' +\n                    scale + '|' +\n                    rotate + '|' +\n                    skewX + '|' +\n                    skewY +\n                    ')',\n\n        transforms = '(?:' + transform + '(?:' + commaWsp + '*' + transform + ')*' + ')',\n\n        transformList = '^\\\\s*(?:' + transforms + '?)\\\\s*$',\n\n        // http://www.w3.org/TR/SVG/coords.html#TransformAttribute\n        reTransformList = new RegExp(transformList),\n        // == end transform regexp\n\n        reTransform = new RegExp(transform, 'g');\n\n    return function(attributeValue) {\n\n      // start with identity matrix\n      var matrix = iMatrix.concat(),\n          matrices = [];\n\n      // return if no argument was given or\n      // an argument does not match transform attribute regexp\n      if (!attributeValue || (attributeValue && !reTransformList.test(attributeValue))) {\n        return matrix;\n      }\n\n      attributeValue.replace(reTransform, function(match) {\n\n        var m = new RegExp(transform).exec(match).filter(function (match) {\n              // match !== '' && match != null\n              return (!!match);\n            }),\n            operation = m[1],\n            args = m.slice(2).map(parseFloat);\n\n        switch (operation) {\n          case 'translate':\n            translateMatrix(matrix, args);\n            break;\n          case 'rotate':\n            args[0] = fabric.util.degreesToRadians(args[0]);\n            rotateMatrix(matrix, args);\n            break;\n          case 'scale':\n            scaleMatrix(matrix, args);\n            break;\n          case 'skewX':\n            skewMatrix(matrix, args, 2);\n            break;\n          case 'skewY':\n            skewMatrix(matrix, args, 1);\n            break;\n          case 'matrix':\n            matrix = args;\n            break;\n        }\n\n        // snapshot current matrix into matrices array\n        matrices.push(matrix.concat());\n        // reset\n        matrix = iMatrix.concat();\n      });\n\n      var combinedMatrix = matrices[0];\n      while (matrices.length > 1) {\n        matrices.shift();\n        combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\n      }\n      return combinedMatrix;\n    };\n  })();\n\n  /**\n   * @private\n   */\n  function parseStyleString(style, oStyle) {\n    var attr, value;\n    style.replace(/;\\s*$/, '').split(';').forEach(function (chunk) {\n      var pair = chunk.split(':');\n\n      attr = pair[0].trim().toLowerCase();\n      value =  pair[1].trim();\n\n      oStyle[attr] = value;\n    });\n  }\n\n  /**\n   * @private\n   */\n  function parseStyleObject(style, oStyle) {\n    var attr, value;\n    for (var prop in style) {\n      if (typeof style[prop] === 'undefined') {\n        continue;\n      }\n\n      attr = prop.toLowerCase();\n      value = style[prop];\n\n      oStyle[attr] = value;\n    }\n  }\n\n  /**\n   * @private\n   */\n  function getGlobalStylesForElement(element, svgUid) {\n    var styles = { };\n    for (var rule in fabric.cssRules[svgUid]) {\n      if (elementMatchesRule(element, rule.split(' '))) {\n        for (var property in fabric.cssRules[svgUid][rule]) {\n          styles[property] = fabric.cssRules[svgUid][rule][property];\n        }\n      }\n    }\n    return styles;\n  }\n\n  /**\n   * @private\n   */\n  function elementMatchesRule(element, selectors) {\n    var firstMatching, parentMatching = true;\n    //start from rightmost selector.\n    firstMatching = selectorMatches(element, selectors.pop());\n    if (firstMatching && selectors.length) {\n      parentMatching = doesSomeParentMatch(element, selectors);\n    }\n    return firstMatching && parentMatching && (selectors.length === 0);\n  }\n\n  function doesSomeParentMatch(element, selectors) {\n    var selector, parentMatching = true;\n    while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\n      if (parentMatching) {\n        selector = selectors.pop();\n      }\n      element = element.parentNode;\n      parentMatching = selectorMatches(element, selector);\n    }\n    return selectors.length === 0;\n  }\n\n  /**\n   * @private\n   */\n  function selectorMatches(element, selector) {\n    var nodeName = element.nodeName,\n        classNames = element.getAttribute('class'),\n        id = element.getAttribute('id'), matcher, i;\n    // i check if a selector matches slicing away part from it.\n    // if i get empty string i should match\n    matcher = new RegExp('^' + nodeName, 'i');\n    selector = selector.replace(matcher, '');\n    if (id && selector.length) {\n      matcher = new RegExp('#' + id + '(?![a-zA-Z\\\\-]+)', 'i');\n      selector = selector.replace(matcher, '');\n    }\n    if (classNames && selector.length) {\n      classNames = classNames.split(' ');\n      for (i = classNames.length; i--;) {\n        matcher = new RegExp('\\\\.' + classNames[i] + '(?![a-zA-Z\\\\-]+)', 'i');\n        selector = selector.replace(matcher, '');\n      }\n    }\n    return selector.length === 0;\n  }\n\n  /**\n   * @private\n   * to support IE8 missing getElementById on SVGdocument\n   */\n  function elementById(doc, id) {\n    var el;\n    doc.getElementById && (el = doc.getElementById(id));\n    if (el) {\n      return el;\n    }\n    var node, i, len, nodelist = doc.getElementsByTagName('*');\n    for (i = 0, len = nodelist.length; i < len; i++) {\n      node = nodelist[i];\n      if (id === node.getAttribute('id')) {\n        return node;\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  function parseUseDirectives(doc) {\n    var nodelist = _getMultipleNodes(doc, ['use', 'svg:use']), i = 0;\n\n    while (nodelist.length && i < nodelist.length) {\n      var el = nodelist[i],\n          xlink = el.getAttribute('xlink:href').substr(1),\n          x = el.getAttribute('x') || 0,\n          y = el.getAttribute('y') || 0,\n          el2 = elementById(doc, xlink).cloneNode(true),\n          currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',\n          parentNode, oldLength = nodelist.length, attr, j, attrs, len;\n\n      applyViewboxTransform(el2);\n      if (/^svg$/i.test(el2.nodeName)) {\n        var el3 = el2.ownerDocument.createElement('g');\n        for (j = 0, attrs = el2.attributes, len = attrs.length; j < len; j++) {\n          attr = attrs.item(j);\n          el3.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n        // el2.firstChild != null\n        while (el2.firstChild) {\n          el3.appendChild(el2.firstChild);\n        }\n        el2 = el3;\n      }\n\n      for (j = 0, attrs = el.attributes, len = attrs.length; j < len; j++) {\n        attr = attrs.item(j);\n        if (attr.nodeName === 'x' || attr.nodeName === 'y' || attr.nodeName === 'xlink:href') {\n          continue;\n        }\n\n        if (attr.nodeName === 'transform') {\n          currentTrans = attr.nodeValue + ' ' + currentTrans;\n        }\n        else {\n          el2.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n      }\n\n      el2.setAttribute('transform', currentTrans);\n      el2.setAttribute('instantiated_by_use', '1');\n      el2.removeAttribute('id');\n      parentNode = el.parentNode;\n      parentNode.replaceChild(el2, el);\n      // some browsers do not shorten nodelist after replaceChild (IE8)\n      if (nodelist.length === oldLength) {\n        i++;\n      }\n    }\n  }\n\n  // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n  // matches, e.g.: +14.56e-12, etc.\n  var reViewBoxAttrValue = new RegExp(\n    '^' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' +\n    '\\\\s*(' + fabric.reNum + '+)\\\\s*' +\n    '$'\n  );\n\n  /**\n   * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n   */\n  function applyViewboxTransform(element) {\n\n    var viewBoxAttr = element.getAttribute('viewBox'),\n        scaleX = 1,\n        scaleY = 1,\n        minX = 0,\n        minY = 0,\n        viewBoxWidth, viewBoxHeight, matrix, el,\n        widthAttr = element.getAttribute('width'),\n        heightAttr = element.getAttribute('height'),\n        x = element.getAttribute('x') || 0,\n        y = element.getAttribute('y') || 0,\n        preserveAspectRatio = element.getAttribute('preserveAspectRatio') || '',\n        missingViewBox = (!viewBoxAttr || !fabric.svgViewBoxElementsRegEx.test(element.nodeName)\n                           || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue))),\n        missingDimAttr = (!widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%'),\n        toBeParsed = missingViewBox && missingDimAttr,\n        parsedDim = { }, translateMatrix = '', widthDiff = 0, heightDiff = 0;\n\n    parsedDim.width = 0;\n    parsedDim.height = 0;\n    parsedDim.toBeParsed = toBeParsed;\n\n    if (toBeParsed) {\n      return parsedDim;\n    }\n\n    if (missingViewBox) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      return parsedDim;\n    }\n\n    minX = -parseFloat(viewBoxAttr[1]);\n    minY = -parseFloat(viewBoxAttr[2]);\n    viewBoxWidth = parseFloat(viewBoxAttr[3]);\n    viewBoxHeight = parseFloat(viewBoxAttr[4]);\n\n    if (!missingDimAttr) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      scaleX = parsedDim.width / viewBoxWidth;\n      scaleY = parsedDim.height / viewBoxHeight;\n    }\n    else {\n      parsedDim.width = viewBoxWidth;\n      parsedDim.height = viewBoxHeight;\n    }\n\n    // default is to preserve aspect ratio\n    preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);\n    if (preserveAspectRatio.alignX !== 'none') {\n      //translate all container for the effect of Mid, Min, Max\n      if (preserveAspectRatio.meetOrSlice === 'meet') {\n        scaleY = scaleX = (scaleX > scaleY ? scaleY : scaleX);\n        // calculate additional translation to move the viewbox\n      }\n      if (preserveAspectRatio.meetOrSlice === 'slice') {\n        scaleY = scaleX = (scaleX > scaleY ? scaleX : scaleY);\n        // calculate additional translation to move the viewbox\n      }\n      widthDiff = parsedDim.width - viewBoxWidth * scaleX;\n      heightDiff = parsedDim.height - viewBoxHeight * scaleX;\n      if (preserveAspectRatio.alignX === 'Mid') {\n        widthDiff /= 2;\n      }\n      if (preserveAspectRatio.alignY === 'Mid') {\n        heightDiff /= 2;\n      }\n      if (preserveAspectRatio.alignX === 'Min') {\n        widthDiff = 0;\n      }\n      if (preserveAspectRatio.alignY === 'Min') {\n        heightDiff = 0;\n      }\n    }\n\n    if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {\n      return parsedDim;\n    }\n\n    if (x || y) {\n      translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\n    }\n\n    matrix = translateMatrix + ' matrix(' + scaleX +\n                  ' 0' +\n                  ' 0 ' +\n                  scaleY + ' ' +\n                  (minX * scaleX + widthDiff) + ' ' +\n                  (minY * scaleY + heightDiff) + ') ';\n\n    if (element.nodeName === 'svg') {\n      el = element.ownerDocument.createElement('g');\n      // element.firstChild != null\n      while (element.firstChild) {\n        el.appendChild(element.firstChild);\n      }\n      element.appendChild(el);\n    }\n    else {\n      el = element;\n      matrix = el.getAttribute('transform') + matrix;\n    }\n\n    el.setAttribute('transform', matrix);\n    return parsedDim;\n  }\n\n  function hasAncestorWithNodeName(element, nodeName) {\n    while (element && (element = element.parentNode)) {\n      if (element.nodeName && nodeName.test(element.nodeName.replace('svg:', ''))\n        && !element.getAttribute('instantiated_by_use')) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {SVGDocument} doc SVG document to parse\n   * @param {Function} callback Callback to call when parsing is finished;\n   * It's being passed an array of elements (parsed from a document).\n   * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n   * @param {Object} [parsingOptions] options for parsing document\n   * @param {String} [parsingOptions.crossOrigin] crossOrigin settings\n   */\n  fabric.parseSVGDocument = function(doc, callback, reviver, parsingOptions) {\n    if (!doc) {\n      return;\n    }\n\n    parseUseDirectives(doc);\n\n    var svgUid =  fabric.Object.__uid++, i, len,\n        options = applyViewboxTransform(doc),\n        descendants = fabric.util.toArray(doc.getElementsByTagName('*'));\n    options.crossOrigin = parsingOptions && parsingOptions.crossOrigin;\n    options.svgUid = svgUid;\n\n    if (descendants.length === 0 && fabric.isLikelyNode) {\n      // we're likely in node, where \"o3-xml\" library fails to gEBTN(\"*\")\n      // https://github.com/ajaxorg/node-o3-xml/issues/21\n      descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\n      var arr = [];\n      for (i = 0, len = descendants.length; i < len; i++) {\n        arr[i] = descendants[i];\n      }\n      descendants = arr;\n    }\n\n    var elements = descendants.filter(function(el) {\n      applyViewboxTransform(el);\n      return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', '')) &&\n            !hasAncestorWithNodeName(el, fabric.svgInvalidAncestorsRegEx); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n    });\n\n    if (!elements || (elements && !elements.length)) {\n      callback && callback([], {});\n      return;\n    }\n\n    fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\n    fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\n    // Precedence of rules:   style > class > attribute\n    fabric.parseElements(elements, function(instances, elements) {\n      if (callback) {\n        callback(instances, options, elements, descendants);\n      }\n    }, clone(options), reviver, parsingOptions);\n  };\n\n  var reFontDeclaration = new RegExp(\n    '(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' +\n    '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' +\n      fabric.reNum +\n    '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' + fabric.reNum + '))?\\\\s+(.*)');\n\n  extend(fabric, {\n    /**\n     * Parses a short font declaration, building adding its properties to a style object\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {String} value font declaration\n     * @param {Object} oStyle definition\n     */\n    parseFontDeclaration: function(value, oStyle) {\n      var match = value.match(reFontDeclaration);\n\n      if (!match) {\n        return;\n      }\n      var fontStyle = match[1],\n          // font variant is not used\n          // fontVariant = match[2],\n          fontWeight = match[3],\n          fontSize = match[4],\n          lineHeight = match[5],\n          fontFamily = match[6];\n\n      if (fontStyle) {\n        oStyle.fontStyle = fontStyle;\n      }\n      if (fontWeight) {\n        oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\n      }\n      if (fontSize) {\n        oStyle.fontSize = parseUnit(fontSize);\n      }\n      if (fontFamily) {\n        oStyle.fontFamily = fontFamily;\n      }\n      if (lineHeight) {\n        oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n      }\n    },\n\n    /**\n     * Parses an SVG document, returning all of the gradient declarations found in it\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n     */\n    getGradientDefs: function(doc) {\n      var tagArray = [\n            'linearGradient',\n            'radialGradient',\n            'svg:linearGradient',\n            'svg:radialGradient'],\n          elList = _getMultipleNodes(doc, tagArray),\n          el, j = 0, id, xlink,\n          gradientDefs = { }, idsToXlinkMap = { };\n      j = elList.length;\n\n      while (j--) {\n        el = elList[j];\n        xlink = el.getAttribute('xlink:href');\n        id = el.getAttribute('id');\n        if (xlink) {\n          idsToXlinkMap[id] = xlink.substr(1);\n        }\n        gradientDefs[id] = el;\n      }\n\n      for (id in idsToXlinkMap) {\n        var el2 = gradientDefs[idsToXlinkMap[id]].cloneNode(true);\n        el = gradientDefs[id];\n        while (el2.firstChild) {\n          el.appendChild(el2.firstChild);\n        }\n      }\n      return gradientDefs;\n    },\n\n    /**\n     * Returns an object of attributes' name/value, given element and an array of attribute names;\n     * Parses parent \"g\" nodes recursively upwards.\n     * @static\n     * @memberOf fabric\n     * @param {DOMElement} element Element to parse\n     * @param {Array} attributes Array of attributes to parse\n     * @return {Object} object containing parsed attributes' names/values\n     */\n    parseAttributes: function(element, attributes, svgUid) {\n\n      if (!element) {\n        return;\n      }\n\n      var value,\n          parentAttributes = { },\n          fontSize;\n\n      if (typeof svgUid === 'undefined') {\n        svgUid = element.getAttribute('svgUid');\n      }\n      // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n      if (element.parentNode && fabric.svgValidParentsRegEx.test(element.parentNode.nodeName)) {\n        parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\n      }\n      fontSize = (parentAttributes && parentAttributes.fontSize ) ||\n                 element.getAttribute('font-size') || fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\n      var ownAttributes = attributes.reduce(function(memo, attr) {\n        value = element.getAttribute(attr);\n        if (value) { // eslint-disable-line\n          memo[attr] = value;\n        }\n        return memo;\n      }, { });\n      // add values parsed from style, which take precedence over attributes\n      // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n      ownAttributes = extend(ownAttributes,\n        extend(getGlobalStylesForElement(element, svgUid), fabric.parseStyleAttribute(element)));\n\n      var normalizedAttr, normalizedValue, normalizedStyle = {};\n      for (var attr in ownAttributes) {\n        normalizedAttr = normalizeAttr(attr);\n        normalizedValue = normalizeValue(normalizedAttr, ownAttributes[attr], parentAttributes, fontSize);\n        normalizedStyle[normalizedAttr] = normalizedValue;\n      }\n      if (normalizedStyle && normalizedStyle.font) {\n        fabric.parseFontDeclaration(normalizedStyle.font, normalizedStyle);\n      }\n      var mergedAttrs = extend(parentAttributes, normalizedStyle);\n      return fabric.svgValidParentsRegEx.test(element.nodeName) ? mergedAttrs : _setStrokeFillOpacity(mergedAttrs);\n    },\n\n    /**\n     * Transforms an array of svg elements to corresponding fabric.* instances\n     * @static\n     * @memberOf fabric\n     * @param {Array} elements Array of elements to parse\n     * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)\n     * @param {Object} [options] Options object\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     */\n    parseElements: function(elements, callback, options, reviver, parsingOptions) {\n      new fabric.ElementsParser(elements, callback, options, reviver, parsingOptions).parse();\n    },\n\n    /**\n     * Parses \"style\" attribute, retuning an object with values\n     * @static\n     * @memberOf fabric\n     * @param {SVGElement} element Element to parse\n     * @return {Object} Objects with values parsed from style attribute of an element\n     */\n    parseStyleAttribute: function(element) {\n      var oStyle = { },\n          style = element.getAttribute('style');\n\n      if (!style) {\n        return oStyle;\n      }\n\n      if (typeof style === 'string') {\n        parseStyleString(style, oStyle);\n      }\n      else {\n        parseStyleObject(style, oStyle);\n      }\n\n      return oStyle;\n    },\n\n    /**\n     * Parses \"points\" attribute, returning an array of values\n     * @static\n     * @memberOf fabric\n     * @param {String} points points attribute string\n     * @return {Array} array of points\n     */\n    parsePointsAttribute: function(points) {\n\n      // points attribute is required and must not be empty\n      if (!points) {\n        return null;\n      }\n\n      // replace commas with whitespace and remove bookending whitespace\n      points = points.replace(/,/g, ' ').trim();\n\n      points = points.split(/\\s+/);\n      var parsedPoints = [], i, len;\n\n      for (i = 0, len = points.length; i < len; i += 2) {\n        parsedPoints.push({\n          x: parseFloat(points[i]),\n          y: parseFloat(points[i + 1])\n        });\n      }\n\n      // odd number of points is an error\n      // if (parsedPoints.length % 2 !== 0) {\n      //   return null;\n      // }\n\n      return parsedPoints;\n    },\n\n    /**\n     * Returns CSS rules for a given SVG document\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} CSS rules of this document\n     */\n    getCSSRules: function(doc) {\n      var styles = doc.getElementsByTagName('style'), i, len,\n          allRules = { }, rules;\n\n      // very crude parsing of style contents\n      for (i = 0, len = styles.length; i < len; i++) {\n        // IE9 doesn't support textContent, but provides text instead.\n        var styleContents = styles[i].textContent || styles[i].text;\n\n        // remove comments\n        styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\n        if (styleContents.trim() === '') {\n          continue;\n        }\n        rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n        rules = rules.map(function(rule) { return rule.trim(); });\n        // eslint-disable-next-line no-loop-func\n        rules.forEach(function(rule) {\n\n          var match = rule.match(/([\\s\\S]*?)\\s*\\{([^}]*)\\}/),\n              ruleObj = { }, declaration = match[2].trim(),\n              propertyValuePairs = declaration.replace(/;$/, '').split(/\\s*;\\s*/);\n\n          for (i = 0, len = propertyValuePairs.length; i < len; i++) {\n            var pair = propertyValuePairs[i].split(/\\s*:\\s*/),\n                property = pair[0],\n                value = pair[1];\n            ruleObj[property] = value;\n          }\n          rule = match[1];\n          rule.split(',').forEach(function(_rule) {\n            _rule = _rule.replace(/^svg/i, '').trim();\n            if (_rule === '') {\n              return;\n            }\n            if (allRules[_rule]) {\n              fabric.util.object.extend(allRules[_rule], ruleObj);\n            }\n            else {\n              allRules[_rule] = fabric.util.object.clone(ruleObj);\n            }\n          });\n        });\n      }\n      return allRules;\n    },\n\n    /**\n     * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\n     * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n     * @memberOf fabric\n     * @param {String} url\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromURL: function(url, callback, reviver, options) {\n\n      url = url.replace(/^\\n\\s*/, '').trim();\n      new fabric.util.request(url, {\n        method: 'get',\n        onComplete: onComplete\n      });\n\n      function onComplete(r) {\n\n        var xml = r.responseXML;\n        if (xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText) {\n          xml = new ActiveXObject('Microsoft.XMLDOM');\n          xml.async = 'false';\n          //IE chokes on DOCTYPE\n          xml.loadXML(r.responseText.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n        }\n        if (!xml || !xml.documentElement) {\n          callback && callback(null);\n        }\n\n        fabric.parseSVGDocument(xml.documentElement, function (results, _options, elements, allElements) {\n          callback && callback(results, _options, elements, allElements);\n        }, reviver, options);\n      }\n    },\n\n    /**\n     * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n     * @memberOf fabric\n     * @param {String} string\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromString: function(string, callback, reviver, options) {\n      string = string.trim();\n      var doc;\n      if (typeof DOMParser !== 'undefined') {\n        var parser = new DOMParser();\n        if (parser && parser.parseFromString) {\n          doc = parser.parseFromString(string, 'text/xml');\n        }\n      }\n      else if (fabric.window.ActiveXObject) {\n        doc = new ActiveXObject('Microsoft.XMLDOM');\n        doc.async = 'false';\n        // IE chokes on DOCTYPE\n        doc.loadXML(string.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n      }\n\n      fabric.parseSVGDocument(doc.documentElement, function (results, _options, elements, allElements) {\n        callback(results, _options, elements, allElements);\n      }, reviver, options);\n    }\n  });\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.ElementsParser = function(elements, callback, options, reviver, parsingOptions) {\n  this.elements = elements;\n  this.callback = callback;\n  this.options = options;\n  this.reviver = reviver;\n  this.svgUid = (options && options.svgUid) || 0;\n  this.parsingOptions = parsingOptions;\n  this.regexUrl = /^url\\(['\"]?#([^'\"]+)['\"]?\\)/g;\n};\n\nfabric.ElementsParser.prototype.parse = function() {\n  this.instances = new Array(this.elements.length);\n  this.numElements = this.elements.length;\n\n  this.createObjects();\n};\n\nfabric.ElementsParser.prototype.createObjects = function() {\n  for (var i = 0, len = this.elements.length; i < len; i++) {\n    this.elements[i].setAttribute('svgUid', this.svgUid);\n    (function(_obj, i) {\n      setTimeout(function() {\n        _obj.createObject(_obj.elements[i], i);\n      }, 0);\n    })(this, i);\n  }\n};\n\nfabric.ElementsParser.prototype.createObject = function(el, index) {\n  var klass = fabric[fabric.util.string.capitalize(el.tagName.replace('svg:', ''))];\n  if (klass && klass.fromElement) {\n    try {\n      this._createObject(klass, el, index);\n    }\n    catch (err) {\n      fabric.log(err);\n    }\n  }\n  else {\n    this.checkIfDone();\n  }\n};\n\nfabric.ElementsParser.prototype._createObject = function(klass, el, index) {\n  klass.fromElement(el, this.createCallback(index, el), this.options);\n};\n\nfabric.ElementsParser.prototype.createCallback = function(index, el) {\n  var _this = this;\n  return function(obj) {\n    var _options;\n    _this.resolveGradient(obj, 'fill');\n    _this.resolveGradient(obj, 'stroke');\n    if (obj instanceof fabric.Image) {\n      _options = obj.parsePreserveAspectRatioAttribute(el);\n    }\n    obj._removeTransformMatrix(_options);\n    _this.reviver && _this.reviver(el, obj);\n    _this.instances[index] = obj;\n    _this.checkIfDone();\n  };\n};\n\nfabric.ElementsParser.prototype.resolveGradient = function(obj, property) {\n\n  var instanceFillValue = obj[property];\n  if (!(/^url\\(/).test(instanceFillValue)) {\n    return;\n  }\n  var gradientId = this.regexUrl.exec(instanceFillValue)[1];\n  this.regexUrl.lastIndex = 0;\n  if (fabric.gradientDefs[this.svgUid][gradientId]) {\n    obj.set(property,\n      fabric.Gradient.fromElement(fabric.gradientDefs[this.svgUid][gradientId], obj));\n  }\n};\n\nfabric.ElementsParser.prototype.checkIfDone = function() {\n  if (--this.numElements === 0) {\n    this.instances = this.instances.filter(function(el) {\n      // eslint-disable-next-line no-eq-null, eqeqeq\n      return el != null;\n    });\n    this.callback(this.instances, this.elements);\n  }\n};\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Point) {\n    fabric.warn('fabric.Point is already defined');\n    return;\n  }\n\n  fabric.Point = Point;\n\n  /**\n   * Point class\n   * @class fabric.Point\n   * @memberOf fabric\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @return {fabric.Point} thisArg\n   */\n  function Point(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  Point.prototype = /** @lends fabric.Point.prototype */ {\n\n    type: 'point',\n\n    constructor: Point,\n\n    /**\n     * Adds another point to this one and returns another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point instance with added values\n     */\n    add: function (that) {\n      return new Point(this.x + that.x, this.y + that.y);\n    },\n\n    /**\n     * Adds another point to this one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    addEquals: function (that) {\n      this.x += that.x;\n      this.y += that.y;\n      return this;\n    },\n\n    /**\n     * Adds value to this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point} new Point with added value\n     */\n    scalarAdd: function (scalar) {\n      return new Point(this.x + scalar, this.y + scalar);\n    },\n\n    /**\n     * Adds value to this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarAddEquals: function (scalar) {\n      this.x += scalar;\n      this.y += scalar;\n      return this;\n    },\n\n    /**\n     * Subtracts another point from this point and returns a new one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point object with subtracted values\n     */\n    subtract: function (that) {\n      return new Point(this.x - that.x, this.y - that.y);\n    },\n\n    /**\n     * Subtracts another point from this point\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    subtractEquals: function (that) {\n      this.x -= that.x;\n      this.y -= that.y;\n      return this;\n    },\n\n    /**\n     * Subtracts value from this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    scalarSubtract: function (scalar) {\n      return new Point(this.x - scalar, this.y - scalar);\n    },\n\n    /**\n     * Subtracts value from this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarSubtractEquals: function (scalar) {\n      this.x -= scalar;\n      this.y -= scalar;\n      return this;\n    },\n\n    /**\n     * Multiplies this point by a value and returns a new one\n     * TODO: rename in scalarMultiply in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    multiply: function (scalar) {\n      return new Point(this.x * scalar, this.y * scalar);\n    },\n\n    /**\n     * Multiplies this point by a value\n     * TODO: rename in scalarMultiplyEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    multiplyEquals: function (scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      return this;\n    },\n\n    /**\n     * Divides this point by a value and returns a new one\n     * TODO: rename in scalarDivide in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    divide: function (scalar) {\n      return new Point(this.x / scalar, this.y / scalar);\n    },\n\n    /**\n     * Divides this point by a value\n     * TODO: rename in scalarDivideEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    divideEquals: function (scalar) {\n      this.x /= scalar;\n      this.y /= scalar;\n      return this;\n    },\n\n    /**\n     * Returns true if this point is equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    eq: function (that) {\n      return (this.x === that.x && this.y === that.y);\n    },\n\n    /**\n     * Returns true if this point is less than another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lt: function (that) {\n      return (this.x < that.x && this.y < that.y);\n    },\n\n    /**\n     * Returns true if this point is less than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lte: function (that) {\n      return (this.x <= that.x && this.y <= that.y);\n    },\n\n    /**\n\n     * Returns true if this point is greater another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gt: function (that) {\n      return (this.x > that.x && this.y > that.y);\n    },\n\n    /**\n     * Returns true if this point is greater than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gte: function (that) {\n      return (this.x >= that.x && this.y >= that.y);\n    },\n\n    /**\n     * Returns new point which is the result of linear interpolation with this one and another one\n     * @param {fabric.Point} that\n     * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\n     * @return {fabric.Point}\n     */\n    lerp: function (that, t) {\n      if (typeof t === 'undefined') {\n        t = 0.5;\n      }\n      t = Math.max(Math.min(1, t), 0);\n      return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\n    },\n\n    /**\n     * Returns distance from this point and another one\n     * @param {fabric.Point} that\n     * @return {Number}\n     */\n    distanceFrom: function (that) {\n      var dx = this.x - that.x,\n          dy = this.y - that.y;\n      return Math.sqrt(dx * dx + dy * dy);\n    },\n\n    /**\n     * Returns the point between this point and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    midPointFrom: function (that) {\n      return this.lerp(that);\n    },\n\n    /**\n     * Returns a new point which is the min of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    min: function (that) {\n      return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n    },\n\n    /**\n     * Returns a new point which is the max of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    max: function (that) {\n      return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n    },\n\n    /**\n     * Returns string representation of this point\n     * @return {String}\n     */\n    toString: function () {\n      return this.x + ',' + this.y;\n    },\n\n    /**\n     * Sets x/y of this point\n     * @param {Number} x\n     * @param {Number} y\n     * @chainable\n     */\n    setXY: function (x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x of this point\n     * @param {Number} x\n     * @chainable\n     */\n    setX: function (x) {\n      this.x = x;\n      return this;\n    },\n\n    /**\n     * Sets y of this point\n     * @param {Number} y\n     * @chainable\n     */\n    setY: function (y) {\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x/y of this point from another point\n     * @param {fabric.Point} that\n     * @chainable\n     */\n    setFromPoint: function (that) {\n      this.x = that.x;\n      this.y = that.y;\n      return this;\n    },\n\n    /**\n     * Swaps x/y of this point and another point\n     * @param {fabric.Point} that\n     */\n    swap: function (that) {\n      var x = this.x,\n          y = this.y;\n      this.x = that.x;\n      this.y = that.y;\n      that.x = x;\n      that.y = y;\n    },\n\n    /**\n     * return a cloned instance of the point\n     * @return {fabric.Point}\n     */\n    clone: function () {\n      return new Point(this.x, this.y);\n    }\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Intersection) {\n    fabric.warn('fabric.Intersection is already defined');\n    return;\n  }\n\n  /**\n   * Intersection class\n   * @class fabric.Intersection\n   * @memberOf fabric\n   * @constructor\n   */\n  function Intersection(status) {\n    this.status = status;\n    this.points = [];\n  }\n\n  fabric.Intersection = Intersection;\n\n  fabric.Intersection.prototype = /** @lends fabric.Intersection.prototype */ {\n\n    constructor: Intersection,\n\n    /**\n     * Appends a point to intersection\n     * @param {fabric.Point} point\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoint: function (point) {\n      this.points.push(point);\n      return this;\n    },\n\n    /**\n     * Appends points to intersection\n     * @param {Array} points\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoints: function (points) {\n      this.points = this.points.concat(points);\n      return this;\n    }\n  };\n\n  /**\n   * Checks if one line intersects another\n   * TODO: rename in intersectSegmentSegment\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {fabric.Point} b1\n   * @param {fabric.Point} b2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {\n    var result,\n        uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\n        ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\n        uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n    if (uB !== 0) {\n      var ua = uaT / uB,\n          ub = ubT / uB;\n      if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n        result = new Intersection('Intersection');\n        result.appendPoint(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\n      }\n      else {\n        result = new Intersection();\n      }\n    }\n    else {\n      if (uaT === 0 || ubT === 0) {\n        result = new Intersection('Coincident');\n      }\n      else {\n        result = new Intersection('Parallel');\n      }\n    }\n    return result;\n  };\n\n  /**\n   * Checks if line intersects polygon\n   * TODO: rename in intersectSegmentPolygon\n   * fix detection of coincident\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {Array} points\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectLinePolygon = function(a1, a2, points) {\n    var result = new Intersection(),\n        length = points.length,\n        b1, b2, inter, i;\n\n    for (i = 0; i < length; i++) {\n      b1 = points[i];\n      b2 = points[(i + 1) % length];\n      inter = Intersection.intersectLineLine(a1, a2, b1, b2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects another polygon\n   * @static\n   * @param {Array} points1\n   * @param {Array} points2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {\n    var result = new Intersection(),\n        length = points1.length, i;\n\n    for (i = 0; i < length; i++) {\n      var a1 = points1[i],\n          a2 = points1[(i + 1) % length],\n          inter = Intersection.intersectLinePolygon(a1, a2, points2);\n\n      result.appendPoints(inter.points);\n    }\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n  /**\n   * Checks if polygon intersects rectangle\n   * @static\n   * @param {Array} points\n   * @param {fabric.Point} r1\n   * @param {fabric.Point} r2\n   * @return {fabric.Intersection}\n   */\n  fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {\n    var min = r1.min(r2),\n        max = r1.max(r2),\n        topRight = new fabric.Point(max.x, min.y),\n        bottomLeft = new fabric.Point(min.x, max.y),\n        inter1 = Intersection.intersectLinePolygon(min, topRight, points),\n        inter2 = Intersection.intersectLinePolygon(topRight, max, points),\n        inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),\n        inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),\n        result = new Intersection();\n\n    result.appendPoints(inter1.points);\n    result.appendPoints(inter2.points);\n    result.appendPoints(inter3.points);\n    result.appendPoints(inter4.points);\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n    return result;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Color) {\n    fabric.warn('fabric.Color is already defined.');\n    return;\n  }\n\n  /**\n   * Color class\n   * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;\n   * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.\n   *\n   * @class fabric.Color\n   * @param {String} color optional in hex or rgb(a) or hsl format or from known color list\n   * @return {fabric.Color} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}\n   */\n  function Color(color) {\n    if (!color) {\n      this.setSource([0, 0, 0, 1]);\n    }\n    else {\n      this._tryParsingColor(color);\n    }\n  }\n\n  fabric.Color = Color;\n\n  fabric.Color.prototype = /** @lends fabric.Color.prototype */ {\n\n    /**\n     * @private\n     * @param {String|Array} color Color value to parse\n     */\n    _tryParsingColor: function(color) {\n      var source;\n\n      if (color in Color.colorNameMap) {\n        color = Color.colorNameMap[color];\n      }\n\n      if (color === 'transparent') {\n        source = [255, 255, 255, 0];\n      }\n\n      if (!source) {\n        source = Color.sourceFromHex(color);\n      }\n      if (!source) {\n        source = Color.sourceFromRgb(color);\n      }\n      if (!source) {\n        source = Color.sourceFromHsl(color);\n      }\n      if (!source) {\n        //if color is not recognize let's make black as canvas does\n        source = [0, 0, 0, 1];\n      }\n      if (source) {\n        this.setSource(source);\n      }\n    },\n\n    /**\n     * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n     * @private\n     * @param {Number} r Red color value\n     * @param {Number} g Green color value\n     * @param {Number} b Blue color value\n     * @return {Array} Hsl color\n     */\n    _rgbToHsl: function(r, g, b) {\n      r /= 255; g /= 255; b /= 255;\n\n      var h, s, l,\n          max = fabric.util.array.max([r, g, b]),\n          min = fabric.util.array.min([r, g, b]);\n\n      l = (max + min) / 2;\n\n      if (max === min) {\n        h = s = 0; // achromatic\n      }\n      else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n          case g:\n            h = (b - r) / d + 2;\n            break;\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n        h /= 6;\n      }\n\n      return [\n        Math.round(h * 360),\n        Math.round(s * 100),\n        Math.round(l * 100)\n      ];\n    },\n\n    /**\n     * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @return {Array}\n     */\n    getSource: function() {\n      return this._source;\n    },\n\n    /**\n     * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @param {Array} source\n     */\n    setSource: function(source) {\n      this._source = source;\n    },\n\n    /**\n     * Returns color representation in RGB format\n     * @return {String} ex: rgb(0-255,0-255,0-255)\n     */\n    toRgb: function() {\n      var source = this.getSource();\n      return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';\n    },\n\n    /**\n     * Returns color representation in RGBA format\n     * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n     */\n    toRgba: function() {\n      var source = this.getSource();\n      return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HSL format\n     * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n     */\n    toHsl: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';\n    },\n\n    /**\n     * Returns color representation in HSLA format\n     * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n     */\n    toHsla: function() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HEX format\n     * @return {String} ex: FF5555\n     */\n    toHex: function() {\n      var source = this.getSource(), r, g, b;\n\n      r = source[0].toString(16);\n      r = (r.length === 1) ? ('0' + r) : r;\n\n      g = source[1].toString(16);\n      g = (g.length === 1) ? ('0' + g) : g;\n\n      b = source[2].toString(16);\n      b = (b.length === 1) ? ('0' + b) : b;\n\n      return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\n    },\n\n    /**\n     * Returns color representation in HEXA format\n     * @return {String} ex: FF5555CC\n     */\n    toHexa: function() {\n      var source = this.getSource(), a;\n\n      a = Math.round(source[3] * 255);\n      a = a.toString(16);\n      a = (a.length === 1) ? ('0' + a) : a;\n\n      return this.toHex() + a.toUpperCase();\n    },\n\n    /**\n     * Gets value of alpha channel for this color\n     * @return {Number} 0-1\n     */\n    getAlpha: function() {\n      return this.getSource()[3];\n    },\n\n    /**\n     * Sets value of alpha channel for this color\n     * @param {Number} alpha Alpha value 0-1\n     * @return {fabric.Color} thisArg\n     */\n    setAlpha: function(alpha) {\n      var source = this.getSource();\n      source[3] = alpha;\n      this.setSource(source);\n      return this;\n    },\n\n    /**\n     * Transforms color to its grayscale representation\n     * @return {fabric.Color} thisArg\n     */\n    toGrayscale: function() {\n      var source = this.getSource(),\n          average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),\n          currentAlpha = source[3];\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Transforms color to its black and white representation\n     * @param {Number} threshold\n     * @return {fabric.Color} thisArg\n     */\n    toBlackWhite: function(threshold) {\n      var source = this.getSource(),\n          average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),\n          currentAlpha = source[3];\n\n      threshold = threshold || 127;\n\n      average = (Number(average) < Number(threshold)) ? 0 : 255;\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Overlays color with another color\n     * @param {String|fabric.Color} otherColor\n     * @return {fabric.Color} thisArg\n     */\n    overlayWith: function(otherColor) {\n      if (!(otherColor instanceof Color)) {\n        otherColor = new Color(otherColor);\n      }\n\n      var result = [],\n          alpha = this.getAlpha(),\n          otherAlpha = 0.5,\n          source = this.getSource(),\n          otherSource = otherColor.getSource(), i;\n\n      for (i = 0; i < 3; i++) {\n        result.push(Math.round((source[i] * (1 - otherAlpha)) + (otherSource[i] * otherAlpha)));\n      }\n\n      result[3] = alpha;\n      this.setSource(result);\n      return this;\n    }\n  };\n\n  /**\n   * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  // eslint-disable-next-line max-len\n  fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*((?:\\d*\\.?\\d+)?)\\s*)?\\)$/i;\n\n  /**\n   * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/i;\n\n  /**\n   * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  fabric.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i;\n\n  /**\n   * Map of the 148 color names with HEX code\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   * @see: https://www.w3.org/TR/css3-color/#svg-color\n   */\n  fabric.Color.colorNameMap = {\n    aliceblue:            '#F0F8FF',\n    antiquewhite:         '#FAEBD7',\n    aqua:                 '#00FFFF',\n    aquamarine:           '#7FFFD4',\n    azure:                '#F0FFFF',\n    beige:                '#F5F5DC',\n    bisque:               '#FFE4C4',\n    black:                '#000000',\n    blanchedalmond:       '#FFEBCD',\n    blue:                 '#0000FF',\n    blueviolet:           '#8A2BE2',\n    brown:                '#A52A2A',\n    burlywood:            '#DEB887',\n    cadetblue:            '#5F9EA0',\n    chartreuse:           '#7FFF00',\n    chocolate:            '#D2691E',\n    coral:                '#FF7F50',\n    cornflowerblue:       '#6495ED',\n    cornsilk:             '#FFF8DC',\n    crimson:              '#DC143C',\n    cyan:                 '#00FFFF',\n    darkblue:             '#00008B',\n    darkcyan:             '#008B8B',\n    darkgoldenrod:        '#B8860B',\n    darkgray:             '#A9A9A9',\n    darkgrey:             '#A9A9A9',\n    darkgreen:            '#006400',\n    darkkhaki:            '#BDB76B',\n    darkmagenta:          '#8B008B',\n    darkolivegreen:       '#556B2F',\n    darkorange:           '#FF8C00',\n    darkorchid:           '#9932CC',\n    darkred:              '#8B0000',\n    darksalmon:           '#E9967A',\n    darkseagreen:         '#8FBC8F',\n    darkslateblue:        '#483D8B',\n    darkslategray:        '#2F4F4F',\n    darkslategrey:        '#2F4F4F',\n    darkturquoise:        '#00CED1',\n    darkviolet:           '#9400D3',\n    deeppink:             '#FF1493',\n    deepskyblue:          '#00BFFF',\n    dimgray:              '#696969',\n    dimgrey:              '#696969',\n    dodgerblue:           '#1E90FF',\n    firebrick:            '#B22222',\n    floralwhite:          '#FFFAF0',\n    forestgreen:          '#228B22',\n    fuchsia:              '#FF00FF',\n    gainsboro:            '#DCDCDC',\n    ghostwhite:           '#F8F8FF',\n    gold:                 '#FFD700',\n    goldenrod:            '#DAA520',\n    gray:                 '#808080',\n    grey:                 '#808080',\n    green:                '#008000',\n    greenyellow:          '#ADFF2F',\n    honeydew:             '#F0FFF0',\n    hotpink:              '#FF69B4',\n    indianred:            '#CD5C5C',\n    indigo:               '#4B0082',\n    ivory:                '#FFFFF0',\n    khaki:                '#F0E68C',\n    lavender:             '#E6E6FA',\n    lavenderblush:        '#FFF0F5',\n    lawngreen:            '#7CFC00',\n    lemonchiffon:         '#FFFACD',\n    lightblue:            '#ADD8E6',\n    lightcoral:           '#F08080',\n    lightcyan:            '#E0FFFF',\n    lightgoldenrodyellow: '#FAFAD2',\n    lightgray:            '#D3D3D3',\n    lightgrey:            '#D3D3D3',\n    lightgreen:           '#90EE90',\n    lightpink:            '#FFB6C1',\n    lightsalmon:          '#FFA07A',\n    lightseagreen:        '#20B2AA',\n    lightskyblue:         '#87CEFA',\n    lightslategray:       '#778899',\n    lightslategrey:       '#778899',\n    lightsteelblue:       '#B0C4DE',\n    lightyellow:          '#FFFFE0',\n    lime:                 '#00FF00',\n    limegreen:            '#32CD32',\n    linen:                '#FAF0E6',\n    magenta:              '#FF00FF',\n    maroon:               '#800000',\n    mediumaquamarine:     '#66CDAA',\n    mediumblue:           '#0000CD',\n    mediumorchid:         '#BA55D3',\n    mediumpurple:         '#9370DB',\n    mediumseagreen:       '#3CB371',\n    mediumslateblue:      '#7B68EE',\n    mediumspringgreen:    '#00FA9A',\n    mediumturquoise:      '#48D1CC',\n    mediumvioletred:      '#C71585',\n    midnightblue:         '#191970',\n    mintcream:            '#F5FFFA',\n    mistyrose:            '#FFE4E1',\n    moccasin:             '#FFE4B5',\n    navajowhite:          '#FFDEAD',\n    navy:                 '#000080',\n    oldlace:              '#FDF5E6',\n    olive:                '#808000',\n    olivedrab:            '#6B8E23',\n    orange:               '#FFA500',\n    orangered:            '#FF4500',\n    orchid:               '#DA70D6',\n    palegoldenrod:        '#EEE8AA',\n    palegreen:            '#98FB98',\n    paleturquoise:        '#AFEEEE',\n    palevioletred:        '#DB7093',\n    papayawhip:           '#FFEFD5',\n    peachpuff:            '#FFDAB9',\n    peru:                 '#CD853F',\n    pink:                 '#FFC0CB',\n    plum:                 '#DDA0DD',\n    powderblue:           '#B0E0E6',\n    purple:               '#800080',\n    rebeccapurple:        '#663399',\n    red:                  '#FF0000',\n    rosybrown:            '#BC8F8F',\n    royalblue:            '#4169E1',\n    saddlebrown:          '#8B4513',\n    salmon:               '#FA8072',\n    sandybrown:           '#F4A460',\n    seagreen:             '#2E8B57',\n    seashell:             '#FFF5EE',\n    sienna:               '#A0522D',\n    silver:               '#C0C0C0',\n    skyblue:              '#87CEEB',\n    slateblue:            '#6A5ACD',\n    slategray:            '#708090',\n    slategrey:            '#708090',\n    snow:                 '#FFFAFA',\n    springgreen:          '#00FF7F',\n    steelblue:            '#4682B4',\n    tan:                  '#D2B48C',\n    teal:                 '#008080',\n    thistle:              '#D8BFD8',\n    tomato:               '#FF6347',\n    turquoise:            '#40E0D0',\n    violet:               '#EE82EE',\n    wheat:                '#F5DEB3',\n    white:                '#FFFFFF',\n    whitesmoke:           '#F5F5F5',\n    yellow:               '#FFFF00',\n    yellowgreen:          '#9ACD32'\n  };\n\n  /**\n   * @private\n   * @param {Number} p\n   * @param {Number} q\n   * @param {Number} t\n   * @return {Number}\n   */\n  function hue2rgb(p, q, t) {\n    if (t < 0) {\n      t += 1;\n    }\n    if (t > 1) {\n      t -= 1;\n    }\n    if (t < 1 / 6) {\n      return p + (q - p) * 6 * t;\n    }\n    if (t < 1 / 2) {\n      return q;\n    }\n    if (t < 2 / 3) {\n      return p + (q - p) * (2 / 3 - t) * 6;\n    }\n    return p;\n  }\n\n  /**\n   * Returns new color object, when given a color in RGB format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgb = function(color) {\n    return Color.fromSource(Color.sourceFromRgb(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromRgb = function(color) {\n    var match = color.match(Color.reRGBa);\n    if (match) {\n      var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),\n          g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),\n          b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\n\n      return [\n        parseInt(r, 10),\n        parseInt(g, 10),\n        parseInt(b, 10),\n        match[4] ? parseFloat(match[4]) : 1\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given a color in RGBA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromRgba = Color.fromRgb;\n\n  /**\n   * Returns new color object, when given a color in HSL format\n   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n   * @memberOf fabric.Color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsl = function(color) {\n    return Color.fromSource(Color.sourceFromHsl(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n   * @return {Array} source\n   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n   */\n  fabric.Color.sourceFromHsl = function(color) {\n    var match = color.match(Color.reHSLa);\n    if (!match) {\n      return;\n    }\n\n    var h = (((parseFloat(match[1]) % 360) + 360) % 360) / 360,\n        s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),\n        l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),\n        r, g, b;\n\n    if (s === 0) {\n      r = g = b = l;\n    }\n    else {\n      var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n          p = l * 2 - q;\n\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [\n      Math.round(r * 255),\n      Math.round(g * 255),\n      Math.round(b * 255),\n      match[4] ? parseFloat(match[4]) : 1\n    ];\n  };\n\n  /**\n   * Returns new color object, when given a color in HSLA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHsla = Color.fromHsl;\n\n  /**\n   * Returns new color object, when given a color in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: FF5555\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromHex = function(color) {\n    return Color.fromSource(Color.sourceFromHex(color));\n  };\n\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color ex: FF5555 or FF5544CC (RGBa)\n   * @return {Array} source\n   */\n  fabric.Color.sourceFromHex = function(color) {\n    if (color.match(Color.reHex)) {\n      var value = color.slice(color.indexOf('#') + 1),\n          isShortNotation = (value.length === 3 || value.length === 4),\n          isRGBa = (value.length === 8 || value.length === 4),\n          r = isShortNotation ? (value.charAt(0) + value.charAt(0)) : value.substring(0, 2),\n          g = isShortNotation ? (value.charAt(1) + value.charAt(1)) : value.substring(2, 4),\n          b = isShortNotation ? (value.charAt(2) + value.charAt(2)) : value.substring(4, 6),\n          a = isRGBa ? (isShortNotation ? (value.charAt(3) + value.charAt(3)) : value.substring(6, 8)) : 'FF';\n\n      return [\n        parseInt(r, 16),\n        parseInt(g, 16),\n        parseInt(b, 16),\n        parseFloat((parseInt(a, 16) / 255).toFixed(2))\n      ];\n    }\n  };\n\n  /**\n   * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])\n   * @static\n   * @memberOf fabric.Color\n   * @param {Array} source\n   * @return {fabric.Color}\n   */\n  fabric.Color.fromSource = function(source) {\n    var oColor = new Color();\n    oColor.setSource(source);\n    return oColor;\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  /* _FROM_SVG_START_ */\n  function getColorStop(el) {\n    var style = el.getAttribute('style'),\n        offset = el.getAttribute('offset') || 0,\n        color, colorAlpha, opacity, i;\n\n    // convert percents to absolute values\n    offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\n    offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\n    if (style) {\n      var keyValuePairs = style.split(/\\s*;\\s*/);\n\n      if (keyValuePairs[keyValuePairs.length - 1] === '') {\n        keyValuePairs.pop();\n      }\n\n      for (i = keyValuePairs.length; i--; ) {\n\n        var split = keyValuePairs[i].split(/\\s*:\\s*/),\n            key = split[0].trim(),\n            value = split[1].trim();\n\n        if (key === 'stop-color') {\n          color = value;\n        }\n        else if (key === 'stop-opacity') {\n          opacity = value;\n        }\n      }\n    }\n\n    if (!color) {\n      color = el.getAttribute('stop-color') || 'rgb(0,0,0)';\n    }\n    if (!opacity) {\n      opacity = el.getAttribute('stop-opacity');\n    }\n\n    color = new fabric.Color(color);\n    colorAlpha = color.getAlpha();\n    opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\n    opacity *= colorAlpha;\n\n    return {\n      offset: offset,\n      color: color.toRgb(),\n      opacity: opacity\n    };\n  }\n\n  function getLinearCoords(el) {\n    return {\n      x1: el.getAttribute('x1') || 0,\n      y1: el.getAttribute('y1') || 0,\n      x2: el.getAttribute('x2') || '100%',\n      y2: el.getAttribute('y2') || 0\n    };\n  }\n\n  function getRadialCoords(el) {\n    return {\n      x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',\n      y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',\n      r1: 0,\n      x2: el.getAttribute('cx') || '50%',\n      y2: el.getAttribute('cy') || '50%',\n      r2: el.getAttribute('r') || '50%'\n    };\n  }\n  /* _FROM_SVG_END_ */\n\n  var clone = fabric.util.object.clone;\n\n  /**\n   * Gradient class\n   * @class fabric.Gradient\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n   * @see {@link fabric.Gradient#initialize} for constructor definition\n   */\n  fabric.Gradient = fabric.util.createClass(/** @lends fabric.Gradient.prototype */ {\n\n    /**\n     * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetX: 0,\n\n    /**\n     * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetY: 0,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object with type, coords, gradientUnits and colorStops\n     * @return {fabric.Gradient} thisArg\n     */\n    initialize: function(options) {\n      options || (options = { });\n\n      var coords = { };\n\n      this.id = fabric.Object.__uid++;\n      this.type = options.type || 'linear';\n\n      coords = {\n        x1: options.coords.x1 || 0,\n        y1: options.coords.y1 || 0,\n        x2: options.coords.x2 || 0,\n        y2: options.coords.y2 || 0\n      };\n\n      if (this.type === 'radial') {\n        coords.r1 = options.coords.r1 || 0;\n        coords.r2 = options.coords.r2 || 0;\n      }\n      this.coords = coords;\n      this.colorStops = options.colorStops.slice();\n      if (options.gradientTransform) {\n        this.gradientTransform = options.gradientTransform;\n      }\n      this.offsetX = options.offsetX || this.offsetX;\n      this.offsetY = options.offsetY || this.offsetY;\n    },\n\n    /**\n     * Adds another colorStop\n     * @param {Object} colorStop Object with offset and color\n     * @return {fabric.Gradient} thisArg\n     */\n    addColorStop: function(colorStops) {\n      for (var position in colorStops) {\n        var color = new fabric.Color(colorStops[position]);\n        this.colorStops.push({\n          offset: parseFloat(position),\n          color: color.toRgb(),\n          opacity: color.getAlpha()\n        });\n      }\n      return this;\n    },\n\n    /**\n     * Returns object representation of a gradient\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object}\n     */\n    toObject: function(propertiesToInclude) {\n      var object = {\n        type: this.type,\n        coords: this.coords,\n        colorStops: this.colorStops,\n        offsetX: this.offsetX,\n        offsetY: this.offsetY,\n        gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an gradient\n     * @param {Object} object Object to create a gradient for\n     * @return {String} SVG representation of an gradient (linear/radial)\n     */\n    toSVG: function(object) {\n      var coords = clone(this.coords, true), i, len,\n          markup, commonAttributes, colorStops = clone(this.colorStops, true),\n          needsSwap = coords.r1 > coords.r2,\n          offsetX = object.width / 2, offsetY = object.height / 2;\n      // colorStops must be sorted ascending\n      colorStops.sort(function(a, b) {\n        return a.offset - b.offset;\n      });\n      if (object.type === 'path') {\n        offsetX -= object.pathOffset.x;\n        offsetY -= object.pathOffset.y;\n      }\n      for (var prop in coords) {\n        if (prop === 'x1' || prop === 'x2') {\n          coords[prop] += this.offsetX - offsetX;\n        }\n        else if (prop === 'y1' || prop === 'y2') {\n          coords[prop] += this.offsetY - offsetY;\n        }\n      }\n\n      commonAttributes = 'id=\"SVGID_' + this.id +\n                     '\" gradientUnits=\"userSpaceOnUse\"';\n      if (this.gradientTransform) {\n        commonAttributes += ' gradientTransform=\"matrix(' + this.gradientTransform.join(' ') + ')\" ';\n      }\n      if (this.type === 'linear') {\n        markup = [\n          '<linearGradient ',\n          commonAttributes,\n          ' x1=\"', coords.x1,\n          '\" y1=\"', coords.y1,\n          '\" x2=\"', coords.x2,\n          '\" y2=\"', coords.y2,\n          '\">\\n'\n        ];\n      }\n      else if (this.type === 'radial') {\n        // svg radial gradient has just 1 radius. the biggest.\n        markup = [\n          '<radialGradient ',\n          commonAttributes,\n          ' cx=\"', needsSwap ? coords.x1 : coords.x2,\n          '\" cy=\"', needsSwap ? coords.y1 : coords.y2,\n          '\" r=\"', needsSwap ? coords.r1 : coords.r2,\n          '\" fx=\"', needsSwap ? coords.x2 : coords.x1,\n          '\" fy=\"', needsSwap ? coords.y2 : coords.y1,\n          '\">\\n'\n        ];\n      }\n\n      if (this.type === 'radial') {\n        if (needsSwap) {\n          // svg goes from internal to external radius. if radius are inverted, swap color stops.\n          colorStops = colorStops.concat();\n          colorStops.reverse();\n          for (i = 0, len = colorStops.length; i < len; i++) {\n            colorStops[i].offset = 1 - colorStops[i].offset;\n          }\n        }\n        var minRadius = Math.min(coords.r1, coords.r2);\n        if (minRadius > 0) {\n          // i have to shift all colorStops and add new one in 0.\n          var maxRadius = Math.max(coords.r1, coords.r2),\n              percentageShift = minRadius / maxRadius;\n          for (i = 0, len = colorStops.length; i < len; i++) {\n            colorStops[i].offset += percentageShift * (1 - colorStops[i].offset);\n          }\n        }\n      }\n\n      for (i = 0, len = colorStops.length; i < len; i++) {\n        var colorStop = colorStops[i];\n        markup.push(\n          '<stop ',\n          'offset=\"', (colorStop.offset * 100) + '%',\n          '\" style=\"stop-color:', colorStop.color,\n          (typeof colorStop.opacity !== 'undefined' ? ';stop-opacity: ' + colorStop.opacity : ';'),\n          '\"/>\\n'\n        );\n      }\n\n      markup.push((this.type === 'linear' ? '</linearGradient>\\n' : '</radialGradient>\\n'));\n\n      return markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns an instance of CanvasGradient\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {CanvasGradient}\n     */\n    toLive: function(ctx) {\n      var gradient, coords = fabric.util.object.clone(this.coords), i, len;\n\n      if (!this.type) {\n        return;\n      }\n\n      if (this.type === 'linear') {\n        gradient = ctx.createLinearGradient(\n          coords.x1, coords.y1, coords.x2, coords.y2);\n      }\n      else if (this.type === 'radial') {\n        gradient = ctx.createRadialGradient(\n          coords.x1, coords.y1, coords.r1, coords.x2, coords.y2, coords.r2);\n      }\n\n      for (i = 0, len = this.colorStops.length; i < len; i++) {\n        var color = this.colorStops[i].color,\n            opacity = this.colorStops[i].opacity,\n            offset = this.colorStops[i].offset;\n\n        if (typeof opacity !== 'undefined') {\n          color = new fabric.Color(color).setAlpha(opacity).toRgba();\n        }\n        gradient.addColorStop(offset, color);\n      }\n\n      return gradient;\n    }\n  });\n\n  fabric.util.object.extend(fabric.Gradient, {\n\n    /* _FROM_SVG_START_ */\n    /**\n     * Returns {@link fabric.Gradient} instance from an SVG element\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {SVGGradientElement} el SVG gradient element\n     * @param {fabric.Object} instance\n     * @return {fabric.Gradient} Gradient instance\n     * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n     * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n     */\n    fromElement: function(el, instance) {\n      /**\n       *  @example:\n       *\n       *  <linearGradient id=\"linearGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\"/>\n       *    <stop offset=\"100%\" stop-color=\"black\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <linearGradient id=\"linearGrad2\">\n       *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n       *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n       *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *  </radialGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad2\">\n       *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n       *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n       *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n       *  </radialGradient>\n       *\n       */\n\n      var colorStopEls = el.getElementsByTagName('stop'),\n          type,\n          gradientUnits = el.getAttribute('gradientUnits') || 'objectBoundingBox',\n          gradientTransform = el.getAttribute('gradientTransform'),\n          colorStops = [],\n          coords, ellipseMatrix, i;\n\n      if (el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT') {\n        type = 'linear';\n      }\n      else {\n        type = 'radial';\n      }\n\n      if (type === 'linear') {\n        coords = getLinearCoords(el);\n      }\n      else if (type === 'radial') {\n        coords = getRadialCoords(el);\n      }\n\n      for (i = colorStopEls.length; i--; ) {\n        colorStops.push(getColorStop(colorStopEls[i]));\n      }\n\n      ellipseMatrix = _convertPercentUnitsToValues(instance, coords, gradientUnits);\n\n      var gradient = new fabric.Gradient({\n        type: type,\n        coords: coords,\n        colorStops: colorStops,\n        offsetX: -instance.left,\n        offsetY: -instance.top\n      });\n\n      if (gradientTransform || ellipseMatrix !== '') {\n        gradient.gradientTransform = fabric.parseTransformAttribute((gradientTransform || '') + ellipseMatrix);\n      }\n\n      return gradient;\n    },\n    /* _FROM_SVG_END_ */\n\n    /**\n     * Returns {@link fabric.Gradient} instance from its object representation\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {Object} obj\n     * @param {Object} [options] Options object\n     */\n    forObject: function(obj, options) {\n      options || (options = { });\n      _convertPercentUnitsToValues(obj, options.coords, 'userSpaceOnUse');\n      return new fabric.Gradient(options);\n    }\n  });\n\n  /**\n   * @private\n   */\n  function _convertPercentUnitsToValues(object, options, gradientUnits) {\n    var propValue, addFactor = 0, multFactor = 1, ellipseMatrix = '';\n    for (var prop in options) {\n      if (options[prop] === 'Infinity') {\n        options[prop] = 1;\n      }\n      else if (options[prop] === '-Infinity') {\n        options[prop] = 0;\n      }\n      propValue = parseFloat(options[prop], 10);\n      if (typeof options[prop] === 'string' && /^(\\d+\\.\\d+)%|(\\d+)%$/.test(options[prop])) {\n        multFactor = 0.01;\n      }\n      else {\n        multFactor = 1;\n      }\n      if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.width : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.left || 0 : 0;\n      }\n      else if (prop === 'y1' || prop === 'y2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.height : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.top || 0 : 0;\n      }\n      options[prop] = propValue * multFactor + addFactor;\n    }\n    if (object.type === 'ellipse' &&\n        options.r2 !== null &&\n        gradientUnits === 'objectBoundingBox' &&\n        object.rx !== object.ry) {\n\n      var scaleFactor = object.ry / object.rx;\n      ellipseMatrix = ' scale(1, ' + scaleFactor + ')';\n      if (options.y1) {\n        options.y1 /= scaleFactor;\n      }\n      if (options.y2) {\n        options.y2 /= scaleFactor;\n      }\n    }\n    return ellipseMatrix;\n  }\n})();\n\n\n(function() {\n\n  'use strict';\n\n  var toFixed = fabric.util.toFixed;\n\n  /**\n   * Pattern class\n   * @class fabric.Pattern\n   * @see {@link http://fabricjs.com/patterns|Pattern demo}\n   * @see {@link http://fabricjs.com/dynamic-patterns|DynamicPattern demo}\n   * @see {@link fabric.Pattern#initialize} for constructor definition\n   */\n\n\n  fabric.Pattern = fabric.util.createClass(/** @lends fabric.Pattern.prototype */ {\n\n    /**\n     * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @type String\n     * @default\n     */\n    repeat: 'repeat',\n\n    /**\n     * Pattern horizontal offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Pattern vertical offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * transform matrix to change the pattern, imported from svgs.\n     * @type Array\n     * @default\n     */\n    patternTransform: null,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @param {Function} [callback] function to invoke after callback init.\n     * @return {fabric.Pattern} thisArg\n     */\n    initialize: function(options, callback) {\n      options || (options = { });\n\n      this.id = fabric.Object.__uid++;\n      this.setOptions(options);\n      if (!options.source || (options.source && typeof options.source !== 'string')) {\n        callback && callback(this);\n        return;\n      }\n      // function string\n      if (typeof fabric.util.getFunctionBody(options.source) !== 'undefined') {\n        this.source = new Function(fabric.util.getFunctionBody(options.source));\n        callback && callback(this);\n      }\n      else {\n        // img src string\n        var _this = this;\n        this.source = fabric.util.createImage();\n        fabric.util.loadImage(options.source, function(img) {\n          _this.source = img;\n          callback && callback(_this);\n        }, null, this.crossOrigin);\n      }\n    },\n\n    /**\n     * Returns object representation of a pattern\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of a pattern instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          source, object;\n\n      // callback\n      if (typeof this.source === 'function') {\n        source = String(this.source);\n      }\n      // <img> element\n      else if (typeof this.source.src === 'string') {\n        source = this.source.src;\n      }\n      // <canvas> element\n      else if (typeof this.source === 'object' && this.source.toDataURL) {\n        source = this.source.toDataURL();\n      }\n\n      object = {\n        type: 'pattern',\n        source: source,\n        repeat: this.repeat,\n        crossOrigin: this.crossOrigin,\n        offsetX: toFixed(this.offsetX, NUM_FRACTION_DIGITS),\n        offsetY: toFixed(this.offsetY, NUM_FRACTION_DIGITS),\n        patternTransform: this.patternTransform ? this.patternTransform.concat() : null\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a pattern\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a pattern\n     */\n    toSVG: function(object) {\n      var patternSource = typeof this.source === 'function' ? this.source() : this.source,\n          patternWidth = patternSource.width / object.width,\n          patternHeight = patternSource.height / object.height,\n          patternOffsetX = this.offsetX / object.width,\n          patternOffsetY = this.offsetY / object.height,\n          patternImgSrc = '';\n      if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {\n        patternHeight = 1;\n      }\n      if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {\n        patternWidth = 1;\n      }\n      if (patternSource.src) {\n        patternImgSrc = patternSource.src;\n      }\n      else if (patternSource.toDataURL) {\n        patternImgSrc = patternSource.toDataURL();\n      }\n\n      return '<pattern id=\"SVGID_' + this.id +\n                    '\" x=\"' + patternOffsetX +\n                    '\" y=\"' + patternOffsetY +\n                    '\" width=\"' + patternWidth +\n                    '\" height=\"' + patternHeight + '\">\\n' +\n               '<image x=\"0\" y=\"0\"' +\n                      ' width=\"' + patternSource.width +\n                      '\" height=\"' + patternSource.height +\n                      '\" xlink:href=\"' + patternImgSrc +\n               '\"></image>\\n' +\n             '</pattern>\\n';\n    },\n    /* _TO_SVG_END_ */\n\n    setOptions: function(options) {\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n    },\n\n    /**\n     * Returns an instance of CanvasPattern\n     * @param {CanvasRenderingContext2D} ctx Context to create pattern\n     * @return {CanvasPattern}\n     */\n    toLive: function(ctx) {\n      var source = typeof this.source === 'function' ? this.source() : this.source;\n\n      // if the image failed to load, return, and allow rest to continue loading\n      if (!source) {\n        return '';\n      }\n\n      // if an image\n      if (typeof source.src !== 'undefined') {\n        if (!source.complete) {\n          return '';\n        }\n        if (source.naturalWidth === 0 || source.naturalHeight === 0) {\n          return '';\n        }\n      }\n      return ctx.createPattern(source, this.repeat);\n    }\n  });\n})();\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Shadow) {\n    fabric.warn('fabric.Shadow is already defined.');\n    return;\n  }\n\n  /**\n   * Shadow class\n   * @class fabric.Shadow\n   * @see {@link http://fabricjs.com/shadows|Shadow demo}\n   * @see {@link fabric.Shadow#initialize} for constructor definition\n   */\n  fabric.Shadow = fabric.util.createClass(/** @lends fabric.Shadow.prototype */ {\n\n    /**\n     * Shadow color\n     * @type String\n     * @default\n     */\n    color: 'rgb(0,0,0)',\n\n    /**\n     * Shadow blur\n     * @type Number\n     */\n    blur: 0,\n\n    /**\n     * Shadow horizontal offset\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Shadow vertical offset\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * Whether the shadow should affect stroke operations\n     * @type Boolean\n     * @default\n     */\n    affectStroke: false,\n\n    /**\n     * Indicates whether toObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Constructor\n     * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetY properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px\")\n     * @return {fabric.Shadow} thisArg\n     */\n    initialize: function(options) {\n\n      if (typeof options === 'string') {\n        options = this._parseShadow(options);\n      }\n\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n\n      this.id = fabric.Object.__uid++;\n    },\n\n    /**\n     * @private\n     * @param {String} shadow Shadow value to parse\n     * @return {Object} Shadow object with color, offsetX, offsetY and blur\n     */\n    _parseShadow: function(shadow) {\n      var shadowStr = shadow.trim(),\n          offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [],\n          color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';\n\n      return {\n        color: color.trim(),\n        offsetX: parseInt(offsetsAndBlur[1], 10) || 0,\n        offsetY: parseInt(offsetsAndBlur[2], 10) || 0,\n        blur: parseInt(offsetsAndBlur[3], 10) || 0\n      };\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n     * @return {String} Returns CSS3 text-shadow declaration\n     */\n    toString: function() {\n      return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of a shadow\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a shadow\n     */\n    toSVG: function(object) {\n      var fBoxX = 40, fBoxY = 40, NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          offset = fabric.util.rotateVector(\n            { x: this.offsetX, y: this.offsetY },\n            fabric.util.degreesToRadians(-object.angle)),\n          BLUR_BOX = 20, color = new fabric.Color(this.color);\n\n      if (object.width && object.height) {\n        //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n        // we add some extra space to filter box to contain the blur ( 20 )\n        fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n        fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n      }\n      if (object.flipX) {\n        offset.x *= -1;\n      }\n      if (object.flipY) {\n        offset.y *= -1;\n      }\n\n      return (\n        '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' +\n          'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + '>\\n' +\n          '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' +\n            toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '\"></feGaussianBlur>\\n' +\n          '\\t<feOffset dx=\"' + toFixed(offset.x, NUM_FRACTION_DIGITS) +\n          '\" dy=\"' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '\" result=\"oBlur\" ></feOffset>\\n' +\n          '\\t<feFlood flood-color=\"' + color.toRgb() + '\" flood-opacity=\"' + color.getAlpha() + '\"/>\\n' +\n          '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' +\n          '\\t<feMerge>\\n' +\n            '\\t\\t<feMergeNode></feMergeNode>\\n' +\n            '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' +\n          '\\t</feMerge>\\n' +\n        '</filter>\\n');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns object representation of a shadow\n     * @return {Object} Object representation of a shadow instance\n     */\n    toObject: function() {\n      if (this.includeDefaultValues) {\n        return {\n          color: this.color,\n          blur: this.blur,\n          offsetX: this.offsetX,\n          offsetY: this.offsetY,\n          affectStroke: this.affectStroke\n        };\n      }\n      var obj = { }, proto = fabric.Shadow.prototype;\n\n      ['color', 'blur', 'offsetX', 'offsetY', 'affectStroke'].forEach(function(prop) {\n        if (this[prop] !== proto[prop]) {\n          obj[prop] = this[prop];\n        }\n      }, this);\n\n      return obj;\n    }\n  });\n\n  /**\n   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n   * @static\n   * @field\n   * @memberOf fabric.Shadow\n   */\n  // eslint-disable-next-line max-len\n  fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:px)?(?:\\s?|$))?(-?\\d+(?:px)?(?:\\s?|$))?(\\d+(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function () {\n\n  'use strict';\n\n  if (fabric.StaticCanvas) {\n    fabric.warn('fabric.StaticCanvas is already defined.');\n    return;\n  }\n\n  // aliases for faster resolution\n  var extend = fabric.util.object.extend,\n      getElementOffset = fabric.util.getElementOffset,\n      removeFromArray = fabric.util.removeFromArray,\n      toFixed = fabric.util.toFixed,\n      transformPoint = fabric.util.transformPoint,\n      invertTransform = fabric.util.invertTransform,\n\n      CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');\n\n  /**\n   * Static canvas class\n   * @class fabric.StaticCanvas\n   * @mixes fabric.Collection\n   * @mixes fabric.Observable\n   * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n   * @see {@link fabric.StaticCanvas#initialize} for constructor definition\n   * @fires before:render\n   * @fires after:render\n   * @fires canvas:cleared\n   * @fires object:added\n   * @fires object:removed\n   */\n  fabric.StaticCanvas = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n      this.renderAndResetBound = this.renderAndReset.bind(this);\n      this.requestRenderAllBound = this.requestRenderAll.bind(this);\n      this._initStatic(el, options);\n    },\n\n    /**\n     * Background color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    backgroundColor: '',\n\n    /**\n     * Background image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundImage}.\n     * <b>Backwards incompatibility note:</b> The \"backgroundImageOpacity\"\n     * and \"backgroundImageStretch\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#opacity}, {@link fabric.Image#width} and {@link fabric.Image#height}.\n     * @type fabric.Image\n     * @default\n     */\n    backgroundImage: null,\n\n    /**\n     * Overlay color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayColor}\n     * @since 1.3.9\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    overlayColor: '',\n\n    /**\n     * Overlay image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayImage}.\n     * <b>Backwards incompatibility note:</b> The \"overlayImageLeft\"\n     * and \"overlayImageTop\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#left} and {@link fabric.Image#top}.\n     * @type fabric.Image\n     * @default\n     */\n    overlayImage: null,\n\n    /**\n     * Indicates whether toObject/toDatalessObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Indicates whether objects' state should be saved\n     * @type Boolean\n     * @default\n     */\n    stateful: false,\n\n    /**\n     * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove},\n     * {@link fabric.StaticCanvas.moveTo}, {@link fabric.StaticCanvas.clear} and many more, should also re-render canvas.\n     * Disabling this option will not give a performance boost when adding/removing a lot of objects to/from canvas at once\n     * since the renders are quequed and executed one per frame.\n     * Disabling is suggested anyway and managing the renders of the app manually is not a big effort ( canvas.requestRenderAll() )\n     * Left default to true to do not break documentation and old app, fiddles.\n     * @type Boolean\n     * @default\n     */\n    renderOnAddRemove: true,\n\n    /**\n     * Function that determines clipping of entire canvas area\n     * Being passed context as first argument. See clipping canvas area in {@link https://github.com/kangax/fabric.js/wiki/FAQ}\n     * @deprecated since 2.0.0\n     * @type Function\n     * @default\n     */\n    clipTo: null,\n\n    /**\n     * Indicates whether object controls (borders/controls) are rendered above overlay image\n     * @type Boolean\n     * @default\n     */\n    controlsAboveOverlay: false,\n\n    /**\n     * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n     * @type Boolean\n     * @default\n     */\n    allowTouchScrolling: false,\n\n    /**\n     * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n     * @type Boolean\n     * @default\n     */\n    imageSmoothingEnabled: true,\n\n    /**\n     * The transformation (in the format of Canvas transform) which focuses the viewport\n     * @type Array\n     * @default\n     */\n    viewportTransform: fabric.iMatrix.concat(),\n\n    /**\n     * if set to false background image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    backgroundVpt: true,\n\n    /**\n     * if set to false overlya image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    overlayVpt: true,\n\n    /**\n     * Callback; invoked right before object is about to be scaled/rotated\n     * @deprecated since 2.3.0\n     * Use before:transform event\n     */\n    onBeforeScaleRotate: function () {\n      /* NOOP */\n    },\n\n    /**\n     * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n     * @type Boolean\n     * @default\n     */\n    enableRetinaScaling: true,\n\n    /**\n     * Describe canvas element extension over design\n     * properties are tl,tr,bl,br.\n     * if canvas is not zoomed/panned those points are the four corner of canvas\n     * if canvas is viewportTransformed you those points indicate the extension\n     * of canvas element in plain untrasformed coordinates\n     * The coordinates get updated with @method calcViewportBoundaries.\n     * @memberOf fabric.StaticCanvas.prototype\n     */\n    vptCoords: { },\n\n    /**\n     * Based on vptCoords and object.aCoords, skip rendering of objects that\n     * are not included in current viewport.\n     * May greatly help in applications with crowded canvas and use of zoom/pan\n     * If One of the corner of the bounding box of the object is on the canvas\n     * the objects get rendered.\n     * @memberOf fabric.StaticCanvas.prototype\n     * @type Boolean\n     * @default\n     */\n    skipOffscreen: true,\n\n    /**\n     * @private\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     */\n    _initStatic: function(el, options) {\n      var cb = this.requestRenderAllBound;\n      this._objects = [];\n      this._createLowerCanvas(el);\n      this._initOptions(options);\n      this._setImageSmoothing();\n      // only initialize retina scaling once\n      if (!this.interactive) {\n        this._initRetinaScaling();\n      }\n\n      if (options.overlayImage) {\n        this.setOverlayImage(options.overlayImage, cb);\n      }\n      if (options.backgroundImage) {\n        this.setBackgroundImage(options.backgroundImage, cb);\n      }\n      if (options.backgroundColor) {\n        this.setBackgroundColor(options.backgroundColor, cb);\n      }\n      if (options.overlayColor) {\n        this.setOverlayColor(options.overlayColor, cb);\n      }\n      this.calcOffset();\n    },\n\n    /**\n     * @private\n     */\n    _isRetinaScaling: function() {\n      return (fabric.devicePixelRatio !== 1 && this.enableRetinaScaling);\n    },\n\n    /**\n     * @private\n     * @return {Number} retinaScaling if applied, otherwise 1;\n     */\n    getRetinaScaling: function() {\n      return this._isRetinaScaling() ? fabric.devicePixelRatio : 1;\n    },\n\n    /**\n     * @private\n     */\n    _initRetinaScaling: function() {\n      if (!this._isRetinaScaling()) {\n        return;\n      }\n      this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n      this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n\n      this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n    },\n\n    /**\n     * Calculates canvas element offset relative to the document\n     * This method is also attached as \"resize\" event handler of window\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    calcOffset: function () {\n      this._offset = getElementOffset(this.lowerCanvasEl);\n      return this;\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to\n     * @param {Function} callback callback to invoke when image is loaded and set as an overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}\n     * @example <caption>Normal overlayImage with left/top = 0</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage with different properties</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage loaded from cross-origin</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setOverlayImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('overlayImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/djnr8o7a/28/|jsFiddle demo}\n     * @example <caption>Normal backgroundImage with left/top = 0</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage with different properties</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage loaded from cross-origin</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setBackgroundImage: function (image, callback, options) {\n      return this.__setBgOverlayImage('backgroundImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayColor|foreground color} for this canvas\n     * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set foreground color to\n     * @param {Function} callback Callback to invoke when foreground color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}\n     * @example <caption>Normal overlayColor - color value</caption>\n     * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setOverlayColor: function(overlayColor, callback) {\n      return this.__setBgOverlayColor('overlayColor', overlayColor, callback);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas\n     * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to\n     * @param {Function} callback Callback to invoke when background color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}\n     * @example <caption>Normal backgroundColor - color value</caption>\n     * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setBackgroundColor: function(backgroundColor, callback) {\n      return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);\n    },\n\n    /**\n     * @private\n     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-imagesmoothingenabled|WhatWG Canvas Standard}\n     */\n    _setImageSmoothing: function() {\n      var ctx = this.getContext();\n\n      ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled\n        || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;\n      ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}\n     * or {@link fabric.StaticCanvas#overlayImage|overlayImage})\n     * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.\n     */\n    __setBgOverlayImage: function(property, image, callback, options) {\n      if (typeof image === 'string') {\n        fabric.util.loadImage(image, function(img) {\n          img && (this[property] = new fabric.Image(img, options));\n          callback && callback(img);\n        }, this, options && options.crossOrigin);\n      }\n      else {\n        options && image.setOptions(options);\n        this[property] = image;\n        callback && callback(image);\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}\n     * or {@link fabric.StaticCanvas#overlayColor|overlayColor})\n     * @param {(Object|String|null)} color Object with pattern information, color value or null\n     * @param {Function} [callback] Callback is invoked when color is set\n     */\n    __setBgOverlayColor: function(property, color, callback) {\n      this[property] = color;\n      this._initGradient(color, property);\n      this._initPattern(color, property, callback);\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _createCanvasElement: function() {\n      var element = fabric.util.createCanvasElement();\n      if (!element) {\n        throw CANVAS_INIT_ERROR;\n      }\n      if (!element.style) {\n        element.style = { };\n      }\n      if (typeof element.getContext === 'undefined') {\n        throw CANVAS_INIT_ERROR;\n      }\n      return element;\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initOptions: function (options) {\n      this._setOptions(options);\n\n      this.width = this.width || parseInt(this.lowerCanvasEl.width, 10) || 0;\n      this.height = this.height || parseInt(this.lowerCanvasEl.height, 10) || 0;\n\n      if (!this.lowerCanvasEl.style) {\n        return;\n      }\n\n      this.lowerCanvasEl.width = this.width;\n      this.lowerCanvasEl.height = this.height;\n\n      this.lowerCanvasEl.style.width = this.width + 'px';\n      this.lowerCanvasEl.style.height = this.height + 'px';\n\n      this.viewportTransform = this.viewportTransform.slice();\n    },\n\n    /**\n     * Creates a bottom canvas\n     * @private\n     * @param {HTMLElement} [canvasEl]\n     */\n    _createLowerCanvas: function (canvasEl) {\n      // canvasEl === 'HTMLCanvasElement' does not work on jsdom/node\n      if (canvasEl && canvasEl.getContext) {\n        this.lowerCanvasEl = canvasEl;\n      }\n      else {\n        this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement();\n      }\n\n      fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');\n\n      if (this.interactive) {\n        this._applyCanvasStyle(this.lowerCanvasEl);\n      }\n\n      this.contextContainer = this.lowerCanvasEl.getContext('2d');\n    },\n\n    /**\n     * Returns canvas width (in px)\n     * @return {Number}\n     */\n    getWidth: function () {\n      return this.width;\n    },\n\n    /**\n     * Returns canvas height (in px)\n     * @return {Number}\n     */\n    getHeight: function () {\n      return this.height;\n    },\n\n    /**\n     * Sets width of this canvas instance\n     * @param {Number|String} value                         Value to set width to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setWidth: function (value, options) {\n      return this.setDimensions({ width: value }, options);\n    },\n\n    /**\n     * Sets height of this canvas instance\n     * @param {Number|String} value                         Value to set height to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setHeight: function (value, options) {\n      return this.setDimensions({ height: value }, options);\n    },\n\n    /**\n     * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n     * @param {Object}        dimensions                    Object with width/height properties\n     * @param {Number|String} [dimensions.width]            Width of canvas element\n     * @param {Number|String} [dimensions.height]           Height of canvas element\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setDimensions: function (dimensions, options) {\n      var cssValue;\n\n      options = options || {};\n\n      for (var prop in dimensions) {\n        cssValue = dimensions[prop];\n\n        if (!options.cssOnly) {\n          this._setBackstoreDimension(prop, dimensions[prop]);\n          cssValue += 'px';\n          this.hasLostContext = true;\n        }\n\n        if (!options.backstoreOnly) {\n          this._setCssDimension(prop, cssValue);\n        }\n      }\n      if (this._isCurrentlyDrawing) {\n        this.freeDrawingBrush && this.freeDrawingBrush._setBrushStyles();\n      }\n      this._initRetinaScaling();\n      this._setImageSmoothing();\n      this.calcOffset();\n\n      if (!options.cssOnly) {\n        this.requestRenderAll();\n      }\n\n      return this;\n    },\n\n    /**\n     * Helper for setting width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {Number} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setBackstoreDimension: function (prop, value) {\n      this.lowerCanvasEl[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl[prop] = value;\n      }\n\n      if (this.cacheCanvasEl) {\n        this.cacheCanvasEl[prop] = value;\n      }\n\n      this[prop] = value;\n\n      return this;\n    },\n\n    /**\n     * Helper for setting css width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {String} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setCssDimension: function (prop, value) {\n      this.lowerCanvasEl.style[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.style[prop] = value;\n      }\n\n      if (this.wrapperEl) {\n        this.wrapperEl.style[prop] = value;\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns canvas zoom level\n     * @return {Number}\n     */\n    getZoom: function () {\n      return this.viewportTransform[0];\n    },\n\n    /**\n     * Sets viewport transform of this canvas instance\n     * @param {Array} vpt the transform in the form of context.transform\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setViewportTransform: function (vpt) {\n      var activeObject = this._activeObject, object, ignoreVpt = false, skipAbsolute = true, i, len;\n      this.viewportTransform = vpt;\n      for (i = 0, len = this._objects.length; i < len; i++) {\n        object = this._objects[i];\n        object.group || object.setCoords(ignoreVpt, skipAbsolute);\n      }\n      if (activeObject && activeObject.type === 'activeSelection') {\n        activeObject.setCoords(ignoreVpt, skipAbsolute);\n      }\n      this.calcViewportBoundaries();\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Sets zoom level of this canvas instance, zoom centered around point\n     * @param {fabric.Point} point to zoom with respect to\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    zoomToPoint: function (point, value) {\n      // TODO: just change the scale, preserve other transformations\n      var before = point, vpt = this.viewportTransform.slice(0);\n      point = transformPoint(point, invertTransform(this.viewportTransform));\n      vpt[0] = value;\n      vpt[3] = value;\n      var after = transformPoint(point, vpt);\n      vpt[4] += before.x - after.x;\n      vpt[5] += before.y - after.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Sets zoom level of this canvas instance\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setZoom: function (value) {\n      this.zoomToPoint(new fabric.Point(0, 0), value);\n      return this;\n    },\n\n    /**\n     * Pan viewport so as to place point at top left corner of canvas\n     * @param {fabric.Point} point to move to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    absolutePan: function (point) {\n      var vpt = this.viewportTransform.slice(0);\n      vpt[4] = -point.x;\n      vpt[5] = -point.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Pans viewpoint relatively\n     * @param {fabric.Point} point (position vector) to move by\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    relativePan: function (point) {\n      return this.absolutePan(new fabric.Point(\n        -point.x - this.viewportTransform[4],\n        -point.y - this.viewportTransform[5]\n      ));\n    },\n\n    /**\n     * Returns &lt;canvas> element corresponding to this instance\n     * @return {HTMLCanvasElement}\n     */\n    getElement: function () {\n      return this.lowerCanvasEl;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was added\n     */\n    _onObjectAdded: function(obj) {\n      this.stateful && obj.setupState();\n      obj._set('canvas', this);\n      obj.setCoords();\n      this.fire('object:added', { target: obj });\n      obj.fire('added');\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      this.fire('object:removed', { target: obj });\n      obj.fire('removed');\n      delete obj.canvas;\n    },\n\n    /**\n     * Clears specified context of canvas element\n     * @param {CanvasRenderingContext2D} ctx Context to clear\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clearContext: function(ctx) {\n      ctx.clearRect(0, 0, this.width, this.height);\n      return this;\n    },\n\n    /**\n     * Returns context of canvas where objects are drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getContext: function () {\n      return this.contextContainer;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      this._objects.length = 0;\n      this.backgroundImage = null;\n      this.overlayImage = null;\n      this.backgroundColor = '';\n      this.overlayColor = '';\n      if (this._hasITextHandlers) {\n        this.off('mouse:up', this._mouseUpITextHandler);\n        this._iTextInstances = null;\n        this._hasITextHandlers = false;\n      }\n      this.clearContext(this.contextContainer);\n      this.fire('canvas:cleared');\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Renders the canvas\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._objects);\n      return this;\n    },\n\n    /**\n     * Function created to be instance bound at initialization\n     * used in requestAnimationFrame rendering\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAndReset: function() {\n      this.isRendering = 0;\n      this.renderAll();\n    },\n\n    /**\n     * Append a renderAll request to next animation frame.\n     * a boolean flag will avoid appending more.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    requestRenderAll: function () {\n      if (!this.isRendering) {\n        this.isRendering = fabric.util.requestAnimFrame(this.renderAndResetBound);\n      }\n      return this;\n    },\n\n    /**\n     * Calculate the position of the 4 corner of canvas with current viewportTransform.\n     * helps to determinate when an object is in the current rendering viewport using\n     * object absolute coordinates ( aCoords )\n     * @return {Object} points.tl\n     * @chainable\n     */\n    calcViewportBoundaries: function() {\n      var points = { }, width = this.width, height = this.height,\n          iVpt = invertTransform(this.viewportTransform);\n      points.tl = transformPoint({ x: 0, y: 0 }, iVpt);\n      points.br = transformPoint({ x: width, y: height }, iVpt);\n      points.tr = new fabric.Point(points.br.x, points.tl.y);\n      points.bl = new fabric.Point(points.tl.x, points.br.y);\n      this.vptCoords = points;\n      return points;\n    },\n\n    /**\n     * Renders background, objects, overlay and controls.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {Array} objects to render\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderCanvas: function(ctx, objects) {\n      var v = this.viewportTransform;\n      if (this.isRendering) {\n        fabric.util.cancelAnimFrame(this.isRendering);\n        this.isRendering = 0;\n      }\n      this.calcViewportBoundaries();\n      this.clearContext(ctx);\n      this.fire('before:render');\n      if (this.clipTo) {\n        fabric.util.clipContext(this, ctx);\n      }\n      this._renderBackground(ctx);\n\n      ctx.save();\n      //apply viewport transform once for all rendering process\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      this._renderObjects(ctx, objects);\n      ctx.restore();\n      if (!this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      if (this.clipTo) {\n        ctx.restore();\n      }\n      this._renderOverlay(ctx);\n      if (this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n      this.fire('after:render');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Array} objects to render\n     */\n    _renderObjects: function(ctx, objects) {\n      var i, len;\n      for (i = 0, len = objects.length; i < len; ++i) {\n        objects[i] && objects[i].render(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {string} property 'background' or 'overlay'\n     */\n    _renderBackgroundOrOverlay: function(ctx, property) {\n      var object = this[property + 'Color'], v;\n      if (object) {\n        ctx.fillStyle = object.toLive\n          ? object.toLive(ctx, this)\n          : object;\n\n        ctx.fillRect(\n          object.offsetX || 0,\n          object.offsetY || 0,\n          this.width,\n          this.height);\n      }\n      object = this[property + 'Image'];\n      if (object) {\n        if (this[property + 'Vpt']) {\n          v = this.viewportTransform;\n          ctx.save();\n          ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n        }\n        object.render(ctx);\n        this[property + 'Vpt'] && ctx.restore();\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'background');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderOverlay: function(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'overlay');\n    },\n\n    /**\n     * Returns coordinates of a center of canvas.\n     * Returned value is an object with top and left properties\n     * @return {Object} object with \"top\" and \"left\" number values\n     */\n    getCenter: function () {\n      return {\n        top: this.height / 2,\n        left: this.width / 2\n      };\n    },\n\n    /**\n     * Centers object horizontally in the canvas\n     * @param {fabric.Object} object Object to center horizontally\n     * @return {fabric.Canvas} thisArg\n     */\n    centerObjectH: function (object) {\n      return this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));\n    },\n\n    /**\n     * Centers object vertically in the canvas\n     * @param {fabric.Object} object Object to center vertically\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObjectV: function (object) {\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the canvas\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObject: function(object) {\n      var center = this.getCenter();\n\n      return this._centerObject(object, new fabric.Point(center.left, center.top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the viewport\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObject: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, vpCenter);\n    },\n\n    /**\n     * Centers object horizontally in the viewport, object.top is unchanged\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectH: function(object) {\n      var vpCenter = this.getVpCenter();\n      this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));\n      return this;\n    },\n\n    /**\n     * Centers object Vertically in the viewport, object.top is unchanged\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectV: function(object) {\n      var vpCenter = this.getVpCenter();\n\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));\n    },\n\n    /**\n     * Calculate the point in canvas that correspond to the center of actual viewport.\n     * @return {fabric.Point} vpCenter, viewport center\n     * @chainable\n     */\n    getVpCenter: function() {\n      var center = this.getCenter(),\n          iVpt = invertTransform(this.viewportTransform);\n      return transformPoint({ x: center.left, y: center.top }, iVpt);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} object Object to center\n     * @param {fabric.Point} center Center point\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    _centerObject: function(object, center) {\n      object.setPositionByOrigin(center, 'center', 'center');\n      object.setCoords();\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Returs dataless JSON representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {String} json string\n     */\n    toDatalessJSON: function (propertiesToInclude) {\n      return this.toDatalessObject(propertiesToInclude);\n    },\n\n    /**\n     * Returns object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toObject', propertiesToInclude);\n    },\n\n    /**\n     * Returns dataless object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function (propertiesToInclude) {\n      return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n    },\n\n    /**\n     * @private\n     */\n    _toObjectMethod: function (methodName, propertiesToInclude) {\n\n      var data = {\n        version: fabric.version,\n        objects: this._toObjects(methodName, propertiesToInclude)\n      };\n\n      extend(data, this.__serializeBgOverlay(methodName, propertiesToInclude));\n\n      fabric.util.populateWithProperties(this, data, propertiesToInclude);\n\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    _toObjects: function(methodName, propertiesToInclude) {\n      return this.getObjects().filter(function(object) {\n        return !object.excludeFromExport;\n      }).map(function(instance) {\n        return this._toObject(instance, methodName, propertiesToInclude);\n      }, this);\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      var originalValue;\n\n      if (!this.includeDefaultValues) {\n        originalValue = instance.includeDefaultValues;\n        instance.includeDefaultValues = false;\n      }\n\n      var object = instance[methodName](propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        instance.includeDefaultValues = originalValue;\n      }\n      return object;\n    },\n\n    /**\n     * @private\n     */\n    __serializeBgOverlay: function(methodName, propertiesToInclude) {\n      var data = { }, bgImage = this.backgroundImage, overlay = this.overlayImage;\n\n      if (this.backgroundColor) {\n        data.background = this.backgroundColor.toObject\n          ? this.backgroundColor.toObject(propertiesToInclude)\n          : this.backgroundColor;\n      }\n\n      if (this.overlayColor) {\n        data.overlay = this.overlayColor.toObject\n          ? this.overlayColor.toObject(propertiesToInclude)\n          : this.overlayColor;\n      }\n      if (bgImage && !bgImage.excludeFromExport) {\n        data.backgroundImage = this._toObject(bgImage, methodName, propertiesToInclude);\n      }\n      if (overlay && !overlay.excludeFromExport) {\n        data.overlayImage = this._toObject(overlay, methodName, propertiesToInclude);\n      }\n\n      return data;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n     * a zoomed canvas will then produce zoomed SVG output.\n     * @type Boolean\n     * @default\n     */\n    svgViewportTransformation: true,\n\n    /**\n     * Returns SVG representation of canvas\n     * @function\n     * @param {Object} [options] Options object for SVG output\n     * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n     * @param {Object} [options.viewBox] SVG viewbox object\n     * @param {Number} [options.viewBox.x] x-cooridnate of viewbox\n     * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n     * @param {Number} [options.viewBox.width] Width of viewbox\n     * @param {Number} [options.viewBox.height] Height of viewbox\n     * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n     * @param {String} [options.width] desired width of svg with or without units\n     * @param {String} [options.height] desired height of svg with or without units\n     * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n     * @return {String} SVG string\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n     * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n     * @example <caption>Normal SVG output</caption>\n     * var svg = canvas.toSVG();\n     * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n     * var svg = canvas.toSVG({suppressPreamble: true});\n     * @example <caption>SVG output with viewBox attribute</caption>\n     * var svg = canvas.toSVG({\n     *   viewBox: {\n     *     x: 100,\n     *     y: 100,\n     *     width: 200,\n     *     height: 300\n     *   }\n     * });\n     * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n     * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n     * @example <caption>Modify SVG output with reviver function</caption>\n     * var svg = canvas.toSVG(null, function(svg) {\n     *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n     * });\n     */\n    toSVG: function(options, reviver) {\n      options || (options = { });\n\n      var markup = [];\n\n      this._setSVGPreamble(markup, options);\n      this._setSVGHeader(markup, options);\n\n      this._setSVGBgOverlayColor(markup, 'backgroundColor');\n      this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n\n      this._setSVGObjects(markup, reviver);\n\n      this._setSVGBgOverlayColor(markup, 'overlayColor');\n      this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\n      markup.push('</svg>');\n\n      return markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _setSVGPreamble: function(markup, options) {\n      if (options.suppressPreamble) {\n        return;\n      }\n      markup.push(\n        '<?xml version=\"1.0\" encoding=\"', (options.encoding || 'UTF-8'), '\" standalone=\"no\" ?>\\n',\n        '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ',\n        '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n'\n      );\n    },\n\n    /**\n     * @private\n     */\n    _setSVGHeader: function(markup, options) {\n      var width = options.width || this.width,\n          height = options.height || this.height,\n          vpt, viewBox = 'viewBox=\"0 0 ' + this.width + ' ' + this.height + '\" ',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      if (options.viewBox) {\n        viewBox = 'viewBox=\"' +\n                options.viewBox.x + ' ' +\n                options.viewBox.y + ' ' +\n                options.viewBox.width + ' ' +\n                options.viewBox.height + '\" ';\n      }\n      else {\n        if (this.svgViewportTransformation) {\n          vpt = this.viewportTransform;\n          viewBox = 'viewBox=\"' +\n                  toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + ' ' +\n                  toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '\" ';\n        }\n      }\n\n      markup.push(\n        '<svg ',\n        'xmlns=\"http://www.w3.org/2000/svg\" ',\n        'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ',\n        'version=\"1.1\" ',\n        'width=\"', width, '\" ',\n        'height=\"', height, '\" ',\n        viewBox,\n        'xml:space=\"preserve\">\\n',\n        '<desc>Created with Fabric.js ', fabric.version, '</desc>\\n',\n        '<defs>\\n',\n        this.createSVGFontFacesMarkup(),\n        this.createSVGRefElementsMarkup(),\n        '</defs>\\n'\n      );\n    },\n\n    /**\n     * Creates markup containing SVG referenced elements like patterns, gradients etc.\n     * @return {String}\n     */\n    createSVGRefElementsMarkup: function() {\n      var _this = this,\n          markup = ['backgroundColor', 'overlayColor'].map(function(prop) {\n            var fill = _this[prop];\n            if (fill && fill.toLive) {\n              return fill.toSVG(_this, false);\n            }\n          });\n      return markup.join('');\n    },\n\n    /**\n     * Creates markup containing SVG font faces,\n     * font URLs for font faces must be collected by developers\n     * and are not extracted from the DOM by fabricjs\n     * @param {Array} objects Array of fabric objects\n     * @return {String}\n     */\n    createSVGFontFacesMarkup: function() {\n      var markup = '', fontList = { }, obj, fontFamily,\n          style, row, rowIndex, _char, charIndex, i, len,\n          fontPaths = fabric.fontPaths, objects = this.getObjects();\n\n      for (i = 0, len = objects.length; i < len; i++) {\n        obj = objects[i];\n        fontFamily = obj.fontFamily;\n        if (obj.type.indexOf('text') === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {\n          continue;\n        }\n        fontList[fontFamily] = true;\n        if (!obj.styles) {\n          continue;\n        }\n        style = obj.styles;\n        for (rowIndex in style) {\n          row = style[rowIndex];\n          for (charIndex in row) {\n            _char = row[charIndex];\n            fontFamily = _char.fontFamily;\n            if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n              fontList[fontFamily] = true;\n            }\n          }\n        }\n      }\n\n      for (var j in fontList) {\n        markup += [\n          '\\t\\t@font-face {\\n',\n          '\\t\\t\\tfont-family: \\'', j, '\\';\\n',\n          '\\t\\t\\tsrc: url(\\'', fontPaths[j], '\\');\\n',\n          '\\t\\t}\\n'\n        ].join('');\n      }\n\n      if (markup) {\n        markup = [\n          '\\t<style type=\"text/css\">',\n          '<![CDATA[\\n',\n          markup,\n          ']]>',\n          '</style>\\n'\n        ].join('');\n      }\n\n      return markup;\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObjects: function(markup, reviver) {\n      var instance, i, len, objects = this.getObjects();\n      for (i = 0, len = objects.length; i < len; i++) {\n        instance = objects[i];\n        if (instance.excludeFromExport) {\n          continue;\n        }\n        this._setSVGObject(markup, instance, reviver);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      markup.push(instance.toSVG(reviver));\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayImage: function(markup, property, reviver) {\n      if (this[property] && this[property].toSVG) {\n        markup.push(this[property].toSVG(reviver));\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayColor: function(markup, property) {\n      var filler = this[property], vpt = this.viewportTransform, finalWidth = this.width / vpt[0],\n          finalHeight = this.height / vpt[3];\n      if (!filler) {\n        return;\n      }\n      if (filler.toLive) {\n        var repeat = filler.repeat;\n        markup.push(\n          '<rect transform=\"translate(', finalWidth / 2, ',', finalHeight / 2, ')\"',\n          ' x=\"', filler.offsetX - finalWidth / 2, '\" y=\"', filler.offsetY - finalHeight / 2, '\" ',\n          'width=\"',\n          (repeat === 'repeat-y' || repeat === 'no-repeat'\n            ? filler.source.width\n            : finalWidth ),\n          '\" height=\"',\n          (repeat === 'repeat-x' || repeat === 'no-repeat'\n            ? filler.source.height\n            : finalHeight),\n          '\" fill=\"url(#SVGID_' + filler.id + ')\"',\n          '></rect>\\n'\n        );\n      }\n      else {\n        markup.push(\n          '<rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" ',\n          'fill=\"', this[property], '\"',\n          '></rect>\\n'\n        );\n      }\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the bottom of the stack of drawn objects\n     * @param {fabric.Object} object Object to send to back\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendToBack: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, objs;\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.unshift(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.unshift(object);\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the top of the stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringToFront: function (object) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, objs;\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n          this._objects.push(obj);\n        }\n      }\n      else {\n        removeFromArray(this._objects, object);\n        this._objects.push(object);\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Moves an object or a selection down in stack of drawn objects\n     * An optional paramter, intersecting allowes to move the object in behind\n     * the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendBackwards: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, idx, newIdx, objs, objsMoved = 0;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx > 0 + objsMoved) {\n            newIdx = idx - 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n          objsMoved++;\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== 0) {\n          // if object is not on the bottom of stack\n          newIdx = this._findNewLowerIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewLowerIndex: function(object, idx, intersecting) {\n      var newIdx, i;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse down the stack looking for the nearest intersecting object\n        for (i = idx - 1; i >= 0; --i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx - 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object or a selection up in stack of drawn objects\n     * An optional paramter, intersecting allowes to move the object in front\n     * of the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringForward: function (object, intersecting) {\n      if (!object) {\n        return this;\n      }\n      var activeSelection = this._activeObject,\n          i, obj, idx, newIdx, objs, objsMoved = 0;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n          if (idx < this._objects.length - 1 - objsMoved) {\n            newIdx = idx + 1;\n            removeFromArray(this._objects, obj);\n            this._objects.splice(newIdx, 0, obj);\n          }\n          objsMoved++;\n        }\n      }\n      else {\n        idx = this._objects.indexOf(object);\n        if (idx !== this._objects.length - 1) {\n          // if object is not on top of stack (last item in an array)\n          newIdx = this._findNewUpperIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewUpperIndex: function(object, idx, intersecting) {\n      var newIdx, i, len;\n\n      if (intersecting) {\n        newIdx = idx;\n\n        // traverse up the stack looking for the nearest intersecting object\n        for (i = idx + 1, len = this._objects.length; i < len; ++i) {\n\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) ||\n                               object.isContainedWithinObject(this._objects[i]) ||\n                               this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      }\n      else {\n        newIdx = idx + 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object to specified level in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Number} index Position to move to\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    moveTo: function (object, index) {\n      removeFromArray(this._objects, object);\n      this._objects.splice(index, 0, object);\n      return this.renderOnAddRemove && this.requestRenderAll();\n    },\n\n    /**\n     * Clears a canvas element and dispose objects\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      // cancel eventually ongoing renders\n      if (this.isRendering) {\n        fabric.util.cancelAnimFrame(this.isRendering);\n        this.isRendering = 0;\n      }\n      this.forEachObject(function(object) {\n        object.dispose && object.dispose();\n      });\n      this._objects = [];\n      this.backgroundImage = null;\n      this.overlayImage = null;\n      this._iTextInstances = null;\n      this.lowerCanvasEl = null;\n      this.contextContainer = null;\n      return this;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function () {\n      return '#<fabric.Canvas (' + this.complexity() + '): ' +\n               '{ objects: ' + this.getObjects().length + ' }>';\n    }\n  });\n\n  extend(fabric.StaticCanvas.prototype, fabric.Observable);\n  extend(fabric.StaticCanvas.prototype, fabric.Collection);\n  extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\n\n  extend(fabric.StaticCanvas, /** @lends fabric.StaticCanvas */ {\n\n    /**\n     * @static\n     * @type String\n     * @default\n     */\n    EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\n\n    /**\n     * Provides a way to check support of some of the canvas methods\n     * (either those of HTMLCanvasElement itself, or rendering context)\n     *\n     * @param {String} methodName Method to check support for;\n     *                            Could be one of \"getImageData\", \"toDataURL\", \"toDataURLWithQuality\" or \"setLineDash\"\n     * @return {Boolean | null} `true` if method is supported (or at least exists),\n     *                          `null` if canvas element or context can not be initialized\n     */\n    supports: function (methodName) {\n      var el = fabric.util.createCanvasElement();\n\n      if (!el || !el.getContext) {\n        return null;\n      }\n\n      var ctx = el.getContext('2d');\n      if (!ctx) {\n        return null;\n      }\n\n      switch (methodName) {\n\n        case 'getImageData':\n          return typeof ctx.getImageData !== 'undefined';\n\n        case 'setLineDash':\n          return typeof ctx.setLineDash !== 'undefined';\n\n        case 'toDataURL':\n          return typeof el.toDataURL !== 'undefined';\n\n        case 'toDataURLWithQuality':\n          try {\n            el.toDataURL('image/jpeg', 0);\n            return true;\n          }\n          catch (e) { }\n          return false;\n\n        default:\n          return null;\n      }\n    }\n  });\n\n  /**\n   * Returns JSON representation of canvas\n   * @function\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {String} JSON string\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n   * @example <caption>JSON without additional properties</caption>\n   * var json = canvas.toJSON();\n   * @example <caption>JSON with additional properties included</caption>\n   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockUniScaling']);\n   * @example <caption>JSON without default values</caption>\n   * canvas.includeDefaultValues = false;\n   * var json = canvas.toJSON();\n   */\n  fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\n\n  if (fabric.isLikelyNode) {\n    fabric.StaticCanvas.prototype.createPNGStream = function() {\n      var impl = fabric.util.getNodeCanvas(this.lowerCanvasEl);\n      return impl && impl.createPNGStream();\n    };\n    fabric.StaticCanvas.prototype.createJPEGStream = function(opts) {\n      var impl = fabric.util.getNodeCanvas(this.lowerCanvasEl);\n      return impl && impl.createJPEGStream(opts);\n    };\n  }\n})();\n\n\n/**\n * BaseBrush class\n * @class fabric.BaseBrush\n * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\n */\nfabric.BaseBrush = fabric.util.createClass(/** @lends fabric.BaseBrush.prototype */ {\n\n  /**\n   * Color of a brush\n   * @type String\n   * @default\n   */\n  color: 'rgb(0, 0, 0)',\n\n  /**\n   * Width of a brush, has to be a Number, no string literals\n   * @type Number\n   * @default\n   */\n  width: 1,\n\n  /**\n   * Shadow object representing shadow of this shape.\n   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n   * @type fabric.Shadow\n   * @default\n   */\n  shadow: null,\n\n  /**\n   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n   * @type String\n   * @default\n   */\n  strokeLineCap: 'round',\n\n  /**\n   * Corner style of a brush (one of \"bevel\", \"round\", \"miter\")\n   * @type String\n   * @default\n   */\n  strokeLineJoin: 'round',\n\n  /**\n   * Maximum miter length (used for strokeLineJoin = \"miter\") of a brush's\n   * @type Number\n   * @default\n   */\n  strokeMiterLimit:         10,\n\n  /**\n   * Stroke Dash Array.\n   * @type Array\n   * @default\n   */\n  strokeDashArray: null,\n\n  /**\n   * Sets shadow of an object\n   * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  setShadow: function(options) {\n    this.shadow = new fabric.Shadow(options);\n    return this;\n  },\n\n  /**\n   * Sets brush styles\n   * @private\n   */\n  _setBrushStyles: function() {\n    var ctx = this.canvas.contextTop;\n    ctx.strokeStyle = this.color;\n    ctx.lineWidth = this.width;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.miterLimit = this.strokeMiterLimit;\n    ctx.lineJoin = this.strokeLineJoin;\n    if (fabric.StaticCanvas.supports('setLineDash')) {\n      ctx.setLineDash(this.strokeDashArray || []);\n    }\n  },\n\n  /**\n   * Sets the transformation on given context\n   * @param {RenderingContext2d} ctx context to render on\n   * @private\n   */\n  _saveAndTransform: function(ctx) {\n    var v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n  },\n\n  /**\n   * Sets brush shadow styles\n   * @private\n   */\n  _setShadow: function() {\n    if (!this.shadow) {\n      return;\n    }\n\n    var ctx = this.canvas.contextTop,\n        zoom = this.canvas.getZoom();\n\n    ctx.shadowColor = this.shadow.color;\n    ctx.shadowBlur = this.shadow.blur * zoom;\n    ctx.shadowOffsetX = this.shadow.offsetX * zoom;\n    ctx.shadowOffsetY = this.shadow.offsetY * zoom;\n  },\n\n  /**\n   * Removes brush shadow styles\n   * @private\n   */\n  _resetShadow: function() {\n    var ctx = this.canvas.contextTop;\n\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  }\n});\n\n\n(function() {\n\n  /**\n   * PencilBrush class\n   * @class fabric.PencilBrush\n   * @extends fabric.BaseBrush\n   */\n  fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.PencilBrush.prototype */ {\n\n    /**\n     * Constructor\n     * @param {fabric.Canvas} canvas\n     * @return {fabric.PencilBrush} Instance of a pencil brush\n     */\n    initialize: function(canvas) {\n      this.canvas = canvas;\n      this._points = [];\n    },\n\n    /**\n     * Invoked inside on mouse down and mouse move\n     * @param {Object} pointer\n     */\n    _drawSegment: function (ctx, p1, p2) {\n      var midPoint = p1.midPointFrom(p2);\n      ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n      return midPoint;\n    },\n\n    /**\n     * Inovoked on mouse down\n     * @param {Object} pointer\n     */\n    onMouseDown: function(pointer) {\n      this._prepareForDrawing(pointer);\n      // capture coordinates immediately\n      // this allows to draw dots (when movement never occurs)\n      this._captureDrawingPath(pointer);\n      this._render();\n    },\n\n    /**\n     * Inovoked on mouse move\n     * @param {Object} pointer\n     */\n    onMouseMove: function(pointer) {\n      if (this._captureDrawingPath(pointer) && this._points.length > 1) {\n        if (this.needsFullRender) {\n          // redraw curve\n          // clear top canvas\n          this.canvas.clearContext(this.canvas.contextTop);\n          this._render();\n        }\n        else {\n          var points = this._points, length = points.length, ctx = this.canvas.contextTop;\n          // draw the curve update\n          this._saveAndTransform(ctx);\n          if (this.oldEnd) {\n            ctx.beginPath();\n            ctx.moveTo(this.oldEnd.x, this.oldEnd.y);\n          }\n          this.oldEnd = this._drawSegment(ctx, points[length - 2], points[length - 1], true);\n          ctx.stroke();\n          ctx.restore();\n        }\n      }\n    },\n\n    /**\n     * Invoked on mouse up\n     */\n    onMouseUp: function() {\n      this.oldEnd = undefined;\n      this._finalizeAndAddPath();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _prepareForDrawing: function(pointer) {\n\n      var p = new fabric.Point(pointer.x, pointer.y);\n\n      this._reset();\n      this._addPoint(p);\n      this.canvas.contextTop.moveTo(p.x, p.y);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Point} point Point to be added to points array\n     */\n    _addPoint: function(point) {\n      if (this._points.length > 1 && point.eq(this._points[this._points.length - 1])) {\n        return false;\n      }\n      this._points.push(point);\n      return true;\n    },\n\n    /**\n     * Clear points array and set contextTop canvas style.\n     * @private\n     */\n    _reset: function() {\n      this._points.length = 0;\n      this._setBrushStyles();\n      var color = new fabric.Color(this.color);\n      this.needsFullRender = (color.getAlpha() < 1);\n      this._setShadow();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _captureDrawingPath: function(pointer) {\n      var pointerPoint = new fabric.Point(pointer.x, pointer.y);\n      return this._addPoint(pointerPoint);\n    },\n\n    /**\n     * Draw a smooth path on the topCanvas using quadraticCurveTo\n     * @private\n     */\n    _render: function() {\n      var ctx  = this.canvas.contextTop, i, len,\n          p1 = this._points[0],\n          p2 = this._points[1];\n\n      this._saveAndTransform(ctx);\n      ctx.beginPath();\n      //if we only have 2 points in the path and they are the same\n      //it means that the user only clicked the canvas without moving the mouse\n      //then we should be drawing a dot. A path isn't drawn between two identical dots\n      //that's why we set them apart a bit\n      if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n        var width = this.width / 1000;\n        p1 = new fabric.Point(p1.x, p1.y);\n        p2 = new fabric.Point(p2.x, p2.y);\n        p1.x -= width;\n        p2.x += width;\n      }\n      ctx.moveTo(p1.x, p1.y);\n\n      for (i = 1, len = this._points.length; i < len; i++) {\n        // we pick the point between pi + 1 & pi + 2 as the\n        // end point and p1 as our control point.\n        this._drawSegment(ctx, p1, p2);\n        p1 = this._points[i];\n        p2 = this._points[i + 1];\n      }\n      // Draw last line as a straight line while\n      // we wait for the next point to be able to calculate\n      // the bezier control point\n      ctx.lineTo(p1.x, p1.y);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * Converts points to SVG path\n     * @param {Array} points Array of points\n     * @return {String} SVG path\n     */\n    convertPointsToSVGPath: function(points) {\n      var path = [], i, width = this.width / 1000,\n          p1 = new fabric.Point(points[0].x, points[0].y),\n          p2 = new fabric.Point(points[1].x, points[1].y),\n          len = points.length, multSignX = 1, multSignY = 1, manyPoints = len > 2;\n\n      if (manyPoints) {\n        multSignX = points[2].x < p2.x ? -1 : points[2].x === p2.x ? 0 : 1;\n        multSignY = points[2].y < p2.y ? -1 : points[2].y === p2.y ? 0 : 1;\n      }\n      path.push('M ', p1.x - multSignX * width, ' ', p1.y - multSignY * width, ' ');\n      for (i = 1; i < len; i++) {\n        if (!p1.eq(p2)) {\n          var midPoint = p1.midPointFrom(p2);\n          // p1 is our bezier control point\n          // midpoint is our endpoint\n          // start point is p(i-1) value.\n          path.push('Q ', p1.x, ' ', p1.y, ' ', midPoint.x, ' ', midPoint.y, ' ');\n        }\n        p1 = points[i];\n        if ((i + 1) < points.length) {\n          p2 = points[i + 1];\n        }\n      }\n      if (manyPoints) {\n        multSignX = p1.x > points[i - 2].x ? 1 : p1.x === points[i - 2].x ? 0 : -1;\n        multSignY = p1.y > points[i - 2].y ? 1 : p1.y === points[i - 2].y ? 0 : -1;\n      }\n      path.push('L ', p1.x + multSignX * width, ' ', p1.y + multSignY * width);\n      return path;\n    },\n\n    /**\n     * Creates fabric.Path object to add on canvas\n     * @param {String} pathData Path data\n     * @return {fabric.Path} Path to add on canvas\n     */\n    createPath: function(pathData) {\n      var path = new fabric.Path(pathData, {\n        fill: null,\n        stroke: this.color,\n        strokeWidth: this.width,\n        strokeLineCap: this.strokeLineCap,\n        strokeMiterLimit: this.strokeMiterLimit,\n        strokeLineJoin: this.strokeLineJoin,\n        strokeDashArray: this.strokeDashArray,\n      });\n      var position = new fabric.Point(path.left + path.width / 2, path.top + path.height / 2);\n      position = path.translateToGivenOrigin(position, 'center', 'center', path.originX, path.originY);\n      path.top = position.y;\n      path.left = position.x;\n      if (this.shadow) {\n        this.shadow.affectStroke = true;\n        path.setShadow(this.shadow);\n      }\n\n      return path;\n    },\n\n    /**\n     * On mouseup after drawing the path on contextTop canvas\n     * we use the points captured to create an new fabric path object\n     * and add it to the fabric canvas.\n     */\n    _finalizeAndAddPath: function() {\n      var ctx = this.canvas.contextTop;\n      ctx.closePath();\n\n      var pathData = this.convertPointsToSVGPath(this._points).join('');\n      if (pathData === 'M 0 0 Q 0 0 0 0 L 0 0') {\n        // do not create 0 width/height paths, as they are\n        // rendered inconsistently across browsers\n        // Firefox 4, for example, renders a dot,\n        // whereas Chrome 10 renders nothing\n        this.canvas.requestRenderAll();\n        return;\n      }\n\n      var path = this.createPath(pathData);\n      this.canvas.clearContext(this.canvas.contextTop);\n      this.canvas.add(path);\n      this.canvas.renderAll();\n      path.setCoords();\n      this._resetShadow();\n\n\n      // fire event 'path' created\n      this.canvas.fire('path:created', { path: path });\n    }\n  });\n})();\n\n\n/**\n * CircleBrush class\n * @class fabric.CircleBrush\n */\nfabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush, /** @lends fabric.CircleBrush.prototype */ {\n\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width: 10,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.CircleBrush} Instance of a circle brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.points = [];\n  },\n\n  /**\n   * Invoked inside on mouse down and mouse move\n   * @param {Object} pointer\n   */\n  drawDot: function(pointer) {\n    var point = this.addPoint(pointer),\n        ctx = this.canvas.contextTop;\n    this._saveAndTransform(ctx);\n    ctx.fillStyle = point.fill;\n    ctx.beginPath();\n    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n\n    ctx.restore();\n  },\n\n  /**\n   * Invoked on mouse down\n   */\n  onMouseDown: function(pointer) {\n    this.points.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Render the full state of the brush\n   * @private\n   */\n  _render: function() {\n    var ctx  = this.canvas.contextTop, i, len,\n        points = this.points, point;\n    this._saveAndTransform(ctx);\n    for (i = 0, len = points.length; i < len; i++) {\n      point = points[i];\n      ctx.fillStyle = point.fill;\n      ctx.beginPath();\n      ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n      ctx.closePath();\n      ctx.fill();\n    }\n    ctx.restore();\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove, i, len;\n    this.canvas.renderOnAddRemove = false;\n\n    var circles = [];\n\n    for (i = 0, len = this.points.length; i < len; i++) {\n      var point = this.points[i],\n          circle = new fabric.Circle({\n            radius: point.radius,\n            left: point.x,\n            top: point.y,\n            originX: 'center',\n            originY: 'center',\n            fill: point.fill\n          });\n\n      this.shadow && circle.setShadow(this.shadow);\n\n      circles.push(circle);\n    }\n    var group = new fabric.Group(circles, { originX: 'center', originY: 'center' });\n    group.canvas = this.canvas;\n\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  },\n\n  /**\n   * @param {Object} pointer\n   * @return {fabric.Point} Just added pointer point\n   */\n  addPoint: function(pointer) {\n    var pointerPoint = new fabric.Point(pointer.x, pointer.y),\n\n        circleRadius = fabric.util.getRandomInt(\n          Math.max(0, this.width - 20), this.width + 20) / 2,\n\n        circleColor = new fabric.Color(this.color)\n          .setAlpha(fabric.util.getRandomInt(0, 100) / 100)\n          .toRgba();\n\n    pointerPoint.radius = circleRadius;\n    pointerPoint.fill = circleColor;\n\n    this.points.push(pointerPoint);\n\n    return pointerPoint;\n  }\n});\n\n\n/**\n * SprayBrush class\n * @class fabric.SprayBrush\n */\nfabric.SprayBrush = fabric.util.createClass( fabric.BaseBrush, /** @lends fabric.SprayBrush.prototype */ {\n\n  /**\n   * Width of a spray\n   * @type Number\n   * @default\n   */\n  width:              10,\n\n  /**\n   * Density of a spray (number of dots per chunk)\n   * @type Number\n   * @default\n   */\n  density:            20,\n\n  /**\n   * Width of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidth:           1,\n\n  /**\n   * Width variance of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidthVariance:   1,\n\n  /**\n   * Whether opacity of a dot should be random\n   * @type Boolean\n   * @default\n   */\n  randomOpacity:        false,\n\n  /**\n   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n   * @type Boolean\n   * @default\n   */\n  optimizeOverlapping:  true,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.SprayBrush} Instance of a spray brush\n   */\n  initialize: function(canvas) {\n    this.canvas = canvas;\n    this.sprayChunks = [];\n  },\n\n  /**\n   * Invoked on mouse down\n   * @param {Object} pointer\n   */\n  onMouseDown: function(pointer) {\n    this.sprayChunks.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._setShadow();\n\n    this.addSprayChunk(pointer);\n    this.render(this.sprayChunkPoints);\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function(pointer) {\n    this.addSprayChunk(pointer);\n    this.render(this.sprayChunkPoints);\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n\n    var rects = [];\n\n    for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      var sprayChunk = this.sprayChunks[i];\n\n      for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\n\n        var rect = new fabric.Rect({\n          width: sprayChunk[j].width,\n          height: sprayChunk[j].width,\n          left: sprayChunk[j].x + 1,\n          top: sprayChunk[j].y + 1,\n          originX: 'center',\n          originY: 'center',\n          fill: this.color\n        });\n        rects.push(rect);\n      }\n    }\n\n    if (this.optimizeOverlapping) {\n      rects = this._getOptimizedRects(rects);\n    }\n\n    var group = new fabric.Group(rects, { originX: 'center', originY: 'center' });\n    this.shadow && group.setShadow(this.shadow);\n    this.canvas.add(group);\n    this.canvas.fire('path:created', { path: group });\n\n    this.canvas.clearContext(this.canvas.contextTop);\n    this._resetShadow();\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  },\n\n  /**\n   * @private\n   * @param {Array} rects\n   */\n  _getOptimizedRects: function(rects) {\n\n    // avoid creating duplicate rects at the same coordinates\n    var uniqueRects = { }, key, i, len;\n\n    for (i = 0, len = rects.length; i < len; i++) {\n      key = rects[i].left + '' + rects[i].top;\n      if (!uniqueRects[key]) {\n        uniqueRects[key] = rects[i];\n      }\n    }\n    var uniqueRectsArray = [];\n    for (key in uniqueRects) {\n      uniqueRectsArray.push(uniqueRects[key]);\n    }\n\n    return uniqueRectsArray;\n  },\n\n  /**\n   * Render new chunk of spray brush\n   */\n  render: function(sprayChunk) {\n    var ctx = this.canvas.contextTop, i, len;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (i = 0, len = sprayChunk.length; i < len; i++) {\n      var point = sprayChunk[i];\n      if (typeof point.opacity !== 'undefined') {\n        ctx.globalAlpha = point.opacity;\n      }\n      ctx.fillRect(point.x, point.y, point.width, point.width);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * Render all spray chunks\n   */\n  _render: function() {\n    var ctx = this.canvas.contextTop, i, ilen;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      this.render(this.sprayChunks[i]);\n    }\n    ctx.restore();\n  },\n\n  /**\n   * @param {Object} pointer\n   */\n  addSprayChunk: function(pointer) {\n    this.sprayChunkPoints = [];\n\n    var x, y, width, radius = this.width / 2, i;\n\n    for (i = 0; i < this.density; i++) {\n\n      x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\n      y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\n\n      if (this.dotWidthVariance) {\n        width = fabric.util.getRandomInt(\n          // bottom clamp width to 1\n          Math.max(1, this.dotWidth - this.dotWidthVariance),\n          this.dotWidth + this.dotWidthVariance);\n      }\n      else {\n        width = this.dotWidth;\n      }\n\n      var point = new fabric.Point(x, y);\n      point.width = width;\n\n      if (this.randomOpacity) {\n        point.opacity = fabric.util.getRandomInt(0, 100) / 100;\n      }\n\n      this.sprayChunkPoints.push(point);\n    }\n\n    this.sprayChunks.push(this.sprayChunkPoints);\n  }\n});\n\n\n/**\n * PatternBrush class\n * @class fabric.PatternBrush\n * @extends fabric.BaseBrush\n */\nfabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush, /** @lends fabric.PatternBrush.prototype */ {\n\n  getPatternSrc: function() {\n\n    var dotWidth = 20,\n        dotDistance = 5,\n        patternCanvas = fabric.document.createElement('canvas'),\n        patternCtx = patternCanvas.getContext('2d');\n\n    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n\n    patternCtx.fillStyle = this.color;\n    patternCtx.beginPath();\n    patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\n    patternCtx.closePath();\n    patternCtx.fill();\n\n    return patternCanvas;\n  },\n\n  getPatternSrcFunction: function() {\n    return String(this.getPatternSrc).replace('this.color', '\"' + this.color + '\"');\n  },\n\n  /**\n   * Creates \"pattern\" instance property\n   */\n  getPattern: function() {\n    return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), 'repeat');\n  },\n\n  /**\n   * Sets brush styles\n   */\n  _setBrushStyles: function() {\n    this.callSuper('_setBrushStyles');\n    this.canvas.contextTop.strokeStyle = this.getPattern();\n  },\n\n  /**\n   * Creates path\n   */\n  createPath: function(pathData) {\n    var path = this.callSuper('createPath', pathData),\n        topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\n\n    path.stroke = new fabric.Pattern({\n      source: this.source || this.getPatternSrcFunction(),\n      offsetX: -topLeft.x,\n      offsetY: -topLeft.y\n    });\n    return path;\n  }\n});\n\n\n(function() {\n\n  var getPointer = fabric.util.getPointer,\n      degreesToRadians = fabric.util.degreesToRadians,\n      radiansToDegrees = fabric.util.radiansToDegrees,\n      atan2 = Math.atan2,\n      abs = Math.abs,\n      supportLineDash = fabric.StaticCanvas.supports('setLineDash'),\n\n      STROKE_OFFSET = 0.5;\n\n  /**\n   * Canvas class\n   * @class fabric.Canvas\n   * @extends fabric.StaticCanvas\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\n   * @see {@link fabric.Canvas#initialize} for constructor definition\n   *\n   * @fires object:modified\n   * @fires object:rotated\n   * @fires object:scaled\n   * @fires object:moved\n   * @fires object:skewed\n   * @fires object:rotating\n   * @fires object:scaling\n   * @fires object:moving\n   * @fires object:skewing\n   * @fires object:selected this event is deprecated. use selection:created\n   *\n   * @fires before:transform\n   * @fires before:selection:cleared\n   * @fires selection:cleared\n   * @fires selection:updated\n   * @fires selection:created\n   *\n   * @fires path:created\n   * @fires mouse:down\n   * @fires mouse:move\n   * @fires mouse:up\n   * @fires mouse:down:before\n   * @fires mouse:move:before\n   * @fires mouse:up:before\n   * @fires mouse:over\n   * @fires mouse:out\n   * @fires mouse:dblclick\n   *\n   * @fires dragover\n   * @fires dragenter\n   * @fires dragleave\n   * @fires drop\n   *\n   */\n  fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(el, options) {\n      options || (options = { });\n      this.renderAndResetBound = this.renderAndReset.bind(this);\n      this._initStatic(el, options);\n      this._initInteractive();\n      this._createCacheCanvas();\n    },\n\n    /**\n     * When true, objects can be transformed by one side (unproportionally)\n     * @type Boolean\n     * @default\n     */\n    uniScaleTransform:      false,\n\n    /**\n     * Indicates which key enable unproportional scaling\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    uniScaleKey:           'shiftKey',\n\n    /**\n     * When true, objects use center point as the origin of scale transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:        false,\n\n    /**\n     * When true, objects use center point as the origin of rotate transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:       false,\n\n    /**\n     * Indicates which key enable centered Transform\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    centeredKey:           'altKey',\n\n    /**\n     * Indicates which key enable alternate action on corner\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    altActionKey:           'shiftKey',\n\n    /**\n     * Indicates that canvas is interactive. This property should not be changed.\n     * @type Boolean\n     * @default\n     */\n    interactive:            true,\n\n    /**\n     * Indicates whether group selection should be enabled\n     * @type Boolean\n     * @default\n     */\n    selection:              true,\n\n    /**\n     * Indicates which key or keys enable multiple click selection\n     * Pass value as a string or array of strings\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or empty or containing any other string that is not a modifier key\n     * feature is disabled.\n     * @since 1.6.2\n     * @type String|Array\n     * @default\n     */\n    selectionKey:           'shiftKey',\n\n    /**\n     * Indicates which key enable alternative selection\n     * in case of target overlapping with active object\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * For a series of reason that come from the general expectations on how\n     * things should work, this feature works only for preserveObjectStacking true.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled.\n     * @since 1.6.5\n     * @type null|String\n     * @default\n     */\n    altSelectionKey:           null,\n\n    /**\n     * Color of selection\n     * @type String\n     * @default\n     */\n    selectionColor:         'rgba(100, 100, 255, 0.3)', // blue\n\n    /**\n     * Default dash array pattern\n     * If not empty the selection border is dashed\n     * @type Array\n     */\n    selectionDashArray:     [],\n\n    /**\n     * Color of the border of selection (usually slightly darker than color of selection itself)\n     * @type String\n     * @default\n     */\n    selectionBorderColor:   'rgba(255, 255, 255, 0.3)',\n\n    /**\n     * Width of a line used in object/group selection\n     * @type Number\n     * @default\n     */\n    selectionLineWidth:     1,\n\n    /**\n     * Select only shapes that are fully contained in the dragged selection rectangle.\n     * @type Boolean\n     * @default\n     */\n    selectionFullyContained: false,\n\n    /**\n     * Default cursor value used when hovering over an object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:            'move',\n\n    /**\n     * Default cursor value used when moving an object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:             'move',\n\n    /**\n     * Default cursor value used for the entire canvas\n     * @type String\n     * @default\n     */\n    defaultCursor:          'default',\n\n    /**\n     * Cursor value used during free drawing\n     * @type String\n     * @default\n     */\n    freeDrawingCursor:      'crosshair',\n\n    /**\n     * Cursor value used for rotation point\n     * @type String\n     * @default\n     */\n    rotationCursor:         'crosshair',\n\n    /**\n     * Cursor value used for disabled elements ( corners with disabled action )\n     * @type String\n     * @since 2.0.0\n     * @default\n     */\n    notAllowedCursor:         'not-allowed',\n\n    /**\n     * Default element class that's given to wrapper (div) element of canvas\n     * @type String\n     * @default\n     */\n    containerClass:         'canvas-container',\n\n    /**\n     * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:     false,\n\n    /**\n     * Number of pixels around target pixel to tolerate (consider active) during object detection\n     * @type Number\n     * @default\n     */\n    targetFindTolerance:    0,\n\n    /**\n     * When true, target detection is skipped when hovering over canvas. This can be used to improve performance.\n     * @type Boolean\n     * @default\n     */\n    skipTargetFind:         false,\n\n    /**\n     * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n     * After mousedown, mousemove creates a shape,\n     * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\n     * @type Boolean\n     * @default\n     */\n    isDrawingMode:          false,\n\n    /**\n     * Indicates whether objects should remain in current stack position when selected.\n     * When false objects are brought to top and rendered as part of the selection group\n     * @type Boolean\n     * @default\n     */\n    preserveObjectStacking: false,\n\n    /**\n     * Indicates the angle that an object will lock to while rotating.\n     * @type Number\n     * @since 1.6.7\n     * @default\n     */\n    snapAngle: 0,\n\n    /**\n     * Indicates the distance from the snapAngle the rotation will lock to the snapAngle.\n     * When `null`, the snapThreshold will default to the snapAngle.\n     * @type null|Number\n     * @since 1.6.7\n     * @default\n     */\n    snapThreshold: null,\n\n    /**\n     * Indicates if the right click on canvas can output the context menu or not\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    stopContextMenu: false,\n\n    /**\n     * Indicates if the canvas can fire right click events\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    fireRightClick: false,\n\n    /**\n     * Indicates if the canvas can fire middle click events\n     * @type Boolean\n     * @since 1.7.8\n     * @default\n     */\n    fireMiddleClick: false,\n\n    /**\n     * @private\n     */\n    _initInteractive: function() {\n      this._currentTransform = null;\n      this._groupSelector = null;\n      this._initWrapperElement();\n      this._createUpperCanvas();\n      this._initEventListeners();\n\n      this._initRetinaScaling();\n\n      this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\n\n      this.calcOffset();\n    },\n\n    /**\n     * Divides objects in two groups, one to render immediately\n     * and one to render as activeGroup.\n     * @return {Array} objects to render immediately and pushes the other in the activeGroup.\n     */\n    _chooseObjectsToRender: function() {\n      var activeObjects = this.getActiveObjects(),\n          object, objsToRender, activeGroupObjects;\n\n      if (activeObjects.length > 0 && !this.preserveObjectStacking) {\n        objsToRender = [];\n        activeGroupObjects = [];\n        for (var i = 0, length = this._objects.length; i < length; i++) {\n          object = this._objects[i];\n          if (activeObjects.indexOf(object) === -1 ) {\n            objsToRender.push(object);\n          }\n          else {\n            activeGroupObjects.push(object);\n          }\n        }\n        if (activeObjects.length > 1) {\n          this._activeObject._objects = activeGroupObjects;\n        }\n        objsToRender.push.apply(objsToRender, activeGroupObjects);\n      }\n      else {\n        objsToRender = this._objects;\n      }\n      return objsToRender;\n    },\n\n    /**\n     * Renders both the top canvas and the secondary container canvas.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function () {\n      if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\n        this.clearContext(this.contextTop);\n        this.contextTopDirty = false;\n      }\n      if (this.hasLostContext) {\n        this.renderTopLayer(this.contextTop);\n      }\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._chooseObjectsToRender());\n      return this;\n    },\n\n    renderTopLayer: function(ctx) {\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this.freeDrawingBrush && this.freeDrawingBrush._render();\n      }\n      // we render the top context - last object\n      if (this.selection && this._groupSelector) {\n        this._drawSelection(ctx);\n      }\n    },\n\n    /**\n     * Method to render only the top canvas.\n     * Also used to render the group selection box.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    renderTop: function () {\n      var ctx = this.contextTop;\n      this.clearContext(ctx);\n      this.renderTopLayer(ctx);\n      this.fire('after:render');\n      this.contextTopDirty = true;\n      return this;\n    },\n\n    /**\n     * Resets the current transform to its original values and chooses the type of resizing based on the event\n     * @private\n     */\n    _resetCurrentTransform: function() {\n      var t = this._currentTransform;\n\n      t.target.set({\n        scaleX: t.original.scaleX,\n        scaleY: t.original.scaleY,\n        skewX: t.original.skewX,\n        skewY: t.original.skewY,\n        left: t.original.left,\n        top: t.original.top\n      });\n\n      if (this._shouldCenterTransform(t.target)) {\n        if (t.originX !== 'center') {\n          if (t.originX === 'right') {\n            t.mouseXSign = -1;\n          }\n          else {\n            t.mouseXSign = 1;\n          }\n        }\n        if (t.originY !== 'center') {\n          if (t.originY === 'bottom') {\n            t.mouseYSign = -1;\n          }\n          else {\n            t.mouseYSign = 1;\n          }\n        }\n\n        t.originX = 'center';\n        t.originY = 'center';\n      }\n      else {\n        t.originX = t.original.originX;\n        t.originY = t.original.originY;\n      }\n    },\n\n    /**\n     * Checks if point is contained within an area of given object\n     * @param {Event} e Event object\n     * @param {fabric.Object} target Object to test against\n     * @param {Object} [point] x,y object of point coordinates we want to check.\n     * @return {Boolean} true if point is contained within an area of given object\n     */\n    containsPoint: function (e, target, point) {\n      var ignoreZoom = true,\n          pointer = point || this.getPointer(e, ignoreZoom),\n          xy;\n\n      if (target.group && target.group === this._activeObject && target.group.type === 'activeSelection') {\n        xy = this._normalizePointer(target.group, pointer);\n      }\n      else {\n        xy = { x: pointer.x, y: pointer.y };\n      }\n      // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html\n      // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html\n      return (target.containsPoint(xy) || target._findTargetCorner(pointer));\n    },\n\n    /**\n     * @private\n     */\n    _normalizePointer: function (object, pointer) {\n      var m = object.calcTransformMatrix(),\n          invertedM = fabric.util.invertTransform(m),\n          vptPointer = this.restorePointerVpt(pointer);\n      return fabric.util.transformPoint(vptPointer, invertedM);\n    },\n\n    /**\n     * Returns true if object is transparent at a certain location\n     * @param {fabric.Object} target Object to check\n     * @param {Number} x Left coordinate\n     * @param {Number} y Top coordinate\n     * @return {Boolean}\n     */\n    isTargetTransparent: function (target, x, y) {\n      if (target.shouldCache() && target._cacheCanvas) {\n        var normalizedPointer = this._normalizePointer(target, {x: x, y: y}),\n            targetRelativeX = target.cacheTranslationX + (normalizedPointer.x * target.zoomX),\n            targetRelativeY = target.cacheTranslationY + (normalizedPointer.y * target.zoomY);\n\n        var isTransparent = fabric.util.isTransparent(\n          target._cacheContext, targetRelativeX, targetRelativeY, this.targetFindTolerance);\n\n        return isTransparent;\n      }\n\n      var ctx = this.contextCache,\n          originalColor = target.selectionBackgroundColor, v = this.viewportTransform;\n\n      target.selectionBackgroundColor = '';\n\n      this.clearContext(ctx);\n\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      target.render(ctx);\n      ctx.restore();\n\n      target === this._activeObject && target._renderControls(ctx, {\n        hasBorders: false,\n        transparentCorners: false\n      }, {\n        hasBorders: false,\n      });\n\n      target.selectionBackgroundColor = originalColor;\n\n      var isTransparent = fabric.util.isTransparent(\n        ctx, x, y, this.targetFindTolerance);\n\n      return isTransparent;\n    },\n\n    /**\n     * takes an event and determins if selection key has been pressed\n     * @private\n     * @param {Event} e Event object\n     */\n    _isSelectionKeyPressed: function(e) {\n      var selectionKeyPressed = false;\n\n      if (Object.prototype.toString.call(this.selectionKey) === '[object Array]') {\n        selectionKeyPressed = !!this.selectionKey.find(function(key) { return e[key] === true; });\n      }\n      else {\n        selectionKeyPressed = e[this.selectionKey];\n      }\n\n      return selectionKeyPressed;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _shouldClearSelection: function (e, target) {\n      var activeObjects = this.getActiveObjects(),\n          activeObject = this._activeObject;\n\n      return (\n        !target\n        ||\n        (target &&\n          activeObject &&\n          activeObjects.length > 1 &&\n          activeObjects.indexOf(target) === -1 &&\n          activeObject !== target &&\n          !this._isSelectionKeyPressed(e))\n        ||\n        (target && !target.evented)\n        ||\n        (target &&\n          !target.selectable &&\n          activeObject &&\n          activeObject !== target)\n      );\n    },\n\n    /**\n     * centeredScaling from object can't override centeredScaling from canvas.\n     * this should be fixed, since object setting should take precedence over canvas.\n     * @private\n     * @param {fabric.Object} target\n     */\n    _shouldCenterTransform: function (target) {\n      if (!target) {\n        return;\n      }\n\n      var t = this._currentTransform,\n          centerTransform;\n\n      if (t.action === 'scale' || t.action === 'scaleX' || t.action === 'scaleY') {\n        centerTransform = this.centeredScaling || target.centeredScaling;\n      }\n      else if (t.action === 'rotate') {\n        centerTransform = this.centeredRotation || target.centeredRotation;\n      }\n\n      return centerTransform ? !t.altKey : t.altKey;\n    },\n\n    /**\n     * @private\n     */\n    _getOriginFromCorner: function(target, corner) {\n      var origin = {\n        x: target.originX,\n        y: target.originY\n      };\n\n      if (corner === 'ml' || corner === 'tl' || corner === 'bl') {\n        origin.x = 'right';\n      }\n      else if (corner === 'mr' || corner === 'tr' || corner === 'br') {\n        origin.x = 'left';\n      }\n\n      if (corner === 'tl' || corner === 'mt' || corner === 'tr') {\n        origin.y = 'bottom';\n      }\n      else if (corner === 'bl' || corner === 'mb' || corner === 'br') {\n        origin.y = 'top';\n      }\n\n      return origin;\n    },\n\n    /**\n     * @private\n     */\n    _getActionFromCorner: function(target, corner, e) {\n      if (!corner) {\n        return 'drag';\n      }\n\n      switch (corner) {\n        case 'mtr':\n          return 'rotate';\n        case 'ml':\n        case 'mr':\n          return e[this.altActionKey] ? 'skewY' : 'scaleX';\n        case 'mt':\n        case 'mb':\n          return e[this.altActionKey] ? 'skewX' : 'scaleY';\n        default:\n          return 'scale';\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _setupCurrentTransform: function (e, target) {\n      if (!target) {\n        return;\n      }\n\n      var pointer = this.getPointer(e),\n          corner = target._findTargetCorner(this.getPointer(e, true)),\n          action = this._getActionFromCorner(target, corner, e),\n          origin = this._getOriginFromCorner(target, corner);\n\n      this._currentTransform = {\n        target: target,\n        action: action,\n        corner: corner,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        // used by transation\n        offsetX: pointer.x - target.left,\n        offsetY: pointer.y - target.top,\n        originX: origin.x,\n        originY: origin.y,\n        ex: pointer.x,\n        ey: pointer.y,\n        lastX: pointer.x,\n        lastY: pointer.y,\n        // unsure they are usefull anymore.\n        // left: target.left,\n        // top: target.top,\n        theta: degreesToRadians(target.angle),\n        // end of unsure\n        width: target.width * target.scaleX,\n        mouseXSign: 1,\n        mouseYSign: 1,\n        shiftKey: e.shiftKey,\n        altKey: e[this.centeredKey]\n      };\n\n      this._currentTransform.original = {\n        left: target.left,\n        top: target.top,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        originX: origin.x,\n        originY: origin.y\n      };\n\n      this._resetCurrentTransform();\n      this._beforeTransform(e);\n    },\n\n    /**\n     * Translates object by \"setting\" its left/top\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the translation occurred\n     */\n    _translateObject: function (x, y) {\n      var transform = this._currentTransform,\n          target = transform.target,\n          newLeft = x - transform.offsetX,\n          newTop = y - transform.offsetY,\n          moveX = !target.get('lockMovementX') && target.left !== newLeft,\n          moveY = !target.get('lockMovementY') && target.top !== newTop;\n\n      moveX && target.set('left', newLeft);\n      moveY && target.set('top', newTop);\n      return moveX || moveY;\n    },\n\n    /**\n     * Check if we are increasing a positive skew or lower it,\n     * checking mouse direction and pressed corner.\n     * @private\n     */\n    _changeSkewTransformOrigin: function(mouseMove, t, by) {\n      var property = 'originX', origins = { 0: 'center' },\n          skew = t.target.skewX, originA = 'left', originB = 'right',\n          corner = t.corner === 'mt' || t.corner === 'ml' ? 1 : -1,\n          flipSign = 1;\n\n      mouseMove = mouseMove > 0 ? 1 : -1;\n      if (by === 'y') {\n        skew = t.target.skewY;\n        originA = 'top';\n        originB = 'bottom';\n        property = 'originY';\n      }\n      origins[-1] = originA;\n      origins[1] = originB;\n\n      t.target.flipX && (flipSign *= -1);\n      t.target.flipY && (flipSign *= -1);\n\n      if (skew === 0) {\n        t.skewSign = -corner * mouseMove * flipSign;\n        t[property] = origins[-mouseMove];\n      }\n      else {\n        skew = skew > 0 ? 1 : -1;\n        t.skewSign = skew;\n        t[property] = origins[skew * corner * flipSign];\n      }\n    },\n\n    /**\n     * Skew object by mouse events\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y'\n     * @return {Boolean} true if the skewing occurred\n     */\n    _skewObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target, skewed = false,\n          lockSkewingX = target.get('lockSkewingX'),\n          lockSkewingY = target.get('lockSkewingY');\n\n      if ((lockSkewingX && by === 'x') || (lockSkewingY && by === 'y')) {\n        return false;\n      }\n\n      // Get the constraint point\n      var center = target.getCenterPoint(),\n          actualMouseByCenter = target.toLocalPoint(new fabric.Point(x, y), 'center', 'center')[by],\n          lastMouseByCenter = target.toLocalPoint(new fabric.Point(t.lastX, t.lastY), 'center', 'center')[by],\n          actualMouseByOrigin, constraintPosition, dim = target._getTransformedDimensions();\n\n      this._changeSkewTransformOrigin(actualMouseByCenter - lastMouseByCenter, t, by);\n      actualMouseByOrigin = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY)[by];\n      constraintPosition = target.translateToOriginPoint(center, t.originX, t.originY);\n      // Actually skew the object\n      skewed = this._setObjectSkew(actualMouseByOrigin, t, by, dim);\n      t.lastX = x;\n      t.lastY = y;\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return skewed;\n    },\n\n    /**\n     * Set object skew\n     * @private\n     * @return {Boolean} true if the skewing occurred\n     */\n    _setObjectSkew: function(localMouse, transform, by, _dim) {\n      var target = transform.target, newValue, skewed = false,\n          skewSign = transform.skewSign, newDim, dimNoSkew,\n          otherBy, _otherBy, _by, newDimMouse, skewX, skewY;\n\n      if (by === 'x') {\n        otherBy = 'y';\n        _otherBy = 'Y';\n        _by = 'X';\n        skewX = 0;\n        skewY = target.skewY;\n      }\n      else {\n        otherBy = 'x';\n        _otherBy = 'X';\n        _by = 'Y';\n        skewX = target.skewX;\n        skewY = 0;\n      }\n\n      dimNoSkew = target._getTransformedDimensions(skewX, skewY);\n      newDimMouse = 2 * Math.abs(localMouse) - dimNoSkew[by];\n      if (newDimMouse <= 2) {\n        newValue = 0;\n      }\n      else {\n        newValue = skewSign * Math.atan((newDimMouse / target['scale' + _by]) /\n                                        (dimNoSkew[otherBy] / target['scale' + _otherBy]));\n        newValue = fabric.util.radiansToDegrees(newValue);\n      }\n      skewed = target['skew' + _by] !== newValue;\n      target.set('skew' + _by, newValue);\n      if (target['skew' + _otherBy] !== 0) {\n        newDim = target._getTransformedDimensions();\n        newValue = (_dim[otherBy] / newDim[otherBy]) * target['scale' + _otherBy];\n        target.set('scale' + _otherBy, newValue);\n      }\n      return skewed;\n    },\n\n    /**\n     * Scales object by invoking its scaleX/scaleY methods\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y' - specifies dimension constraint by which to scale an object.\n     *                    When not provided, an object is scaled by both dimensions equally\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObject: function (x, y, by) {\n      var t = this._currentTransform,\n          target = t.target,\n          lockScalingX = target.lockScalingX,\n          lockScalingY = target.lockScalingY,\n          lockScalingFlip = target.lockScalingFlip;\n\n      if (lockScalingX && lockScalingY) {\n        return false;\n      }\n\n      // Get the constraint point\n      var constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY),\n          localMouse = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY),\n          dim = target._getTransformedDimensions(), scaled = false;\n\n      this._setLocalMouse(localMouse, t);\n\n      // Actually scale the object\n      scaled = this._setObjectScale(localMouse, t, lockScalingX, lockScalingY, by, lockScalingFlip, dim);\n\n      // Make sure the constraints apply\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _setObjectScale: function(localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n      var target = transform.target, forbidScalingX = false, forbidScalingY = false, scaled = false,\n          changeX, changeY, scaleX, scaleY;\n\n      scaleX = localMouse.x * target.scaleX / _dim.x;\n      scaleY = localMouse.y * target.scaleY / _dim.y;\n      changeX = target.scaleX !== scaleX;\n      changeY = target.scaleY !== scaleY;\n\n      if (lockScalingFlip && scaleX <= 0 && scaleX < target.scaleX) {\n        forbidScalingX = true;\n        localMouse.x = 0;\n      }\n\n      if (lockScalingFlip && scaleY <= 0 && scaleY < target.scaleY) {\n        forbidScalingY = true;\n        localMouse.y = 0;\n      }\n\n      if (by === 'equally' && !lockScalingX && !lockScalingY) {\n        scaled = this._scaleObjectEqually(localMouse, target, transform, _dim);\n      }\n      else if (!by) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n      }\n      else if (by === 'x' && !target.get('lockUniScaling')) {\n        forbidScalingX || lockScalingX || (target.set('scaleX', scaleX) && (scaled = scaled || changeX));\n      }\n      else if (by === 'y' && !target.get('lockUniScaling')) {\n        forbidScalingY || lockScalingY || (target.set('scaleY', scaleY) && (scaled = scaled || changeY));\n      }\n      transform.newScaleX = scaleX;\n      transform.newScaleY = scaleY;\n      forbidScalingX || forbidScalingY || this._flipObject(transform, by);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObjectEqually: function(localMouse, target, transform, _dim) {\n\n      var dist = localMouse.y + localMouse.x,\n          lastDist = _dim.y * transform.original.scaleY / target.scaleY +\n                     _dim.x * transform.original.scaleX / target.scaleX,\n          scaled, signX = localMouse.x < 0 ? -1 : 1,\n          signY = localMouse.y < 0 ? -1 : 1;\n\n      // We use transform.scaleX/Y instead of target.scaleX/Y\n      // because the object may have a min scale and we'll loose the proportions\n      transform.newScaleX = signX * Math.abs(transform.original.scaleX * dist / lastDist);\n      transform.newScaleY = signY * Math.abs(transform.original.scaleY * dist / lastDist);\n      scaled = transform.newScaleX !== target.scaleX || transform.newScaleY !== target.scaleY;\n      target.set('scaleX', transform.newScaleX);\n      target.set('scaleY', transform.newScaleY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     */\n    _flipObject: function(transform, by) {\n      if (transform.newScaleX < 0 && by !== 'y') {\n        if (transform.originX === 'left') {\n          transform.originX = 'right';\n        }\n        else if (transform.originX === 'right') {\n          transform.originX = 'left';\n        }\n      }\n\n      if (transform.newScaleY < 0 && by !== 'x') {\n        if (transform.originY === 'top') {\n          transform.originY = 'bottom';\n        }\n        else if (transform.originY === 'bottom') {\n          transform.originY = 'top';\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setLocalMouse: function(localMouse, t) {\n      var target = t.target, zoom = this.getZoom(),\n          padding = target.padding / zoom;\n\n      if (t.originX === 'right') {\n        localMouse.x *= -1;\n      }\n      else if (t.originX === 'center') {\n        localMouse.x *= t.mouseXSign * 2;\n        if (localMouse.x < 0) {\n          t.mouseXSign = -t.mouseXSign;\n        }\n      }\n\n      if (t.originY === 'bottom') {\n        localMouse.y *= -1;\n      }\n      else if (t.originY === 'center') {\n        localMouse.y *= t.mouseYSign * 2;\n        if (localMouse.y < 0) {\n          t.mouseYSign = -t.mouseYSign;\n        }\n      }\n\n      // adjust the mouse coordinates when dealing with padding\n      if (abs(localMouse.x) > padding) {\n        if (localMouse.x < 0) {\n          localMouse.x += padding;\n        }\n        else {\n          localMouse.x -= padding;\n        }\n      }\n      else { // mouse is within the padding, set to 0\n        localMouse.x = 0;\n      }\n\n      if (abs(localMouse.y) > padding) {\n        if (localMouse.y < 0) {\n          localMouse.y += padding;\n        }\n        else {\n          localMouse.y -= padding;\n        }\n      }\n      else {\n        localMouse.y = 0;\n      }\n    },\n\n    /**\n     * Rotates object by invoking its rotate method\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the rotation occurred\n     */\n    _rotateObject: function (x, y) {\n\n      var t = this._currentTransform,\n          target = t.target, constraintPosition,\n          constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY);\n\n      if (target.lockRotation) {\n        return false;\n      }\n\n      var lastAngle = atan2(t.ey - constraintPosition.y, t.ex - constraintPosition.x),\n          curAngle = atan2(y - constraintPosition.y, x - constraintPosition.x),\n          angle = radiansToDegrees(curAngle - lastAngle + t.theta),\n          hasRotated = true;\n\n      if (target.snapAngle > 0) {\n        var snapAngle  = target.snapAngle,\n            snapThreshold  = target.snapThreshold || snapAngle,\n            rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\n            leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\n\n        if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\n          angle = leftAngleLocked;\n        }\n        else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\n          angle = rightAngleLocked;\n        }\n      }\n\n      // normalize angle to positive value\n      if (angle < 0) {\n        angle = 360 + angle;\n      }\n      angle %= 360;\n\n      if (target.angle === angle) {\n        hasRotated = false;\n      }\n      else {\n        // rotation only happen here\n        target.angle = angle;\n        // Make sure the constraints apply\n        target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      }\n\n      return hasRotated;\n    },\n\n    /**\n     * Set the cursor type of the canvas element\n     * @param {String} value Cursor type of the canvas element.\n     * @see http://www.w3.org/TR/css3-ui/#cursor\n     */\n    setCursor: function (value) {\n      this.upperCanvasEl.style.cursor = value;\n    },\n\n    /**\n     * @param {fabric.Object} target to reset transform\n     * @private\n     */\n    _resetObjectTransform: function (target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.rotate(0);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx to draw the selection on\n     */\n    _drawSelection: function (ctx) {\n      var groupSelector = this._groupSelector,\n          left = groupSelector.left,\n          top = groupSelector.top,\n          aleft = abs(left),\n          atop = abs(top);\n\n      if (this.selectionColor) {\n        ctx.fillStyle = this.selectionColor;\n\n        ctx.fillRect(\n          groupSelector.ex - ((left > 0) ? 0 : -left),\n          groupSelector.ey - ((top > 0) ? 0 : -top),\n          aleft,\n          atop\n        );\n      }\n\n      if (!this.selectionLineWidth || !this.selectionBorderColor) {\n        return;\n      }\n      ctx.lineWidth = this.selectionLineWidth;\n      ctx.strokeStyle = this.selectionBorderColor;\n\n      // selection border\n      if (this.selectionDashArray.length > 1 && !supportLineDash) {\n\n        var px = groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n            py = groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop);\n\n        ctx.beginPath();\n\n        fabric.util.drawDashedLine(ctx, px, py, px + aleft, py, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py + atop - 1, px + aleft, py + atop - 1, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py, px, py + atop, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px + aleft - 1, py, px + aleft - 1, py + atop, this.selectionDashArray);\n\n        ctx.closePath();\n        ctx.stroke();\n      }\n      else {\n        fabric.Object.prototype._setLineDash.call(this, ctx, this.selectionDashArray);\n        ctx.strokeRect(\n          groupSelector.ex + STROKE_OFFSET - ((left > 0) ? 0 : aleft),\n          groupSelector.ey + STROKE_OFFSET - ((top > 0) ? 0 : atop),\n          aleft,\n          atop\n        );\n      }\n    },\n\n    /**\n     * Method that determines what object we are clicking on\n     * the skipGroup parameter is for internal use, is needed for shift+click action\n     * @param {Event} e mouse event\n     * @param {Boolean} skipGroup when true, activeGroup is skipped and only objects are traversed through\n     */\n    findTarget: function (e, skipGroup) {\n      if (this.skipTargetFind) {\n        return;\n      }\n\n      var ignoreZoom = true,\n          pointer = this.getPointer(e, ignoreZoom),\n          activeObject = this._activeObject,\n          aObjects = this.getActiveObjects(),\n          activeTarget, activeTargetSubs;\n\n      // first check current group (if one exists)\n      // active group does not check sub targets like normal groups.\n      // if active group just exits.\n      this.targets = [];\n\n      if (aObjects.length > 1 && !skipGroup && activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        return activeObject;\n      }\n      // if we hit the corner of an activeObject, let's return that.\n      if (aObjects.length === 1 && activeObject._findTargetCorner(pointer)) {\n        return activeObject;\n      }\n      if (aObjects.length === 1 &&\n        activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        if (!this.preserveObjectStacking) {\n          return activeObject;\n        }\n        else {\n          activeTarget = activeObject;\n          activeTargetSubs = this.targets;\n          this.targets = [];\n        }\n      }\n      var target = this._searchPossibleTargets(this._objects, pointer);\n      if (e[this.altSelectionKey] && target && activeTarget && target !== activeTarget) {\n        target = activeTarget;\n        this.targets = activeTargetSubs;\n      }\n      return target;\n    },\n\n    /**\n     * @private\n     */\n    _checkTarget: function(pointer, obj) {\n      if (obj &&\n          obj.visible &&\n          obj.evented &&\n          this.containsPoint(null, obj, pointer)){\n        if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\n          var isTransparent = this.isTargetTransparent(obj, pointer.x, pointer.y);\n          if (!isTransparent) {\n            return true;\n          }\n        }\n        else {\n          return true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _searchPossibleTargets: function(objects, pointer) {\n\n      // Cache all targets where their bounding box contains point.\n      var target, i = objects.length, normalizedPointer, subTarget;\n      // Do not check for currently grouped objects, since we check the parent group itself.\n      // until we call this function specifically to search inside the activeGroup\n      while (i--) {\n        if (this._checkTarget(pointer, objects[i])) {\n          target = objects[i];\n          if (target.subTargetCheck && target instanceof fabric.Group) {\n            normalizedPointer = this._normalizePointer(target, pointer);\n            subTarget = this._searchPossibleTargets(target._objects, normalizedPointer);\n            subTarget && this.targets.push(subTarget);\n          }\n          break;\n        }\n      }\n      return target;\n    },\n\n    /**\n     * Returns pointer coordinates without the effect of the viewport\n     * @param {Object} pointer with \"x\" and \"y\" number values\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    restorePointerVpt: function(pointer) {\n      return fabric.util.transformPoint(\n        pointer,\n        fabric.util.invertTransform(this.viewportTransform)\n      );\n    },\n\n    /**\n     * Returns pointer coordinates relative to canvas.\n     * Can return coordinates with or without viewportTransform.\n     * ignoreZoom false gives back coordinates that represent\n     * the point clicked on canvas element.\n     * ignoreZoom true gives back coordinates after being processed\n     * by the viewportTransform ( sort of coordinates of what is displayed\n     * on the canvas where you are clicking.\n     * ignoreZoom true = HTMLElement coordinates relative to top,left\n     * ignoreZoom false, default = fabric space coordinates, the same used for shape position\n     * To interact with your shapes top and left you want to use ignoreZoom true\n     * most of the time, while ignoreZoom false will give you coordinates\n     * compatible with the object.oCoords system.\n     * of the time.\n     * @param {Event} e\n     * @param {Boolean} ignoreZoom\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    getPointer: function (e, ignoreZoom) {\n      // return cached values if we are in the event processing chain\n      if (this._absolutePointer && !ignoreZoom) {\n        return this._absolutePointer;\n      }\n      if (this._pointer && ignoreZoom) {\n        return this._pointer;\n      }\n\n      var pointer = getPointer(e),\n          upperCanvasEl = this.upperCanvasEl,\n          bounds = upperCanvasEl.getBoundingClientRect(),\n          boundsWidth = bounds.width || 0,\n          boundsHeight = bounds.height || 0,\n          cssScale;\n\n      if (!boundsWidth || !boundsHeight ) {\n        if ('top' in bounds && 'bottom' in bounds) {\n          boundsHeight = Math.abs( bounds.top - bounds.bottom );\n        }\n        if ('right' in bounds && 'left' in bounds) {\n          boundsWidth = Math.abs( bounds.right - bounds.left );\n        }\n      }\n\n      this.calcOffset();\n      pointer.x = pointer.x - this._offset.left;\n      pointer.y = pointer.y - this._offset.top;\n      if (!ignoreZoom) {\n        pointer = this.restorePointerVpt(pointer);\n      }\n\n      if (boundsWidth === 0 || boundsHeight === 0) {\n        // If bounds are not available (i.e. not visible), do not apply scale.\n        cssScale = { width: 1, height: 1 };\n      }\n      else {\n        cssScale = {\n          width: upperCanvasEl.width / boundsWidth,\n          height: upperCanvasEl.height / boundsHeight\n        };\n      }\n\n      return {\n        x: pointer.x * cssScale.width,\n        y: pointer.y * cssScale.height\n      };\n    },\n\n    /**\n     * @private\n     * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized\n     */\n    _createUpperCanvas: function () {\n      var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, '');\n\n      // there is no need to create a new upperCanvas element if we have already one.\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.className = '';\n      }\n      else {\n        this.upperCanvasEl = this._createCanvasElement();\n      }\n      fabric.util.addClass(this.upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);\n\n      this.wrapperEl.appendChild(this.upperCanvasEl);\n\n      this._copyCanvasStyle(this.lowerCanvasEl, this.upperCanvasEl);\n      this._applyCanvasStyle(this.upperCanvasEl);\n      this.contextTop = this.upperCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _createCacheCanvas: function () {\n      this.cacheCanvasEl = this._createCanvasElement();\n      this.cacheCanvasEl.setAttribute('width', this.width);\n      this.cacheCanvasEl.setAttribute('height', this.height);\n      this.contextCache = this.cacheCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _initWrapperElement: function () {\n      this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {\n        'class': this.containerClass\n      });\n      fabric.util.setStyle(this.wrapperEl, {\n        width: this.width + 'px',\n        height: this.height + 'px',\n        position: 'relative'\n      });\n      fabric.util.makeElementUnselectable(this.wrapperEl);\n    },\n\n    /**\n     * @private\n     * @param {HTMLElement} element canvas element to apply styles on\n     */\n    _applyCanvasStyle: function (element) {\n      var width = this.width || element.width,\n          height = this.height || element.height;\n\n      fabric.util.setStyle(element, {\n        position: 'absolute',\n        width: width + 'px',\n        height: height + 'px',\n        left: 0,\n        top: 0,\n        'touch-action': this.allowTouchScrolling ? 'manipulation' : 'none'\n      });\n      element.width = width;\n      element.height = height;\n      fabric.util.makeElementUnselectable(element);\n    },\n\n    /**\n     * Copy the entire inline style from one element (fromEl) to another (toEl)\n     * @private\n     * @param {Element} fromEl Element style is copied from\n     * @param {Element} toEl Element copied style is applied to\n     */\n    _copyCanvasStyle: function (fromEl, toEl) {\n      toEl.style.cssText = fromEl.style.cssText;\n    },\n\n    /**\n     * Returns context of canvas where object selection is drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getSelectionContext: function() {\n      return this.contextTop;\n    },\n\n    /**\n     * Returns &lt;canvas> element on which object selection is drawn\n     * @return {HTMLCanvasElement}\n     */\n    getSelectionElement: function () {\n      return this.upperCanvasEl;\n    },\n\n    /**\n     * Returns currently active object\n     * @return {fabric.Object} active object\n     */\n    getActiveObject: function () {\n      return this._activeObject;\n    },\n\n    /**\n     * Returns an array with the current selected objects\n     * @return {fabric.Object} active object\n     */\n    getActiveObjects: function () {\n      var active = this._activeObject;\n      if (active) {\n        if (active.type === 'activeSelection' && active._objects) {\n          return active._objects.slice(0);\n        }\n        else {\n          return [active];\n        }\n      }\n      return [];\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function(obj) {\n      // removing active object should fire \"selection:cleared\" events\n      if (obj === this._activeObject) {\n        this.fire('before:selection:cleared', { target: obj });\n        this._discardActiveObject();\n        this.fire('selection:cleared', { target: obj });\n        obj.fire('deselected');\n      }\n      if (this._hoveredTarget === obj) {\n        this._hoveredTarget = null;\n      }\n      this.callSuper('_onObjectRemoved', obj);\n    },\n\n    /**\n     * @private\n     * Compares the old activeObject with the current one and fires correct events\n     * @param {fabric.Object} obj old activeObject\n     */\n    _fireSelectionEvents: function(oldObjects, e) {\n      var somethingChanged = false, objects = this.getActiveObjects(),\n          added = [], removed = [], opt = { e: e };\n      oldObjects.forEach(function(oldObject) {\n        if (objects.indexOf(oldObject) === -1) {\n          somethingChanged = true;\n          oldObject.fire('deselected', opt);\n          removed.push(oldObject);\n        }\n      });\n      objects.forEach(function(object) {\n        if (oldObjects.indexOf(object) === -1) {\n          somethingChanged = true;\n          object.fire('selected', opt);\n          added.push(object);\n        }\n      });\n      if (oldObjects.length > 0 && objects.length > 0) {\n        opt.selected = added;\n        opt.deselected = removed;\n        // added for backward compatibility\n        opt.updated = added[0] || removed[0];\n        opt.target = this._activeObject;\n        somethingChanged && this.fire('selection:updated', opt);\n      }\n      else if (objects.length > 0) {\n        // deprecated event\n        if (objects.length === 1) {\n          opt.target = added[0];\n          this.fire('object:selected', opt);\n        }\n        opt.selected = added;\n        // added for backward compatibility\n        opt.target = this._activeObject;\n        this.fire('selection:created', opt);\n      }\n      else if (oldObjects.length > 0) {\n        opt.deselected = removed;\n        this.fire('selection:cleared', opt);\n      }\n    },\n\n    /**\n     * Sets given object as the only active object on canvas\n     * @param {fabric.Object} object Object to set as an active one\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setActiveObject: function (object, e) {\n      var currentActives = this.getActiveObjects();\n      this._setActiveObject(object, e);\n      this._fireSelectionEvents(currentActives, e);\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {Object} object to set as active\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {Boolean} true if the selection happened\n     */\n    _setActiveObject: function(object, e) {\n      if (this._activeObject === object) {\n        return false;\n      }\n      if (!this._discardActiveObject(e, object)) {\n        return false;\n      }\n      if (object.onSelect({ e: e })) {\n        return false;\n      }\n      this._activeObject = object;\n      return true;\n    },\n\n    /**\n     * @private\n     */\n    _discardActiveObject: function(e, object) {\n      var obj = this._activeObject;\n      if (obj) {\n        // onDeselect return TRUE to cancel selection;\n        if (obj.onDeselect({ e: e, object: object })) {\n          return false;\n        }\n        this._activeObject = null;\n      }\n      return true;\n    },\n\n    /**\n     * Discards currently active object and fire events. If the function is called by fabric\n     * as a consequence of a mouse event, the event is passed as a parameter and\n     * sent to the fire function for the custom events. When used as a method the\n     * e param does not have any application.\n     * @param {event} e\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    discardActiveObject: function (e) {\n      var currentActives = this.getActiveObjects();\n      if (currentActives.length) {\n        this.fire('before:selection:cleared', { target: currentActives[0], e: e });\n      }\n      this._discardActiveObject(e);\n      this._fireSelectionEvents(currentActives, e);\n      return this;\n    },\n\n    /**\n     * Clears a canvas element and removes all event listeners\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function () {\n      var wrapper = this.wrapperEl;\n      this.removeListeners();\n      wrapper.removeChild(this.upperCanvasEl);\n      wrapper.removeChild(this.lowerCanvasEl);\n      this.upperCanvasEl = null;\n      this.cacheCanvasEl = null;\n      this.contextCache = null;\n      this.contextTop = null;\n      if (wrapper.parentNode) {\n        wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);\n      }\n      delete this.wrapperEl;\n      fabric.StaticCanvas.prototype.dispose.call(this);\n      return this;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function () {\n      // this.discardActiveGroup();\n      this.discardActiveObject();\n      this.clearContext(this.contextTop);\n      return this.callSuper('clear');\n    },\n\n    /**\n     * Draws objects' controls (borders/controls)\n     * @param {CanvasRenderingContext2D} ctx Context to render controls on\n     */\n    drawControls: function(ctx) {\n      var activeObject = this._activeObject;\n\n      if (activeObject) {\n        activeObject._renderControls(ctx);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function(instance, methodName, propertiesToInclude) {\n      //If the object is part of the current selection group, it should\n      //be transformed appropriately\n      //i.e. it should be serialised as it would appear if the selection group\n      //were to be destroyed.\n      var originalProperties = this._realizeGroupTransformOnObject(instance),\n          object = this.callSuper('_toObject', instance, methodName, propertiesToInclude);\n      //Undo the damage we did by changing all of its properties\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n      return object;\n    },\n\n    /**\n     * Realises an object's group transformation on it\n     * @private\n     * @param {fabric.Object} [instance] the object to transform (gets mutated)\n     * @returns the original values of instance which were changed\n     */\n    _realizeGroupTransformOnObject: function(instance) {\n      if (instance.group && instance.group.type === 'activeSelection' && this._activeObject === instance.group) {\n        var layoutProps = ['angle', 'flipX', 'flipY', 'left', 'scaleX', 'scaleY', 'skewX', 'skewY', 'top'];\n        //Copy all the positionally relevant properties across now\n        var originalValues = {};\n        layoutProps.forEach(function(prop) {\n          originalValues[prop] = instance[prop];\n        });\n        this._activeObject.realizeTransform(instance);\n        return originalValues;\n      }\n      else {\n        return null;\n      }\n    },\n\n    /**\n     * Restores the changed properties of instance\n     * @private\n     * @param {fabric.Object} [instance] the object to un-transform (gets mutated)\n     * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject\n     */\n    _unwindGroupTransformOnObject: function(instance, originalValues) {\n      if (originalValues) {\n        instance.set(originalValues);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function(markup, instance, reviver) {\n      //If the object is in a selection group, simulate what would happen to that\n      //object when the group is deselected\n      var originalProperties = this._realizeGroupTransformOnObject(instance);\n      this.callSuper('_setSVGObject', markup, instance, reviver);\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n    },\n\n    setViewportTransform: function (vpt) {\n      if (this.renderOnAddRemove && this._activeObject && this._activeObject.isEditing) {\n        this._activeObject.clearContextTop();\n      }\n      fabric.StaticCanvas.prototype.setViewportTransform.call(this, vpt);\n    }\n  });\n\n  // copying static properties manually to work around Opera's bug,\n  // where \"prototype\" property is enumerable and overrides existing prototype\n  for (var prop in fabric.StaticCanvas) {\n    if (prop !== 'prototype') {\n      fabric.Canvas[prop] = fabric.StaticCanvas[prop];\n    }\n  }\n\n  if (fabric.isTouchSupported) {\n    /** @ignore */\n    fabric.Canvas.prototype._setCursorFromEvent = function() { };\n  }\n})();\n\n\n(function() {\n\n  var cursorOffset = {\n        mt: 0, // n\n        tr: 1, // ne\n        mr: 2, // e\n        br: 3, // se\n        mb: 4, // s\n        bl: 5, // sw\n        ml: 6, // w\n        tl: 7 // nw\n      },\n      addListener = fabric.util.addListener,\n      removeListener = fabric.util.removeListener,\n      RIGHT_CLICK = 3, MIDDLE_CLICK = 2, LEFT_CLICK = 1,\n      addEventOptions = { passive: false };\n\n  function checkClick(e, value) {\n    return 'which' in e ? e.which === value : e.button === value - 1;\n  }\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * Map of cursor style values for each of the object controls\n     * @private\n     */\n    cursorMap: [\n      'n-resize',\n      'ne-resize',\n      'e-resize',\n      'se-resize',\n      's-resize',\n      'sw-resize',\n      'w-resize',\n      'nw-resize'\n    ],\n\n    /**\n     * Adds mouse listeners to canvas\n     * @private\n     */\n    _initEventListeners: function () {\n      // in case we initialized the class twice. This should not happen normally\n      // but in some kind of applications where the canvas element may be changed\n      // this is a workaround to having double listeners.\n      this.removeListeners();\n      this._bindEvents();\n      this.addOrRemove(addListener, 'add');\n    },\n\n    addOrRemove: function(functor, eventjsFunctor) {\n      functor(fabric.window, 'resize', this._onResize);\n      functor(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      functor(this.upperCanvasEl, 'mousemove', this._onMouseMove, addEventOptions);\n      functor(this.upperCanvasEl, 'mouseout', this._onMouseOut);\n      functor(this.upperCanvasEl, 'mouseenter', this._onMouseEnter);\n      functor(this.upperCanvasEl, 'wheel', this._onMouseWheel);\n      functor(this.upperCanvasEl, 'contextmenu', this._onContextMenu);\n      functor(this.upperCanvasEl, 'dblclick', this._onDoubleClick);\n      functor(this.upperCanvasEl, 'touchstart', this._onMouseDown, addEventOptions);\n      functor(this.upperCanvasEl, 'touchmove', this._onMouseMove, addEventOptions);\n      functor(this.upperCanvasEl, 'dragover', this._onDragOver);\n      functor(this.upperCanvasEl, 'dragenter', this._onDragEnter);\n      functor(this.upperCanvasEl, 'dragleave', this._onDragLeave);\n      functor(this.upperCanvasEl, 'drop', this._onDrop);\n      if (typeof eventjs !== 'undefined' && eventjsFunctor in eventjs) {\n        eventjs[eventjsFunctor](this.upperCanvasEl, 'gesture', this._onGesture);\n        eventjs[eventjsFunctor](this.upperCanvasEl, 'drag', this._onDrag);\n        eventjs[eventjsFunctor](this.upperCanvasEl, 'orientation', this._onOrientationChange);\n        eventjs[eventjsFunctor](this.upperCanvasEl, 'shake', this._onShake);\n        eventjs[eventjsFunctor](this.upperCanvasEl, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * Removes all event listeners\n     */\n    removeListeners: function() {\n      this.addOrRemove(removeListener, 'remove');\n      // if you dispose on a mouseDown, before mouse up, you need to clean document to...\n      removeListener(fabric.document, 'mouseup', this._onMouseUp);\n      removeListener(fabric.document, 'touchend', this._onMouseUp, addEventOptions);\n      removeListener(fabric.document, 'mousemove', this._onMouseMove, addEventOptions);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n    },\n\n    /**\n     * @private\n     */\n    _bindEvents: function() {\n      if (this.eventsBound) {\n        // for any reason we pass here twice we do not want to bind events twice.\n        return;\n      }\n      this._onMouseDown = this._onMouseDown.bind(this);\n      this._onMouseMove = this._onMouseMove.bind(this);\n      this._onMouseUp = this._onMouseUp.bind(this);\n      this._onResize = this._onResize.bind(this);\n      this._onGesture = this._onGesture.bind(this);\n      this._onDrag = this._onDrag.bind(this);\n      this._onShake = this._onShake.bind(this);\n      this._onLongPress = this._onLongPress.bind(this);\n      this._onOrientationChange = this._onOrientationChange.bind(this);\n      this._onMouseWheel = this._onMouseWheel.bind(this);\n      this._onMouseOut = this._onMouseOut.bind(this);\n      this._onMouseEnter = this._onMouseEnter.bind(this);\n      this._onContextMenu = this._onContextMenu.bind(this);\n      this._onDoubleClick = this._onDoubleClick.bind(this);\n      this._onDragOver = this._onDragOver.bind(this);\n      this._onDragEnter = this._simpleEventHandler.bind(this, 'dragenter');\n      this._onDragLeave = this._simpleEventHandler.bind(this, 'dragleave');\n      this._onDrop = this._simpleEventHandler.bind(this, 'drop');\n      this.eventsBound = true;\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js gesture\n     * @param {Event} [self] Inner Event object\n     */\n    _onGesture: function(e, self) {\n      this.__onTransformGesture && this.__onTransformGesture(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js drag\n     * @param {Event} [self] Inner Event object\n     */\n    _onDrag: function(e, self) {\n      this.__onDrag && this.__onDrag(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on wheel event\n     */\n    _onMouseWheel: function(e) {\n      this.__onMouseWheel(e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseOut: function(e) {\n      var target = this._hoveredTarget;\n      this.fire('mouse:out', { target: target, e: e });\n      this._hoveredTarget = null;\n      target && target.fire('mouseout', { e: e });\n      if (this._iTextInstances) {\n        this._iTextInstances.forEach(function(obj) {\n          if (obj.isEditing) {\n            obj.hiddenTextarea.focus();\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseenter\n     */\n    _onMouseEnter: function(e) {\n      if (!this.findTarget(e)) {\n        this.fire('mouse:over', { target: null, e: e });\n        this._hoveredTarget = null;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js orientation change\n     * @param {Event} [self] Inner Event object\n     */\n    _onOrientationChange: function(e, self) {\n      this.__onOrientationChange && this.__onOrientationChange(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onShake: function(e, self) {\n      this.__onShake && this.__onShake(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onLongPress: function(e, self) {\n      this.__onLongPress && this.__onLongPress(e, self);\n    },\n\n    /**\n     * prevent default to allow drop event to be fired\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     */\n    _onDragOver: function(e) {\n      e.preventDefault();\n      var target = this._simpleEventHandler('dragover', e);\n      this._fireEnterLeaveEvents(target, e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onContextMenu: function (e) {\n      if (this.stopContextMenu) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n      return false;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onDoubleClick: function (e) {\n      this._cacheTransformEventData(e);\n      this._handleEvent(e, 'dblclick');\n      this._resetTransformEventData(e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDown: function (e) {\n      this.__onMouseDown(e);\n      this._resetTransformEventData();\n      addListener(fabric.document, 'touchend', this._onMouseUp, addEventOptions);\n      addListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n\n      removeListener(this.upperCanvasEl, 'mousemove', this._onMouseMove, addEventOptions);\n      removeListener(this.upperCanvasEl, 'touchmove', this._onMouseMove, addEventOptions);\n\n      if (e.type === 'touchstart') {\n        // Unbind mousedown to prevent double triggers from touch devices\n        removeListener(this.upperCanvasEl, 'mousedown', this._onMouseDown);\n      }\n      else {\n        addListener(fabric.document, 'mouseup', this._onMouseUp);\n        addListener(fabric.document, 'mousemove', this._onMouseMove, addEventOptions);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUp: function (e) {\n      this.__onMouseUp(e);\n      this._resetTransformEventData();\n      removeListener(fabric.document, 'mouseup', this._onMouseUp);\n      removeListener(fabric.document, 'touchend', this._onMouseUp, addEventOptions);\n\n      removeListener(fabric.document, 'mousemove', this._onMouseMove, addEventOptions);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n\n      addListener(this.upperCanvasEl, 'mousemove', this._onMouseMove, addEventOptions);\n      addListener(this.upperCanvasEl, 'touchmove', this._onMouseMove, addEventOptions);\n\n      if (e.type === 'touchend') {\n        // Wait 400ms before rebinding mousedown to prevent double triggers\n        // from touch devices\n        var _this = this;\n        setTimeout(function() {\n          addListener(_this.upperCanvasEl, 'mousedown', _this._onMouseDown);\n        }, 400);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMove: function (e) {\n      !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\n      this.__onMouseMove(e);\n    },\n\n    /**\n     * @private\n     */\n    _onResize: function () {\n      this.calcOffset();\n    },\n\n    /**\n     * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n     * @private\n     * @param {Object} target\n     * @param {Object} pointer\n     */\n    _shouldRender: function(target, pointer) {\n      var activeObject = this._activeObject;\n\n      if (activeObject && activeObject.isEditing && target === activeObject) {\n        // if we mouse up/down over a editing textbox a cursor change,\n        // there is no need to re render\n        return false;\n      }\n      return !!(\n        (target && (\n          target.isMoving ||\n          target !== activeObject))\n        ||\n        (!target && !!activeObject)\n        ||\n        (!target && !activeObject && !this._groupSelector)\n        ||\n        (pointer &&\n          this._previousPointer &&\n          this.selection && (\n            pointer.x !== this._previousPointer.x ||\n          pointer.y !== this._previousPointer.y))\n      );\n    },\n\n    /**\n     * Method that defines the actions when mouse is released on canvas.\n     * The method resets the currentTransform parameters, store the image corner\n     * position in the image object and render the canvas on top.\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseUp: function (e) {\n      var target, transform = this._currentTransform,\n          groupSelector = this._groupSelector,\n          isClick = (!groupSelector || (groupSelector.left === 0 && groupSelector.top === 0));\n      this._cacheTransformEventData(e);\n      target = this._target;\n      this._handleEvent(e, 'up:before');\n      // if right/middle click just fire events and return\n      // target undefined will make the _handleEvent search the target\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'up', RIGHT_CLICK, isClick);\n        }\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'up', MIDDLE_CLICK, isClick);\n        }\n        this._resetTransformEventData();\n        return;\n      }\n\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this._onMouseUpInDrawingMode(e);\n        return;\n      }\n\n      if (transform) {\n        this._finalizeCurrentTransform(e);\n      }\n\n      var shouldRender = this._shouldRender(target, this._absolutePointer);\n\n      if (target || !isClick) {\n        this._maybeGroupObjects(e);\n      }\n      if (target) {\n        target.isMoving = false;\n      }\n      this._setCursorFromEvent(e, target);\n      this._handleEvent(e, 'up', LEFT_CLICK, isClick);\n      this._groupSelector = null;\n      this._currentTransform = null;\n      target && (target.__corner = 0);\n      shouldRender && this.requestRenderAll();\n    },\n\n    /**\n     * @private\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @return {Fabric.Object} target return the the target found, for internal reasons.\n     */\n    _simpleEventHandler: function(eventType, e) {\n      var target = this.findTarget(e),\n          targets = this.targets,\n          options = {\n            e: e,\n            target: target,\n            subTargets: targets,\n          };\n      this.fire(eventType, options);\n      target && target.fire(eventType, options);\n      if (!targets) {\n        return target;\n      }\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire(eventType, options);\n      }\n      return target;\n    },\n\n    /**\n     * @private\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @param {fabric.Object} targetObj receiving event\n     * @param {Number} [button] button used in the event 1 = left, 2 = middle, 3 = right\n     * @param {Boolean} isClick for left button only, indicates that the mouse up happened without move.\n     */\n    _handleEvent: function(e, eventType, button, isClick) {\n      var target = this._target,\n          targets = this.targets || [],\n          options = {\n            e: e,\n            target: target,\n            subTargets: targets,\n            button: button || LEFT_CLICK,\n            isClick: isClick || false,\n            pointer: this._pointer,\n            absolutePointer: this._absolutePointer,\n            transform: this._currentTransform\n          };\n      this.fire('mouse:' + eventType, options);\n      target && target.fire('mouse' + eventType, options);\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire('mouse' + eventType, options);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e send the mouse event that generate the finalize down, so it can be used in the event\n     */\n    _finalizeCurrentTransform: function(e) {\n\n      var transform = this._currentTransform,\n          target = transform.target,\n          eventName,\n          options = {\n            e: e,\n            target: target,\n            transform: transform,\n          };\n\n      if (target._scaling) {\n        target._scaling = false;\n      }\n\n      target.setCoords();\n\n      if (transform.actionPerformed || (this.stateful && target.hasStateChanged())) {\n        if (transform.actionPerformed) {\n          eventName = this._addEventOptions(options, transform);\n          this._fire(eventName, options);\n        }\n        this._fire('modified', options);\n      }\n    },\n\n    /**\n     * Mutate option object in order to add by property and give back the event name.\n     * @private\n     * @param {Object} options to mutate\n     * @param {Object} transform to inspect action from\n     */\n    _addEventOptions: function(options, transform) {\n      // we can probably add more details at low cost\n      // scale change, rotation changes, translation changes\n      var eventName, by;\n      switch (transform.action) {\n        case 'scaleX':\n          eventName = 'scaled';\n          by = 'x';\n          break;\n        case 'scaleY':\n          eventName = 'scaled';\n          by = 'y';\n          break;\n        case 'skewX':\n          eventName = 'skewed';\n          by = 'x';\n          break;\n        case 'skewY':\n          eventName = 'skewed';\n          by = 'y';\n          break;\n        case 'scale':\n          eventName = 'scaled';\n          by = 'equally';\n          break;\n        case 'rotate':\n          eventName = 'rotated';\n          break;\n        case 'drag':\n          eventName = 'moved';\n          break;\n      }\n      options.by = by;\n      return eventName;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDownInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = true;\n      if (this.getActiveObject()) {\n        this.discardActiveObject(e).requestRenderAll();\n      }\n      if (this.clipTo) {\n        fabric.util.clipContext(this, this.contextTop);\n      }\n      var pointer = this.getPointer(e);\n      this.freeDrawingBrush.onMouseDown(pointer);\n      this._handleEvent(e, 'down');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMoveInDrawingMode: function(e) {\n      if (this._isCurrentlyDrawing) {\n        var pointer = this.getPointer(e);\n        this.freeDrawingBrush.onMouseMove(pointer);\n      }\n      this.setCursor(this.freeDrawingCursor);\n      this._handleEvent(e, 'move');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUpInDrawingMode: function(e) {\n      this._isCurrentlyDrawing = false;\n      if (this.clipTo) {\n        this.contextTop.restore();\n      }\n      this.freeDrawingBrush.onMouseUp();\n      this._handleEvent(e, 'up');\n    },\n\n    /**\n     * Method that defines the actions when mouse is clicked on canvas.\n     * The method inits the currentTransform parameters and renders all the\n     * canvas so the current image can be placed on the top canvas and the rest\n     * in on the container one.\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    __onMouseDown: function (e) {\n      this._cacheTransformEventData(e);\n      this._handleEvent(e, 'down:before');\n      var target = this._target;\n      // if right click just fire events\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'down', RIGHT_CLICK);\n        }\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'down', MIDDLE_CLICK);\n        }\n        return;\n      }\n\n      if (this.isDrawingMode) {\n        this._onMouseDownInDrawingMode(e);\n        return;\n      }\n\n      // ignore if some object is being transformed at this moment\n      if (this._currentTransform) {\n        return;\n      }\n\n      var pointer = this._pointer;\n      // save pointer for check in __onMouseUp event\n      this._previousPointer = pointer;\n      var shouldRender = this._shouldRender(target, pointer),\n          shouldGroup = this._shouldGroup(e, target);\n      if (this._shouldClearSelection(e, target)) {\n        this.discardActiveObject(e);\n      }\n      else if (shouldGroup) {\n        this._handleGrouping(e, target);\n        target = this._activeObject;\n      }\n\n      if (this.selection && (!target ||\n        (!target.selectable && !target.isEditing && target !== this._activeObject))) {\n        this._groupSelector = {\n          ex: pointer.x,\n          ey: pointer.y,\n          top: 0,\n          left: 0\n        };\n      }\n\n      if (target) {\n        if (target.selectable) {\n          this.setActiveObject(target, e);\n        }\n        if (target === this._activeObject && (target.__corner || !shouldGroup)) {\n          this._setupCurrentTransform(e, target);\n        }\n      }\n      this._handleEvent(e, 'down');\n      // we must renderAll so that we update the visuals\n      shouldRender && this.requestRenderAll();\n    },\n\n    /**\n     * reset cache form common information needed during event processing\n     * @private\n     */\n    _resetTransformEventData: function() {\n      this._target = null;\n      this._pointer = null;\n      this._absolutePointer = null;\n    },\n\n    /**\n     * Cache common information needed during event processing\n     * @private\n     * @param {Event} e Event object fired on event\n     */\n    _cacheTransformEventData: function(e) {\n      // reset in order to avoid stale caching\n      this._resetTransformEventData();\n      this._pointer = this.getPointer(e, true);\n      this._absolutePointer = this.restorePointerVpt(this._pointer);\n      this._target = this._currentTransform ? this._currentTransform.target : this.findTarget(e) || null;\n    },\n\n    /**\n     * @private\n     */\n    _beforeTransform: function(e) {\n      var t = this._currentTransform;\n      this.stateful && t.target.saveState();\n      this.fire('before:transform', {\n        e: e,\n        transform: t,\n      });\n      // determine if it's a drag or rotate case\n      if (t.corner) {\n        this.onBeforeScaleRotate(t.target);\n      }\n    },\n\n    /**\n     * Method that defines the actions when mouse is hovering the canvas.\n     * The currentTransform parameter will definde whether the user is rotating/scaling/translating\n     * an image or neither of them (only hovering). A group selection is also possible and would cancel\n     * all any other type of action.\n     * In case of an image transformation only the top canvas will be rendered.\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    __onMouseMove: function (e) {\n      this._handleEvent(e, 'move:before');\n      this._cacheTransformEventData(e);\n      var target, pointer;\n\n      if (this.isDrawingMode) {\n        this._onMouseMoveInDrawingMode(e);\n        return;\n      }\n      if (typeof e.touches !== 'undefined' && e.touches.length > 1) {\n        return;\n      }\n\n      var groupSelector = this._groupSelector;\n\n      // We initially clicked in an empty area, so we draw a box for multiple selection\n      if (groupSelector) {\n        pointer = this._pointer;\n\n        groupSelector.left = pointer.x - groupSelector.ex;\n        groupSelector.top = pointer.y - groupSelector.ey;\n\n        this.renderTop();\n      }\n      else if (!this._currentTransform) {\n        target = this.findTarget(e) || null;\n        this._setCursorFromEvent(e, target);\n        this._fireOverOutEvents(target, e);\n      }\n      else {\n        this._transformObject(e);\n      }\n      this._handleEvent(e, 'move');\n      this._resetTransformEventData();\n    },\n\n    /**\n     * Manage the mouseout, mouseover events for the fabric object on the canvas\n     * @param {Fabric.Object} target the target where the target from the mousemove event\n     * @param {Event} e Event object fired on mousemove\n     * @private\n     */\n    _fireOverOutEvents: function(target, e) {\n      this.fireSynteticInOutEvents(target, e, {\n        targetName: '_hoveredTarget',\n        canvasEvtOut: 'mouse:out',\n        evtOut: 'mouseout',\n        canvasEvtIn: 'mouse:over',\n        evtIn: 'mouseover',\n      });\n    },\n\n    /**\n     * Manage the dragEnter, dragLeave events for the fabric objects on the canvas\n     * @param {Fabric.Object} target the target where the target from the onDrag event\n     * @param {Event} e Event object fired on ondrag\n     * @private\n     */\n    _fireEnterLeaveEvents: function(target, e) {\n      this.fireSynteticInOutEvents(target, e, {\n        targetName: '_draggedoverTarget',\n        evtOut: 'dragleave',\n        evtIn: 'dragenter',\n      });\n    },\n\n    /**\n     * Manage the syntetic in/out events for the fabric objects on the canvas\n     * @param {Fabric.Object} target the target where the target from the supported events\n     * @param {Event} e Event object fired\n     * @param {Object} config configuration for the function to work\n     * @param {String} config.targetName property on the canvas where the old target is stored\n     * @param {String} [config.canvasEvtOut] name of the event to fire at canvas level for out\n     * @param {String} config.evtOut name of the event to fire for out\n     * @param {String} [config.canvasEvtIn] name of the event to fire at canvas level for in\n     * @param {String} config.evtIn name of the event to fire for in\n     * @private\n     */\n    fireSynteticInOutEvents: function(target, e, config) {\n      var inOpt, outOpt, oldTarget = this[config.targetName], outFires, inFires,\n          targetChanged = oldTarget !== target, canvasEvtIn = config.canvasEvtIn, canvasEvtOut = config.canvasEvtOut;\n      if (targetChanged) {\n        inOpt = { e: e, target: target, previousTarget: oldTarget };\n        outOpt = { e: e, target: oldTarget, nextTarget: target };\n        this[config.targetName] = target;\n      }\n      inFires = target && targetChanged;\n      outFires = oldTarget && targetChanged;\n      if (outFires) {\n        canvasEvtOut && this.fire(canvasEvtOut, outOpt);\n        oldTarget.fire(config.evtOut, outOpt);\n      }\n      if (inFires) {\n        canvasEvtIn && this.fire(canvasEvtIn, inOpt);\n        target.fire(config.evtIn, inOpt);\n      }\n    },\n\n    /**\n     * Method that defines actions when an Event Mouse Wheel\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseWheel: function(e) {\n      this._cacheTransformEventData(e);\n      this._handleEvent(e, 'wheel');\n      this._resetTransformEventData();\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event fired on mousemove\n     */\n    _transformObject: function(e) {\n      var pointer = this.getPointer(e),\n          transform = this._currentTransform;\n\n      transform.reset = false;\n      transform.target.isMoving = true;\n      transform.shiftKey = e.shiftKey;\n      transform.altKey = e[this.centeredKey];\n\n      this._beforeScaleTransform(e, transform);\n      this._performTransformAction(e, transform, pointer);\n\n      transform.actionPerformed && this.requestRenderAll();\n    },\n\n    /**\n     * @private\n     */\n    _performTransformAction: function(e, transform, pointer) {\n      var x = pointer.x,\n          y = pointer.y,\n          action = transform.action,\n          actionPerformed = false,\n          options = {\n            target: transform.target,\n            e: e,\n            transform: transform,\n            pointer: pointer\n          };\n\n      if (action === 'rotate') {\n        (actionPerformed = this._rotateObject(x, y)) && this._fire('rotating', options);\n      }\n      else if (action === 'scale') {\n        (actionPerformed = this._onScale(e, transform, x, y)) && this._fire('scaling', options);\n      }\n      else if (action === 'scaleX') {\n        (actionPerformed = this._scaleObject(x, y, 'x')) && this._fire('scaling', options);\n      }\n      else if (action === 'scaleY') {\n        (actionPerformed = this._scaleObject(x, y, 'y')) && this._fire('scaling', options);\n      }\n      else if (action === 'skewX') {\n        (actionPerformed = this._skewObject(x, y, 'x')) && this._fire('skewing', options);\n      }\n      else if (action === 'skewY') {\n        (actionPerformed = this._skewObject(x, y, 'y')) && this._fire('skewing', options);\n      }\n      else {\n        actionPerformed = this._translateObject(x, y);\n        if (actionPerformed) {\n          this._fire('moving', options);\n          this.setCursor(options.target.moveCursor || this.moveCursor);\n        }\n      }\n      transform.actionPerformed = transform.actionPerformed || actionPerformed;\n    },\n\n    /**\n     * @private\n     */\n    _fire: function(eventName, options) {\n      this.fire('object:' + eventName, options);\n      options.target.fire(eventName, options);\n    },\n\n    /**\n     * @private\n     */\n    _beforeScaleTransform: function(e, transform) {\n      if (transform.action === 'scale' || transform.action === 'scaleX' || transform.action === 'scaleY') {\n        var centerTransform = this._shouldCenterTransform(transform.target);\n\n        // Switch from a normal resize to center-based\n        if ((centerTransform && (transform.originX !== 'center' || transform.originY !== 'center')) ||\n           // Switch from center-based resize to normal one\n           (!centerTransform && transform.originX === 'center' && transform.originY === 'center')\n        ) {\n          this._resetCurrentTransform();\n          transform.reset = true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {Object} transform current tranform\n     * @param {Number} x mouse position x from origin\n     * @param {Number} y mouse poistion y from origin\n     * @return {Boolean} true if the scaling occurred\n     */\n    _onScale: function(e, transform, x, y) {\n      if (this._isUniscalePossible(e, transform.target)) {\n        transform.currentAction = 'scale';\n        return this._scaleObject(x, y);\n      }\n      else {\n        // Switch from a normal resize to proportional\n        if (!transform.reset && transform.currentAction === 'scale') {\n          this._resetCurrentTransform();\n        }\n\n        transform.currentAction = 'scaleEqually';\n        return this._scaleObject(x, y, 'equally');\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target current target\n     * @return {Boolean} true if unproportional scaling is possible\n     */\n    _isUniscalePossible: function(e, target) {\n      return (e[this.uniScaleKey] || this.uniScaleTransform) && !target.get('lockUniScaling');\n    },\n\n    /**\n     * Sets the cursor depending on where the canvas is being hovered.\n     * Note: very buggy in Opera\n     * @param {Event} e Event object\n     * @param {Object} target Object that the mouse is hovering, if so.\n     */\n    _setCursorFromEvent: function (e, target) {\n      if (!target) {\n        this.setCursor(this.defaultCursor);\n        return false;\n      }\n\n      var hoverCursor = target.hoverCursor || this.hoverCursor,\n          activeSelection = this._activeObject && this._activeObject.type === 'activeSelection' ?\n            this._activeObject : null,\n          // only show proper corner when group selection is not active\n          corner = (!activeSelection || !activeSelection.contains(target))\n                    && target._findTargetCorner(this.getPointer(e, true));\n\n      if (!corner) {\n        this.setCursor(hoverCursor);\n      }\n      else {\n        this.setCursor(this.getCornerCursor(corner, target, e));\n      }\n    },\n\n    /**\n     * @private\n     */\n    getCornerCursor: function(corner, target, e) {\n      if (this.actionIsDisabled(corner, target, e)) {\n        return this.notAllowedCursor;\n      }\n      else if (corner in cursorOffset) {\n        return this._getRotatedCornerCursor(corner, target, e);\n      }\n      else if (corner === 'mtr' && target.hasRotatingPoint) {\n        return this.rotationCursor;\n      }\n      else {\n        return this.defaultCursor;\n      }\n    },\n\n    actionIsDisabled: function(corner, target, e) {\n      if (corner === 'mt' || corner === 'mb') {\n        return e[this.altActionKey] ? target.lockSkewingX : target.lockScalingY;\n      }\n      else if (corner === 'ml' || corner === 'mr') {\n        return e[this.altActionKey] ? target.lockSkewingY : target.lockScalingX;\n      }\n      else if (corner === 'mtr') {\n        return target.lockRotation;\n      }\n      else {\n        return this._isUniscalePossible(e, target) ?\n          target.lockScalingX && target.lockScalingY : target.lockScalingX || target.lockScalingY;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getRotatedCornerCursor: function(corner, target, e) {\n      var n = Math.round((target.angle % 360) / 45);\n\n      if (n < 0) {\n        n += 8; // full circle ahead\n      }\n      n += cursorOffset[corner];\n      if (e[this.altActionKey] && cursorOffset[corner] % 2 === 0) {\n        //if we are holding shift and we are on a mx corner...\n        n += 2;\n      }\n      // normalize n to be from 0 to 7\n      n %= 8;\n\n      return this.cursorMap[n];\n    }\n  });\n})();\n\n\n(function() {\n\n  var min = Math.min,\n      max = Math.max;\n\n  fabric.util.object.extend(fabric.Canvas.prototype, /** @lends fabric.Canvas.prototype */ {\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     * @return {Boolean}\n     */\n    _shouldGroup: function(e, target) {\n      var activeObject = this._activeObject;\n\n      return activeObject && this._isSelectionKeyPressed(e) && target && target.selectable && this.selection &&\n            (activeObject !== target || activeObject.type === 'activeSelection');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _handleGrouping: function (e, target) {\n      var activeObject = this._activeObject;\n      if (activeObject.__corner) {\n        return;\n      }\n      if (target === activeObject) {\n        // if it's a group, find target again, using activeGroup objects\n        target = this.findTarget(e, true);\n        // if even object is not found or we are on activeObjectCorner, bail out\n        if (!target) {\n          return;\n        }\n      }\n      if (activeObject && activeObject.type === 'activeSelection') {\n        this._updateActiveSelection(target, e);\n      }\n      else {\n        this._createActiveSelection(target, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateActiveSelection: function(target, e) {\n      var activeSelection = this._activeObject,\n          currentActiveObjects = activeSelection._objects.slice(0);\n      if (activeSelection.contains(target)) {\n        activeSelection.removeWithUpdate(target);\n        this._hoveredTarget = target;\n        if (activeSelection.size() === 1) {\n          // activate last remaining object\n          this._setActiveObject(activeSelection.item(0), e);\n        }\n      }\n      else {\n        activeSelection.addWithUpdate(target);\n        this._hoveredTarget = activeSelection;\n      }\n      this._fireSelectionEvents(currentActiveObjects, e);\n    },\n\n    /**\n     * @private\n     */\n    _createActiveSelection: function(target, e) {\n      var currentActives = this.getActiveObjects(), group = this._createGroup(target);\n      this._hoveredTarget = group;\n      this._setActiveObject(group, e);\n      this._fireSelectionEvents(currentActives, e);\n    },\n\n    /**\n     * @private\n     * @param {Object} target\n     */\n    _createGroup: function(target) {\n      var objects = this.getObjects(),\n          isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),\n          groupObjects = isActiveLower\n            ? [this._activeObject, target]\n            : [target, this._activeObject];\n      this._activeObject.isEditing && this._activeObject.exitEditing();\n      return new fabric.ActiveSelection(groupObjects, {\n        canvas: this\n      });\n    },\n\n    /**\n     * @private\n     * @param {Event} e mouse event\n     */\n    _groupSelectedObjects: function (e) {\n\n      var group = this._collectObjects(),\n          aGroup;\n\n      // do not create group for 1 element only\n      if (group.length === 1) {\n        this.setActiveObject(group[0], e);\n      }\n      else if (group.length > 1) {\n        aGroup = new fabric.ActiveSelection(group.reverse(), {\n          canvas: this\n        });\n        this.setActiveObject(aGroup, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _collectObjects: function() {\n      var group = [],\n          currentObject,\n          x1 = this._groupSelector.ex,\n          y1 = this._groupSelector.ey,\n          x2 = x1 + this._groupSelector.left,\n          y2 = y1 + this._groupSelector.top,\n          selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),\n          selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),\n          allowIntersect = !this.selectionFullyContained,\n          isClick = x1 === x2 && y1 === y2;\n      // we iterate reverse order to collect top first in case of click.\n      for (var i = this._objects.length; i--; ) {\n        currentObject = this._objects[i];\n\n        if (!currentObject || !currentObject.selectable || !currentObject.visible) {\n          continue;\n        }\n\n        if ((allowIntersect && currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2)) ||\n            currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2) ||\n            (allowIntersect && currentObject.containsPoint(selectionX1Y1)) ||\n            (allowIntersect && currentObject.containsPoint(selectionX2Y2))\n        ) {\n          group.push(currentObject);\n\n          // only add one object if it's a click\n          if (isClick) {\n            break;\n          }\n        }\n      }\n\n      return group;\n    },\n\n    /**\n     * @private\n     */\n    _maybeGroupObjects: function(e) {\n      if (this.selection && this._groupSelector) {\n        this._groupSelectedObjects(e);\n      }\n      this.setCursor(this.defaultCursor);\n      // clear selection and current transformation\n      this._groupSelector = null;\n    }\n  });\n\n})();\n\n\n(function () {\n\n  var supportQuality = fabric.StaticCanvas.supports('toDataURLWithQuality');\n\n  fabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n    /**\n     * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n     * @param {Object} [options] Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by, to have consistent\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 2.0.0\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}\n     * @example <caption>Generate jpeg dataURL with lower quality</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'jpeg',\n     *   quality: 0.8\n     * });\n     * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   left: 100,\n     *   top: 100,\n     *   width: 200,\n     *   height: 200\n     * });\n     * @example <caption>Generate double scaled png dataURL</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   multiplier: 2\n     * });\n     */\n    toDataURL: function (options) {\n      options || (options = { });\n\n      var format = options.format || 'png',\n          quality = options.quality || 1,\n          multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? 1 : 1 / this.getRetinaScaling()),\n          cropping = {\n            left: options.left || 0,\n            top: options.top || 0,\n            width: options.width || 0,\n            height: options.height || 0,\n          };\n      return this.__toDataURLWithMultiplier(format, quality, cropping, multiplier);\n    },\n\n    /**\n     * @private\n     */\n    __toDataURLWithMultiplier: function(format, quality, cropping, multiplier) {\n\n      var origWidth = this.width,\n          origHeight = this.height,\n          scaledWidth = (cropping.width || this.width) * multiplier,\n          scaledHeight = (cropping.height || this.height) * multiplier,\n          zoom = this.getZoom(),\n          newZoom = zoom * multiplier,\n          vp = this.viewportTransform,\n          translateX = (vp[4] - cropping.left) * multiplier,\n          translateY = (vp[5] - cropping.top) * multiplier,\n          newVp = [newZoom, 0, 0, newZoom, translateX, translateY],\n          originalInteractive = this.interactive,\n          originalSkipOffScreen = this.skipOffscreen,\n          needsResize = origWidth !== scaledWidth || origHeight !== scaledHeight;\n\n      this.viewportTransform = newVp;\n      this.skipOffscreen = false;\n      // setting interactive to false avoid exporting controls\n      this.interactive = false;\n      if (needsResize) {\n        this.setDimensions({ width: scaledWidth, height: scaledHeight }, { backstoreOnly: true });\n      }\n      // call a renderAll to force sync update. This will cancel the scheduled requestRenderAll\n      // from setDimensions\n      this.renderAll();\n      var data = this.__toDataURL(format, quality, cropping);\n      this.interactive = originalInteractive;\n      this.skipOffscreen = originalSkipOffScreen;\n      this.viewportTransform = vp;\n      //setDimensions with no option object is taking care of:\n      //this.width, this.height, this.requestRenderAll()\n      if (needsResize) {\n        this.setDimensions({ width: origWidth, height: origHeight }, { backstoreOnly: true });\n      }\n      this.renderAll();\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    __toDataURL: function(format, quality) {\n\n      var canvasEl = this.contextContainer.canvas;\n      // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n      if (format === 'jpg') {\n        format = 'jpeg';\n      }\n\n      var data = supportQuality\n        ? canvasEl.toDataURL('image/' + format, quality)\n        : canvasEl.toDataURL('image/' + format);\n\n      return data;\n    },\n  });\n\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Populates canvas with data from the specified dataless JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toDatalessJSON}\n   * @deprecated since 1.2.2\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   */\n  loadFromDatalessJSON: function (json, callback, reviver) {\n    return this.loadFromJSON(json, callback, reviver);\n  },\n\n  /**\n   * Populates canvas with data from the specified JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n   * @example <caption>loadFromJSON</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));\n   * @example <caption>loadFromJSON with reviver</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {\n   *   // `o` = json object\n   *   // `object` = fabric.Object instance\n   *   // ... do some stuff ...\n   * });\n   */\n  loadFromJSON: function (json, callback, reviver) {\n    if (!json) {\n      return;\n    }\n\n    // serialize if it wasn't already\n    var serialized = (typeof json === 'string')\n      ? JSON.parse(json)\n      : fabric.util.object.clone(json);\n\n    var _this = this,\n        renderOnAddRemove = this.renderOnAddRemove;\n    this.renderOnAddRemove = false;\n\n    this._enlivenObjects(serialized.objects, function (enlivenedObjects) {\n      _this.clear();\n      _this._setBgOverlay(serialized, function () {\n        enlivenedObjects.forEach(function(obj, index) {\n          // we splice the array just in case some custom classes restored from JSON\n          // will add more object to canvas at canvas init.\n          _this.insertAt(obj, index);\n        });\n        _this.renderOnAddRemove = renderOnAddRemove;\n        // remove parts i cannot set as options\n        delete serialized.objects;\n        delete serialized.backgroundImage;\n        delete serialized.overlayImage;\n        delete serialized.background;\n        delete serialized.overlay;\n        // this._initOptions does too many things to just\n        // call it. Normally loading an Object from JSON\n        // create the Object instance. Here the Canvas is\n        // already an instance and we are just loading things over it\n        _this._setOptions(serialized);\n        _this.renderAll();\n        callback && callback();\n      });\n    }, reviver);\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {Object} serialized Object with background and overlay information\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n   */\n  _setBgOverlay: function(serialized, callback) {\n    var loaded = {\n      backgroundColor: false,\n      overlayColor: false,\n      backgroundImage: false,\n      overlayImage: false\n    };\n\n    if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\n      callback && callback();\n      return;\n    }\n\n    var cbIfLoaded = function () {\n      if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\n        callback && callback();\n      }\n    };\n\n    this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);\n    this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);\n    this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\n   * @param {(Object|String)} value Value to set\n   * @param {Object} loaded Set loaded property to true if property is set\n   * @param {Object} callback Callback function to invoke after property is set\n   */\n  __setBgOverlay: function(property, value, loaded, callback) {\n    var _this = this;\n\n    if (!value) {\n      loaded[property] = true;\n      callback && callback();\n      return;\n    }\n\n    if (property === 'backgroundImage' || property === 'overlayImage') {\n      fabric.util.enlivenObjects([value], function(enlivedObject){\n        _this[property] = enlivedObject[0];\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n    else {\n      this['set' + fabric.util.string.capitalize(property, true)](value, function() {\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {Array} objects\n   * @param {Function} callback\n   * @param {Function} [reviver]\n   */\n  _enlivenObjects: function (objects, callback, reviver) {\n    if (!objects || objects.length === 0) {\n      callback && callback([]);\n      return;\n    }\n\n    fabric.util.enlivenObjects(objects, function(enlivenedObjects) {\n      callback && callback(enlivenedObjects);\n    }, null, reviver);\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Function} callback\n   */\n  _toDataURL: function (format, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURL(format));\n    });\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Number} multiplier\n   * @param {Function} callback\n   */\n  _toDataURLWithMultiplier: function (format, multiplier, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURLWithMultiplier(format, multiplier));\n    });\n  },\n\n  /**\n   * Clones canvas instance\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   * @param {Array} [properties] Array of properties to include in the cloned canvas and children\n   */\n  clone: function (callback, properties) {\n    var data = JSON.stringify(this.toJSON(properties));\n    this.cloneWithoutData(function(clone) {\n      clone.loadFromJSON(data, function() {\n        callback && callback(clone);\n      });\n    });\n  },\n\n  /**\n   * Clones canvas instance without cloning existing data.\n   * This essentially copies canvas dimensions, clipping properties, etc.\n   * but leaves data empty (so that you can populate it with your own)\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   */\n  cloneWithoutData: function(callback) {\n    var el = fabric.document.createElement('canvas');\n\n    el.width = this.width;\n    el.height = this.height;\n\n    var clone = new fabric.Canvas(el);\n    clone.clipTo = this.clipTo;\n    if (this.backgroundImage) {\n      clone.setBackgroundImage(this.backgroundImage.src, function() {\n        clone.renderAll();\n        callback && callback(clone);\n      });\n      clone.backgroundImageOpacity = this.backgroundImageOpacity;\n      clone.backgroundImageStretch = this.backgroundImageStretch;\n    }\n    else {\n      callback && callback(clone);\n    }\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      capitalize = fabric.util.string.capitalize,\n      degreesToRadians = fabric.util.degreesToRadians,\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash'),\n      objectCaching = !fabric.isLikelyNode,\n      ALIASING_LIMIT = 2;\n\n  if (fabric.Object) {\n    return;\n  }\n\n  /**\n   * Root object class from which all 2d shape classes inherit from\n   * @class fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\n   * @see {@link fabric.Object#initialize} for constructor definition\n   *\n   * @fires added\n   * @fires removed\n   *\n   * @fires selected\n   * @fires deselected\n   * @fires modified\n   * @fires modified\n   * @fires moved\n   * @fires scaled\n   * @fires rotated\n   * @fires skewed\n   *\n   * @fires rotating\n   * @fires scaling\n   * @fires moving\n   * @fires skewing\n   *\n   * @fires mousedown\n   * @fires mouseup\n   * @fires mouseover\n   * @fires mouseout\n   * @fires mousewheel\n   * @fires mousedblclick\n   *\n   * @fires dragover\n   * @fires dragenter\n   * @fires dragleave\n   * @fires drop\n   */\n  fabric.Object = fabric.util.createClass(fabric.CommonMethods, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Type of an object (rect, circle, path, etc.).\n     * Note that this property is meant to be read-only and not meant to be modified.\n     * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.\n     * @type String\n     * @default\n     */\n    type:                     'object',\n\n    /**\n     * Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originX:                  'left',\n\n    /**\n     * Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originY:                  'top',\n\n    /**\n     * Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}\n     * @type Number\n     * @default\n     */\n    top:                      0,\n\n    /**\n     * Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}\n     * @type Number\n     * @default\n     */\n    left:                     0,\n\n    /**\n     * Object width\n     * @type Number\n     * @default\n     */\n    width:                    0,\n\n    /**\n     * Object height\n     * @type Number\n     * @default\n     */\n    height:                   0,\n\n    /**\n     * Object scale factor (horizontal)\n     * @type Number\n     * @default\n     */\n    scaleX:                   1,\n\n    /**\n     * Object scale factor (vertical)\n     * @type Number\n     * @default\n     */\n    scaleY:                   1,\n\n    /**\n     * When true, an object is rendered as flipped horizontally\n     * @type Boolean\n     * @default\n     */\n    flipX:                    false,\n\n    /**\n     * When true, an object is rendered as flipped vertically\n     * @type Boolean\n     * @default\n     */\n    flipY:                    false,\n\n    /**\n     * Opacity of an object\n     * @type Number\n     * @default\n     */\n    opacity:                  1,\n\n    /**\n     * Angle of rotation of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    angle:                    0,\n\n    /**\n     * Angle of skew on x axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewX:                    0,\n\n    /**\n     * Angle of skew on y axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewY:                    0,\n\n    /**\n     * Size of object's controlling corners (in pixels)\n     * @type Number\n     * @default\n     */\n    cornerSize:               13,\n\n    /**\n     * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)\n     * @type Boolean\n     * @default\n     */\n    transparentCorners:       true,\n\n    /**\n     * Default cursor value used when hovering over this object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor:              null,\n\n    /**\n     * Default cursor value used when moving this object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor:               null,\n\n    /**\n     * Padding between object and its controlling borders (in pixels)\n     * @type Number\n     * @default\n     */\n    padding:                  0,\n\n    /**\n     * Color of controlling borders of an object (when it's active)\n     * @type String\n     * @default\n     */\n    borderColor:              'rgba(102,153,255,0.75)',\n\n    /**\n     * Array specifying dash pattern of an object's borders (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    borderDashArray:          null,\n\n    /**\n     * Color of controlling corners of an object (when it's active)\n     * @type String\n     * @default\n     */\n    cornerColor:              'rgba(102,153,255,0.5)',\n\n    /**\n     * Color of controlling corners of an object (when it's active and transparentCorners false)\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    cornerStrokeColor:        null,\n\n    /**\n     * Specify style of control, 'rect' or 'circle'\n     * @since 1.6.2\n     * @type String\n     */\n    cornerStyle:          'rect',\n\n    /**\n     * Array specifying dash pattern of an object's control (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    cornerDashArray:          null,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being scaled via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling:          false,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being rotated via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation:         true,\n\n    /**\n     * Color of object's fill\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    fill:                     'rgb(0,0,0)',\n\n    /**\n     * Fill rule used to fill an object\n     * accepted values are nonzero, evenodd\n     * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)\n     * @type String\n     * @default\n     */\n    fillRule:                 'nonzero',\n\n    /**\n     * Composite rule used for canvas globalCompositeOperation\n     * @type String\n     * @default\n     */\n    globalCompositeOperation: 'source-over',\n\n    /**\n     * Background color of an object.\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    backgroundColor:          '',\n\n    /**\n     * Selection Background color of an object. colored layer behind the object when it is active.\n     * does not mix good with globalCompositeOperation methods.\n     * @type String\n     * @default\n     */\n    selectionBackgroundColor:          '',\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    stroke:                   null,\n\n    /**\n     * Width of a stroke used to render this object\n     * @type Number\n     * @default\n     */\n    strokeWidth:              1,\n\n    /**\n     * Array specifying dash pattern of an object's stroke (stroke must be defined)\n     * @type Array\n     */\n    strokeDashArray:          null,\n\n    /**\n     * Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")\n     * @type String\n     * @default\n     */\n    strokeLineCap:            'butt',\n\n    /**\n     * Corner style of an object's stroke (one of \"bevil\", \"round\", \"miter\")\n     * @type String\n     * @default\n     */\n    strokeLineJoin:           'miter',\n\n    /**\n     * Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeMiterLimit:         4,\n\n    /**\n     * Shadow object representing shadow of this shape\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:                   null,\n\n    /**\n     * Opacity of object's controlling borders when object is active and moving\n     * @type Number\n     * @default\n     */\n    borderOpacityWhenMoving:  0.4,\n\n    /**\n     * Scale factor of object's controlling borders\n     * @type Number\n     * @default\n     */\n    borderScaleFactor:        1,\n\n    /**\n     * Transform matrix (similar to SVG's transform matrix)\n     * @type Array\n     */\n    transformMatrix:          null,\n\n    /**\n     * Minimum allowed scale value of an object\n     * @type Number\n     * @default\n     */\n    minScaleLimit:            0,\n\n    /**\n     * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).\n     * But events still fire on it.\n     * @type Boolean\n     * @default\n     */\n    selectable:               true,\n\n    /**\n     * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4\n     * @type Boolean\n     * @default\n     */\n    evented:                  true,\n\n    /**\n     * When set to `false`, an object is not rendered on canvas\n     * @type Boolean\n     * @default\n     */\n    visible:                  true,\n\n    /**\n     * When set to `false`, object's controls are not displayed and can not be used to manipulate object\n     * @type Boolean\n     * @default\n     */\n    hasControls:              true,\n\n    /**\n     * When set to `false`, object's controlling borders are not rendered\n     * @type Boolean\n     * @default\n     */\n    hasBorders:               true,\n\n    /**\n     * When set to `false`, object's controlling rotating point will not be visible or selectable\n     * @type Boolean\n     * @default\n     */\n    hasRotatingPoint:         true,\n\n    /**\n     * Offset for object's controlling rotating point (when enabled via `hasRotatingPoint`)\n     * @type Number\n     * @default\n     */\n    rotatingPointOffset:      40,\n\n    /**\n     * When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind:       false,\n\n    /**\n     * When `false`, default object's values are not included in its serialization\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues:     true,\n\n    /**\n     * Function that determines clipping of an object (context is passed as a first argument)\n     * Note that context origin is at the object's center point (not left/top corner)\n     * @deprecated since 2.0.0\n     * @type Function\n     */\n    clipTo:                   null,\n\n    /**\n     * When `true`, object horizontal movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementX:            false,\n\n    /**\n     * When `true`, object vertical movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementY:            false,\n\n    /**\n     * When `true`, object rotation is locked\n     * @type Boolean\n     * @default\n     */\n    lockRotation:             false,\n\n    /**\n     * When `true`, object horizontal scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingX:             false,\n\n    /**\n     * When `true`, object vertical scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingY:             false,\n\n    /**\n     * When `true`, object non-uniform scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockUniScaling:           false,\n\n    /**\n     * When `true`, object horizontal skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingX:             false,\n\n    /**\n     * When `true`, object vertical skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingY:             false,\n\n    /**\n     * When `true`, object cannot be flipped by scaling into negative values\n     * @type Boolean\n     * @default\n     */\n    lockScalingFlip:          false,\n\n    /**\n     * When `true`, object is not exported in OBJECT/JSON\n     * since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    excludeFromExport:        false,\n\n    /**\n     * When `true`, object is cached on an additional canvas.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    objectCaching:            objectCaching,\n\n    /**\n     * When `true`, object properties are checked for cache invalidation. In some particular\n     * situation you may want this to be disabled ( spray brush, very big, groups)\n     * or if your application does not allow you to modify properties for groups child you want\n     * to disable it for groups.\n     * default to false\n     * since 1.7.0\n     * @type Boolean\n     * @default false\n     */\n    statefullCache:            false,\n\n    /**\n     * When `true`, cache does not get updated during scaling. The picture will get blocky if scaled\n     * too much and will be redrawn with correct details at the end of scaling.\n     * this setting is performance and application dependant.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    noScaleCache:              true,\n\n    /**\n     * When set to `true`, object's cache will be rerendered next render call.\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    dirty:                true,\n\n    /**\n     * keeps the value of the last hovered coner during mouse move.\n     * 0 is no corner, or 'mt', 'ml', 'mtr' etc..\n     * It should be private, but there is no harm in using it as\n     * a read-only property.\n     * @type number|string|any\n     * @default 0\n     */\n    __corner: 0,\n\n    /**\n     * Determins if the fill or the stroke is drawn first (one of \"fill\" or \"stroke\")\n     * @type String\n     * @default\n     */\n    paintFirst:           'fill',\n\n    /**\n     * List of properties to consider when checking if state\n     * of an object is changed (fabric.Object#hasStateChanged)\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: (\n      'top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' +\n      'stroke strokeWidth strokeDashArray strokeLineCap strokeLineJoin strokeMiterLimit ' +\n      'angle opacity fill globalCompositeOperation shadow clipTo visible backgroundColor ' +\n      'skewX skewY fillRule paintFirst'\n    ).split(' '),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * @type Array\n     */\n    cacheProperties: (\n      'fill stroke strokeWidth strokeDashArray width height paintFirst' +\n      ' strokeLineCap strokeLineJoin strokeMiterLimit backgroundColor'\n    ).split(' '),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      if (options) {\n        this.setOptions(options);\n      }\n    },\n\n    /**\n     * Create a the canvas used to keep the cached copy of the object\n     * @private\n     */\n    _createCacheCanvas: function() {\n      this._cacheProperties = {};\n      this._cacheCanvas = fabric.document.createElement('canvas');\n      this._cacheContext = this._cacheCanvas.getContext('2d');\n      this._updateCacheCanvas();\n      // if canvas gets created, is empty, so dirty.\n      this.dirty = true;\n    },\n\n    /**\n     * Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal\n     * and each side do not cross fabric.cacheSideLimit\n     * those numbers are configurable so that you can get as much detail as you want\n     * making bargain with performances.\n     * @param {Object} dims\n     * @param {Object} dims.width width of canvas\n     * @param {Object} dims.height height of canvas\n     * @param {Object} dims.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @param {Object} dims.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _limitCacheSize: function(dims) {\n      var perfLimitSizeTotal = fabric.perfLimitSizeTotal,\n          width = dims.width, height = dims.height,\n          max = fabric.maxCacheSideLimit, min = fabric.minCacheSideLimit;\n      if (width <= max && height <= max && width * height <= perfLimitSizeTotal) {\n        if (width < min) {\n          dims.width = min;\n        }\n        if (height < min) {\n          dims.height = min;\n        }\n        return dims;\n      }\n      var ar = width / height, limitedDims = fabric.util.limitDimsByArea(ar, perfLimitSizeTotal),\n          capValue = fabric.util.capValue,\n          x = capValue(min, limitedDims.x, max),\n          y = capValue(min, limitedDims.y, max);\n      if (width > x) {\n        dims.zoomX /= width / x;\n        dims.width = x;\n        dims.capped = true;\n      }\n      if (height > y) {\n        dims.zoomY /= height / y;\n        dims.height = y;\n        dims.capped = true;\n      }\n      return dims;\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @param {Object} dim.x width of object to be cached\n     * @param {Object} dim.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var zoom = this.canvas && this.canvas.getZoom() || 1,\n          objectScale = this.getObjectScaling(),\n          retina = this.canvas && this.canvas._isRetinaScaling() ? fabric.devicePixelRatio : 1,\n          dim = this._getNonTransformedDimensions(),\n          zoomX = objectScale.scaleX * zoom * retina,\n          zoomY = objectScale.scaleY * zoom * retina,\n          width = dim.x * zoomX,\n          height = dim.y * zoomY;\n      return {\n        // for sure this ALIASING_LIMIT is slightly crating problem\n        // in situation in wich the cache canvas gets an upper limit\n        width: width + ALIASING_LIMIT,\n        height: height + ALIASING_LIMIT,\n        zoomX: zoomX,\n        zoomY: zoomY,\n        x: dim.x,\n        y: dim.y\n      };\n    },\n\n    /**\n     * Update width and height of the canvas for cache\n     * returns true or false if canvas needed resize.\n     * @private\n     * @return {Boolean} true if the canvas has been resized\n     */\n    _updateCacheCanvas: function() {\n      if (this.noScaleCache && this.canvas && this.canvas._currentTransform) {\n        var target = this.canvas._currentTransform.target,\n            action = this.canvas._currentTransform.action;\n        if (this === target && action.slice && action.slice(0, 5) === 'scale') {\n          return false;\n        }\n      }\n      var canvas = this._cacheCanvas,\n          dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n          minCacheSize = fabric.minCacheSideLimit,\n          width = dims.width, height = dims.height, drawingWidth, drawingHeight,\n          zoomX = dims.zoomX, zoomY = dims.zoomY,\n          dimensionsChanged = width !== this.cacheWidth || height !== this.cacheHeight,\n          zoomChanged = this.zoomX !== zoomX || this.zoomY !== zoomY,\n          shouldRedraw = dimensionsChanged || zoomChanged,\n          additionalWidth = 0, additionalHeight = 0, shouldResizeCanvas = false;\n      if (dimensionsChanged) {\n        var canvasWidth = this._cacheCanvas.width,\n            canvasHeight = this._cacheCanvas.height,\n            sizeGrowing = width > canvasWidth || height > canvasHeight,\n            sizeShrinking = (width < canvasWidth * 0.9 || height < canvasHeight * 0.9) &&\n              canvasWidth > minCacheSize && canvasHeight > minCacheSize;\n        shouldResizeCanvas = sizeGrowing || sizeShrinking;\n        if (sizeGrowing && !dims.capped && (width > minCacheSize || height > minCacheSize)) {\n          additionalWidth = width * 0.1;\n          additionalHeight = height * 0.1;\n        }\n      }\n      if (shouldRedraw) {\n        if (shouldResizeCanvas) {\n          canvas.width = Math.ceil(width + additionalWidth);\n          canvas.height = Math.ceil(height + additionalHeight);\n        }\n        else {\n          this._cacheContext.setTransform(1, 0, 0, 1, 0, 0);\n          this._cacheContext.clearRect(0, 0, canvas.width, canvas.height);\n        }\n        drawingWidth = dims.x * zoomX / 2;\n        drawingHeight = dims.y * zoomY / 2;\n        this.cacheTranslationX = Math.round(canvas.width / 2 - drawingWidth) + drawingWidth;\n        this.cacheTranslationY = Math.round(canvas.height / 2 - drawingHeight) + drawingHeight;\n        this.cacheWidth = width;\n        this.cacheHeight = height;\n        this._cacheContext.translate(this.cacheTranslationX, this.cacheTranslationY);\n        this._cacheContext.scale(zoomX, zoomY);\n        this.zoomX = zoomX;\n        this.zoomY = zoomY;\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Sets object's properties from options\n     * @param {Object} [options] Options object\n     */\n    setOptions: function(options) {\n      this._setOptions(options);\n      this._initGradient(options.fill, 'fill');\n      this._initGradient(options.stroke, 'stroke');\n      this._initClipping(options);\n      this._initPattern(options.fill, 'fill');\n      this._initPattern(options.stroke, 'stroke');\n    },\n\n    /**\n     * Transforms context when rendering an object\n     * @param {CanvasRenderingContext2D} ctx Context\n     */\n    transform: function(ctx) {\n      var m;\n      if (this.group && !this.group._transformDone) {\n        m = this.calcTransformMatrix();\n      }\n      else {\n        m = this.calcOwnMatrix();\n      }\n      ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n    },\n\n    /**\n     * Returns an object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\n          object = {\n            type:                     this.type,\n            version:                  fabric.version,\n            originX:                  this.originX,\n            originY:                  this.originY,\n            left:                     toFixed(this.left, NUM_FRACTION_DIGITS),\n            top:                      toFixed(this.top, NUM_FRACTION_DIGITS),\n            width:                    toFixed(this.width, NUM_FRACTION_DIGITS),\n            height:                   toFixed(this.height, NUM_FRACTION_DIGITS),\n            fill:                     (this.fill && this.fill.toObject) ? this.fill.toObject() : this.fill,\n            stroke:                   (this.stroke && this.stroke.toObject) ? this.stroke.toObject() : this.stroke,\n            strokeWidth:              toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\n            strokeDashArray:          this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,\n            strokeLineCap:            this.strokeLineCap,\n            strokeLineJoin:           this.strokeLineJoin,\n            strokeMiterLimit:         toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\n            scaleX:                   toFixed(this.scaleX, NUM_FRACTION_DIGITS),\n            scaleY:                   toFixed(this.scaleY, NUM_FRACTION_DIGITS),\n            angle:                    toFixed(this.angle, NUM_FRACTION_DIGITS),\n            flipX:                    this.flipX,\n            flipY:                    this.flipY,\n            opacity:                  toFixed(this.opacity, NUM_FRACTION_DIGITS),\n            shadow:                   (this.shadow && this.shadow.toObject) ? this.shadow.toObject() : this.shadow,\n            visible:                  this.visible,\n            clipTo:                   this.clipTo && String(this.clipTo),\n            backgroundColor:          this.backgroundColor,\n            fillRule:                 this.fillRule,\n            paintFirst:               this.paintFirst,\n            globalCompositeOperation: this.globalCompositeOperation,\n            transformMatrix:          this.transformMatrix ? this.transformMatrix.concat() : null,\n            skewX:                    toFixed(this.skewX, NUM_FRACTION_DIGITS),\n            skewY:                    toFixed(this.skewY, NUM_FRACTION_DIGITS)\n          };\n\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n      if (!this.includeDefaultValues) {\n        object = this._removeDefaultValues(object);\n      }\n\n      return object;\n    },\n\n    /**\n     * Returns (dataless) object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      // will be overwritten by subclasses\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     */\n    _removeDefaultValues: function(object) {\n      var prototype = fabric.util.getKlass(object.type).prototype,\n          stateProperties = prototype.stateProperties;\n      stateProperties.forEach(function(prop) {\n        if (object[prop] === prototype[prop]) {\n          delete object[prop];\n        }\n        var isArray = Object.prototype.toString.call(object[prop]) === '[object Array]' &&\n                      Object.prototype.toString.call(prototype[prop]) === '[object Array]';\n\n        // basically a check for [] === []\n        if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {\n          delete object[prop];\n        }\n      });\n\n      return object;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.' + capitalize(this.type) + '>';\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getObjectScaling: function() {\n      var scaleX = this.scaleX, scaleY = this.scaleY;\n      if (this.group) {\n        var scaling = this.group.getObjectScaling();\n        scaleX *= scaling.scaleX;\n        scaleY *= scaling.scaleY;\n      }\n      return { scaleX: scaleX, scaleY: scaleY };\n    },\n\n    /**\n     * Return the object opacity counting also the group property\n     * @return {Number}\n     */\n    getObjectOpacity: function() {\n      var opacity = this.opacity;\n      if (this.group) {\n        opacity *= this.group.getObjectOpacity();\n      }\n      return opacity;\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Object} thisArg\n     */\n    _set: function(key, value) {\n      var shouldConstrainValue = (key === 'scaleX' || key === 'scaleY'),\n          isChanged = this[key] !== value, groupNeedsUpdate = false;\n\n      if (shouldConstrainValue) {\n        value = this._constrainScale(value);\n      }\n      if (key === 'scaleX' && value < 0) {\n        this.flipX = !this.flipX;\n        value *= -1;\n      }\n      else if (key === 'scaleY' && value < 0) {\n        this.flipY = !this.flipY;\n        value *= -1;\n      }\n      else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {\n        value = new fabric.Shadow(value);\n      }\n      else if (key === 'dirty' && this.group) {\n        this.group.set('dirty', value);\n      }\n\n      this[key] = value;\n\n      if (isChanged) {\n        groupNeedsUpdate = this.group && this.group.isOnACache();\n        if (this.cacheProperties.indexOf(key) > -1) {\n          this.dirty = true;\n          groupNeedsUpdate && this.group.set('dirty', true);\n        }\n        else if (groupNeedsUpdate && this.stateProperties.indexOf(key) > -1) {\n          this.group.set('dirty', true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * This callback function is called by the parent group of an object every\n     * time a non-delegated property changes on the group. It is passed the key\n     * and value as parameters. Not adding in this function's signature to avoid\n     * Travis build error about unused variables.\n     */\n    setOnGroup: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n    /**\n     * Retrieves viewportTransform from Object's canvas if possible\n     * @method getViewportTransform\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean}\n     */\n    getViewportTransform: function() {\n      if (this.canvas && this.canvas.viewportTransform) {\n        return this.canvas.viewportTransform;\n      }\n      return fabric.iMatrix.concat();\n    },\n\n    /*\n     * @private\n     * return if the object would be visible in rendering\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean}\n     */\n    isNotVisible: function() {\n      return this.opacity === 0 || (this.width === 0 && this.height === 0) || !this.visible;\n    },\n\n    /**\n     * Renders an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      // do not render if width/height are zeros or object is not visible\n      if (this.isNotVisible()) {\n        return;\n      }\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n      ctx.save();\n      this._setupCompositeOperation(ctx);\n      this.drawSelectionBackground(ctx);\n      this.transform(ctx);\n      this._setOpacity(ctx);\n      this._setShadow(ctx, this);\n      if (this.transformMatrix) {\n        ctx.transform.apply(ctx, this.transformMatrix);\n      }\n      this.clipTo && fabric.util.clipContext(this, ctx);\n      if (this.shouldCache()) {\n        if (!this._cacheCanvas) {\n          this._createCacheCanvas();\n\n        }\n        if (this.isCacheDirty()) {\n          this.statefullCache && this.saveState({ propertySet: 'cacheProperties' });\n          this.drawObject(this._cacheContext);\n          this.dirty = false;\n        }\n        this.drawCacheOnCanvas(ctx);\n      }\n      else {\n        this._removeCacheCanvas();\n        this.dirty = false;\n        this.drawObject(ctx);\n        if (this.objectCaching && this.statefullCache) {\n          this.saveState({ propertySet: 'cacheProperties' });\n        }\n      }\n      this.clipTo && ctx.restore();\n      ctx.restore();\n    },\n\n    /**\n     * Remove cacheCanvas and its dimensions from the objects\n     */\n    _removeCacheCanvas: function() {\n      this._cacheCanvas = null;\n      this.cacheWidth = 0;\n      this.cacheHeight = 0;\n    },\n\n    /**\n     * When set to `true`, force the object to have its own cache, even if it is inside a group\n     * it may be needed when your object behave in a particular way on the cache and always needs\n     * its own isolated canvas to render correctly.\n     * Created to be overridden\n     * since 1.7.12\n     * @returns false\n     */\n    needsItsOwnCache: function() {\n      if (this.paintFirst === 'stroke' && typeof this.shadow === 'object') {\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      this.ownCaching = this.objectCaching &&\n      (!this.group || this.needsItsOwnCache() || !this.group.isOnACache());\n      return this.ownCaching;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * used by Group.shouldCache to know if child has a shadow recursively\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      return !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0);\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawObject: function(ctx) {\n      this._renderBackground(ctx);\n      this._setStrokeStyles(ctx, this);\n      this._setFillStyles(ctx, this);\n      this._render(ctx);\n    },\n\n    /**\n     * Paint the cached copy of the object on the target context.\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawCacheOnCanvas: function(ctx) {\n      ctx.scale(1 / this.zoomX, 1 / this.zoomY);\n      ctx.drawImage(this._cacheCanvas, -this.cacheTranslationX, -this.cacheTranslationY);\n    },\n\n    /**\n     * Check if cache is dirty\n     * @param {Boolean} skipCanvas skip canvas checks because this object is painted\n     * on parent canvas.\n     */\n    isCacheDirty: function(skipCanvas) {\n      if (this.isNotVisible()) {\n        return false;\n      }\n      if (this._cacheCanvas && !skipCanvas && this._updateCacheCanvas()) {\n        // in this case the context is already cleared.\n        return true;\n      }\n      else {\n        if (this.dirty || (this.statefullCache && this.hasStateChanged('cacheProperties'))) {\n          if (this._cacheCanvas && !skipCanvas) {\n            var width = this.cacheWidth / this.zoomX;\n            var height = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-width / 2, -height / 2, width, height);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Draws a background for the object big as its untrasformed dimensions\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function(ctx) {\n      if (!this.backgroundColor) {\n        return;\n      }\n      var dim = this._getNonTransformedDimensions();\n      ctx.fillStyle = this.backgroundColor;\n\n      ctx.fillRect(\n        -dim.x / 2,\n        -dim.y / 2,\n        dim.x,\n        dim.y\n      );\n      // if there is background color no other shadows\n      // should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setOpacity: function(ctx) {\n      if (this.group && !this.group._transformDone) {\n        ctx.globalAlpha = this.getObjectOpacity();\n      }\n      else {\n        ctx.globalAlpha *= this.opacity;\n      }\n    },\n\n    _setStrokeStyles: function(ctx, decl) {\n      if (decl.stroke) {\n        ctx.lineWidth = decl.strokeWidth;\n        ctx.lineCap = decl.strokeLineCap;\n        ctx.lineJoin = decl.strokeLineJoin;\n        ctx.miterLimit = decl.strokeMiterLimit;\n        ctx.strokeStyle = decl.stroke.toLive\n          ? decl.stroke.toLive(ctx, this)\n          : decl.stroke;\n      }\n    },\n\n    _setFillStyles: function(ctx, decl) {\n      if (decl.fill) {\n        ctx.fillStyle = decl.fill.toLive\n          ? decl.fill.toLive(ctx, this)\n          : decl.fill;\n      }\n    },\n\n    /**\n     * @private\n     * Sets line dash\n     * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\n     * @param {Array} dashArray array representing dashes\n     * @param {Function} alternative function to call if browaser does not support lineDash\n     */\n    _setLineDash: function(ctx, dashArray, alternative) {\n      if (!dashArray) {\n        return;\n      }\n      // Spec requires the concatenation of two copies the dash list when the number of elements is odd\n      if (1 & dashArray.length) {\n        dashArray.push.apply(dashArray, dashArray);\n      }\n      if (supportsLineDash) {\n        ctx.setLineDash(dashArray);\n      }\n      else {\n        alternative && alternative(ctx);\n      }\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [styleOverride] properties to override the object style\n     */\n    _renderControls: function(ctx, styleOverride) {\n      var vpt = this.getViewportTransform(),\n          matrix = this.calcTransformMatrix(),\n          options, drawBorders, drawControls;\n      styleOverride = styleOverride || { };\n      drawBorders = typeof styleOverride.hasBorders !== 'undefined' ? styleOverride.hasBorders : this.hasBorders;\n      drawControls = typeof styleOverride.hasControls !== 'undefined' ? styleOverride.hasControls : this.hasControls;\n      matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);\n      options = fabric.util.qrDecompose(matrix);\n      ctx.save();\n      ctx.translate(options.translateX, options.translateY);\n      ctx.lineWidth = 1 * this.borderScaleFactor;\n      if (!this.group) {\n        ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      }\n      if (styleOverride.forActiveSelection) {\n        ctx.rotate(degreesToRadians(options.angle));\n        drawBorders && this.drawBordersInGroup(ctx, options, styleOverride);\n      }\n      else {\n        ctx.rotate(degreesToRadians(this.angle));\n        drawBorders && this.drawBorders(ctx, styleOverride);\n      }\n      drawControls && this.drawControls(ctx, styleOverride);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      var multX = (this.canvas && this.canvas.viewportTransform[0]) || 1,\n          multY = (this.canvas && this.canvas.viewportTransform[3]) || 1,\n          scaling = this.getObjectScaling();\n      if (this.canvas && this.canvas._isRetinaScaling()) {\n        multX *= fabric.devicePixelRatio;\n        multY *= fabric.devicePixelRatio;\n      }\n      ctx.shadowColor = this.shadow.color;\n      ctx.shadowBlur = this.shadow.blur * fabric.browserShadowBlurConstant *\n        (multX + multY) * (scaling.scaleX + scaling.scaleY) / 4;\n      ctx.shadowOffsetX = this.shadow.offsetX * multX * scaling.scaleX;\n      ctx.shadowOffsetY = this.shadow.offsetY * multY * scaling.scaleY;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _removeShadow: function(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      ctx.shadowColor = '';\n      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} filler fabric.Pattern or fabric.Gradient\n     */\n    _applyPatternGradientTransform: function(ctx, filler) {\n      if (!filler || !filler.toLive) {\n        return { offsetX: 0, offsetY: 0 };\n      }\n      var t = filler.gradientTransform || filler.patternTransform;\n      var offsetX = -this.width / 2 + filler.offsetX || 0,\n          offsetY = -this.height / 2 + filler.offsetY || 0;\n      ctx.translate(offsetX, offsetY);\n      if (t) {\n        ctx.transform(t[0], t[1], t[2], t[3], t[4], t[5]);\n      }\n      return { offsetX: offsetX, offsetY: offsetY };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderPaintInOrder: function(ctx) {\n      if (this.paintFirst === 'stroke') {\n        this._renderStroke(ctx);\n        this._renderFill(ctx);\n      }\n      else {\n        this._renderFill(ctx);\n        this._renderStroke(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderFill: function(ctx) {\n      if (!this.fill) {\n        return;\n      }\n\n      ctx.save();\n      this._applyPatternGradientTransform(ctx, this.fill);\n      if (this.fillRule === 'evenodd') {\n        ctx.fill('evenodd');\n      }\n      else {\n        ctx.fill();\n      }\n      ctx.restore();\n    },\n\n    _renderStroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      this._setLineDash(ctx, this.strokeDashArray, this._renderDashedStroke);\n      this._applyPatternGradientTransform(ctx, this.stroke);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * This function is an helper for svg import. it returns the center of the object in the svg\n     * untransformed coordinates\n     * @private\n     * @return {Object} center point from element coordinates\n     */\n    _findCenterFromElement: function() {\n      return { x: this.left + this.width / 2, y: this.top + this.height / 2 };\n    },\n\n    /**\n     * This function is an helper for svg import. it decoompose the transformMatrix\n     * and assign properties to object.\n     * untransformed coordinates\n     * @private\n     * @chainable\n     */\n    _assignTransformMatrixProps: function() {\n      if (this.transformMatrix) {\n        var options = fabric.util.qrDecompose(this.transformMatrix);\n        this.flipX = false;\n        this.flipY = false;\n        this.set('scaleX', options.scaleX);\n        this.set('scaleY', options.scaleY);\n        this.angle = options.angle;\n        this.skewX = options.skewX;\n        this.skewY = 0;\n      }\n    },\n\n    /**\n     * This function is an helper for svg import. it removes the transform matrix\n     * and set to object properties that fabricjs can handle\n     * @private\n     * @param {Object} preserveAspectRatioOptions\n     * @return {thisArg}\n     */\n    _removeTransformMatrix: function(preserveAspectRatioOptions) {\n      var center = this._findCenterFromElement();\n      if (this.transformMatrix) {\n        this._assignTransformMatrixProps();\n        center = fabric.util.transformPoint(center, this.transformMatrix);\n      }\n      this.transformMatrix = null;\n      if (preserveAspectRatioOptions) {\n        this.scaleX *= preserveAspectRatioOptions.scaleX;\n        this.scaleY *= preserveAspectRatioOptions.scaleY;\n        this.cropX = preserveAspectRatioOptions.cropX;\n        this.cropY = preserveAspectRatioOptions.cropY;\n        center.x += preserveAspectRatioOptions.offsetLeft;\n        center.y += preserveAspectRatioOptions.offsetTop;\n        this.width = preserveAspectRatioOptions.width;\n        this.height = preserveAspectRatioOptions.height;\n      }\n      this.setPositionByOrigin(center, 'center', 'center');\n    },\n\n    /**\n     * Clones an instance, using a callback method will work for every object.\n     * @param {Function} callback Callback is invoked with a clone as a first argument\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     */\n    clone: function(callback, propertiesToInclude) {\n      var objectForm = this.toObject(propertiesToInclude);\n      if (this.constructor.fromObject) {\n        this.constructor.fromObject(objectForm, callback);\n      }\n      else {\n        fabric.Object._fromObject('Object', objectForm, callback);\n      }\n    },\n\n    /**\n     * Creates an instance of fabric.Image out of an object\n     * @param {Function} callback callback, invoked with an instance as a first argument\n     * @param {Object} [options] for clone as image, passed to toDataURL\n     * @param {Boolean} [options.enableRetinaScaling] enable retina scaling for the cloned image\n     * @return {fabric.Object} thisArg\n     */\n    cloneAsImage: function(callback, options) {\n      var dataUrl = this.toDataURL(options);\n      fabric.util.loadImage(dataUrl, function(img) {\n        if (callback) {\n          callback(new fabric.Image(img));\n        }\n      });\n      return this;\n    },\n\n    /**\n     * Converts an object into a data-url-like string\n     * @param {Object} options Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     */\n    toDataURL: function(options) {\n      options || (options = { });\n\n      var el = fabric.util.createCanvasElement(),\n          boundingRect = this.getBoundingRect();\n\n      el.width = boundingRect.width;\n      el.height = boundingRect.height;\n      fabric.util.wrapElement(el, 'div');\n      var canvas = new fabric.StaticCanvas(el, {\n        enableRetinaScaling: options.enableRetinaScaling,\n        renderOnAddRemove: false,\n        skipOffscreen: false,\n      });\n      // to avoid common confusion https://github.com/kangax/fabric.js/issues/806\n      if (options.format === 'jpg') {\n        options.format = 'jpeg';\n      }\n\n      if (options.format === 'jpeg') {\n        canvas.backgroundColor = '#fff';\n      }\n\n      var origParams = {\n        left: this.left,\n        top: this.top\n      };\n\n      this.setPositionByOrigin(new fabric.Point(canvas.width / 2, canvas.height / 2), 'center', 'center');\n\n      var originalCanvas = this.canvas;\n      canvas.add(this);\n      var data = canvas.toDataURL(options);\n      this.set(origParams).setCoords();\n      this.canvas = originalCanvas;\n      // canvas.dispose will call image.dispose that will nullify the elements\n      // since this canvas is a simple element for the process, we remove references\n      // to objects in this way in order to avoid object trashing.\n      canvas._objects = [];\n      canvas.dispose();\n      canvas = null;\n\n      return data;\n    },\n\n    /**\n     * Returns true if specified type is identical to the type of an instance\n     * @param {String} type Type to check against\n     * @return {Boolean}\n     */\n    isType: function(type) {\n      return this.type === type;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance (is 1 unless subclassed)\n     */\n    complexity: function() {\n      return 1;\n    },\n\n    /**\n     * Returns a JSON representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} JSON\n     */\n    toJSON: function(propertiesToInclude) {\n      // delegate, not alias\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * Sets gradient (fill or stroke) of an object\n     * <b>Backwards incompatibility note:</b> This method was named \"setGradientFill\" until v1.1.0\n     * @param {String} property Property name 'stroke' or 'fill'\n     * @param {Object} [options] Options object\n     * @param {String} [options.type] Type of gradient 'radial' or 'linear'\n     * @param {Number} [options.x1=0] x-coordinate of start point\n     * @param {Number} [options.y1=0] y-coordinate of start point\n     * @param {Number} [options.x2=0] x-coordinate of end point\n     * @param {Number} [options.y2=0] y-coordinate of end point\n     * @param {Number} [options.r1=0] Radius of start point (only for radial gradients)\n     * @param {Number} [options.r2=0] Radius of end point (only for radial gradients)\n     * @param {Object} [options.colorStops] Color stops object eg. {0: 'ff0000', 1: '000000'}\n     * @param {Object} [options.gradientTransform] transforMatrix for gradient\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/58y8b/|jsFiddle demo}\n     * @example <caption>Set linear gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'linear',\n     *   x1: -object.width / 2,\n     *   y1: 0,\n     *   x2: object.width / 2,\n     *   y2: 0,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     * @example <caption>Set radial gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'radial',\n     *   x1: 0,\n     *   y1: 0,\n     *   x2: 0,\n     *   y2: 0,\n     *   r1: object.width / 2,\n     *   r2: 10,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     */\n    setGradient: function(property, options) {\n      options || (options = { });\n\n      var gradient = { colorStops: [] };\n\n      gradient.type = options.type || (options.r1 || options.r2 ? 'radial' : 'linear');\n      gradient.coords = {\n        x1: options.x1,\n        y1: options.y1,\n        x2: options.x2,\n        y2: options.y2\n      };\n\n      if (options.r1 || options.r2) {\n        gradient.coords.r1 = options.r1;\n        gradient.coords.r2 = options.r2;\n      }\n\n      gradient.gradientTransform = options.gradientTransform;\n      fabric.Gradient.prototype.addColorStop.call(gradient, options.colorStops);\n\n      return this.set(property, fabric.Gradient.forObject(this, gradient));\n    },\n\n    /**\n     * Sets pattern fill of an object\n     * @param {Object} options Options object\n     * @param {(String|HTMLImageElement)} options.source Pattern source\n     * @param {String} [options.repeat=repeat] Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @param {Number} [options.offsetX=0] Pattern horizontal offset from object's left/top corner\n     * @param {Number} [options.offsetY=0] Pattern vertical offset from object's left/top corner\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/QT3pa/|jsFiddle demo}\n     * @example <caption>Set pattern</caption>\n     * fabric.util.loadImage('http://fabricjs.com/assets/escheresque_ste.png', function(img) {\n     *   object.setPatternFill({\n     *     source: img,\n     *     repeat: 'repeat'\n     *   });\n     *   canvas.renderAll();\n     * });\n     */\n    setPatternFill: function(options) {\n      return this.set('fill', new fabric.Pattern(options));\n    },\n\n    /**\n     * Sets {@link fabric.Object#shadow|shadow} of an object\n     * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n     * @param {String} [options.color=rgb(0,0,0)] Shadow color\n     * @param {Number} [options.blur=0] Shadow blur\n     * @param {Number} [options.offsetX=0] Shadow horizontal offset\n     * @param {Number} [options.offsetY=0] Shadow vertical offset\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/7gvJG/|jsFiddle demo}\n     * @example <caption>Set shadow with string notation</caption>\n     * object.setShadow('2px 2px 10px rgba(0,0,0,0.2)');\n     * canvas.renderAll();\n     * @example <caption>Set shadow with object notation</caption>\n     * object.setShadow({\n     *   color: 'red',\n     *   blur: 10,\n     *   offsetX: 20,\n     *   offsetY: 20\n     * });\n     * canvas.renderAll();\n     */\n    setShadow: function(options) {\n      return this.set('shadow', options ? new fabric.Shadow(options) : null);\n    },\n\n    /**\n     * Sets \"color\" of an instance (alias of `set('fill', &hellip;)`)\n     * @param {String} color Color value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setColor: function(color) {\n      this.set('fill', color);\n      return this;\n    },\n\n    /**\n     * Sets \"angle\" of an instance with centered rotation\n     * @param {Number} angle Angle value (in degrees)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    rotate: function(angle) {\n      var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;\n\n      if (shouldCenterOrigin) {\n        this._setOriginToCenter();\n      }\n\n      this.set('angle', angle);\n\n      if (shouldCenterOrigin) {\n        this._resetOrigin();\n      }\n\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerH: function () {\n      this.canvas && this.canvas.centerObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterH: function () {\n      this.canvas && this.canvas.viewportCenterObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerV: function () {\n      this.canvas && this.canvas.centerObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterV: function () {\n      this.canvas && this.canvas.viewportCenterObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically and horizontally on canvas to which is was added last\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    center: function () {\n      this.canvas && this.canvas.centerObject(this);\n      return this;\n    },\n\n    /**\n     * Centers object on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenter: function () {\n      this.canvas && this.canvas.viewportCenterObject(this);\n      return this;\n    },\n\n    /**\n     * Returns coordinates of a pointer relative to an object\n     * @param {Event} e Event to operate upon\n     * @param {Object} [pointer] Pointer to operate upon (instead of event)\n     * @return {Object} Coordinates of a pointer (x, y)\n     */\n    getLocalPointer: function(e, pointer) {\n      pointer = pointer || this.canvas.getPointer(e);\n      var pClicked = new fabric.Point(pointer.x, pointer.y),\n          objectLeftTop = this._getLeftTopCoords();\n      if (this.angle) {\n        pClicked = fabric.util.rotatePoint(\n          pClicked, objectLeftTop, degreesToRadians(-this.angle));\n      }\n      return {\n        x: pClicked.x - objectLeftTop.x,\n        y: pClicked.y - objectLeftTop.y\n      };\n    },\n\n    /**\n     * Sets canvas globalCompositeOperation for specific object\n     * custom composition operation for the particular object can be specifed using globalCompositeOperation property\n     * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n     */\n    _setupCompositeOperation: function (ctx) {\n      if (this.globalCompositeOperation) {\n        ctx.globalCompositeOperation = this.globalCompositeOperation;\n      }\n    }\n  });\n\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Object);\n\n  extend(fabric.Object.prototype, fabric.Observable);\n\n  /**\n   * Defines the number of fraction digits to use when serializing object values.\n   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n   * @static\n   * @memberOf fabric.Object\n   * @constant\n   * @type Number\n   */\n  fabric.Object.NUM_FRACTION_DIGITS = 2;\n\n  fabric.Object._fromObject = function(className, object, callback, extraParam) {\n    var klass = fabric[className];\n    object = clone(object, true);\n    fabric.util.enlivenPatterns([object.fill, object.stroke], function(patterns) {\n      if (typeof patterns[0] !== 'undefined') {\n        object.fill = patterns[0];\n      }\n      if (typeof patterns[1] !== 'undefined') {\n        object.stroke = patterns[1];\n      }\n      var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\n      callback && callback(instance);\n    });\n  };\n\n  /**\n   * Unique id used internally when creating SVG elements\n   * @static\n   * @memberOf fabric.Object\n   * @type Number\n   */\n  fabric.Object.__uid = 0;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      originXOffset = {\n        left: -0.5,\n        center: 0,\n        right: 0.5\n      },\n      originYOffset = {\n        top: -0.5,\n        center: 0,\n        bottom: 0.5\n      };\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Translates the coordinates from a set of origin to another (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToGivenOrigin: function(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\n      var x = point.x,\n          y = point.y,\n          offsetX, offsetY, dim;\n\n      if (typeof fromOriginX === 'string') {\n        fromOriginX = originXOffset[fromOriginX];\n      }\n      else {\n        fromOriginX -= 0.5;\n      }\n\n      if (typeof toOriginX === 'string') {\n        toOriginX = originXOffset[toOriginX];\n      }\n      else {\n        toOriginX -= 0.5;\n      }\n\n      offsetX = toOriginX - fromOriginX;\n\n      if (typeof fromOriginY === 'string') {\n        fromOriginY = originYOffset[fromOriginY];\n      }\n      else {\n        fromOriginY -= 0.5;\n      }\n\n      if (typeof toOriginY === 'string') {\n        toOriginY = originYOffset[toOriginY];\n      }\n      else {\n        toOriginY -= 0.5;\n      }\n\n      offsetY = toOriginY - fromOriginY;\n\n      if (offsetX || offsetY) {\n        dim = this._getTransformedDimensions();\n        x = point.x + offsetX * dim.x;\n        y = point.y + offsetY * dim.y;\n      }\n\n      return new fabric.Point(x, y);\n    },\n\n    /**\n     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToCenterPoint: function(point, originX, originY) {\n      var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n     * @param {fabric.Point} center The point which corresponds to center of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToOriginPoint: function(center, originX, originY) {\n      var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\n      }\n      return p;\n    },\n\n    /**\n     * Returns the real center coordinates of the object\n     * @return {fabric.Point}\n     */\n    getCenterPoint: function() {\n      var leftTop = new fabric.Point(this.left, this.top);\n      return this.translateToCenterPoint(leftTop, this.originX, this.originY);\n    },\n\n    /**\n     * Returns the coordinates of the object based on center coordinates\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @return {fabric.Point}\n     */\n    // getOriginPoint: function(center) {\n    //   return this.translateToOriginPoint(center, this.originX, this.originY);\n    // },\n\n    /**\n     * Returns the coordinates of the object as if it has a different origin\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    getPointByOrigin: function(originX, originY) {\n      var center = this.getCenterPoint();\n      return this.translateToOriginPoint(center, originX, originY);\n    },\n\n    /**\n     * Returns the point in local coordinates\n     * @param {fabric.Point} point The point relative to the global coordinate system\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    toLocalPoint: function(point, originX, originY) {\n      var center = this.getCenterPoint(),\n          p, p2;\n\n      if (typeof originX !== 'undefined' && typeof originY !== 'undefined' ) {\n        p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      }\n      else {\n        p = new fabric.Point(this.left, this.top);\n      }\n\n      p2 = new fabric.Point(point.x, point.y);\n      if (this.angle) {\n        p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\n      }\n      return p2.subtractEquals(p);\n    },\n\n    /**\n     * Returns the point in global coordinates\n     * @param {fabric.Point} The point relative to the local coordinate system\n     * @return {fabric.Point}\n     */\n    // toGlobalPoint: function(point) {\n    //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));\n    // },\n\n    /**\n     * Sets the position of the object taking into consideration the object's origin\n     * @param {fabric.Point} pos The new position of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {void}\n     */\n    setPositionByOrigin: function(pos, originX, originY) {\n      var center = this.translateToCenterPoint(pos, originX, originY),\n          position = this.translateToOriginPoint(center, this.originX, this.originY);\n      this.set('left', position.x);\n      this.set('top', position.y);\n    },\n\n    /**\n     * @param {String} to One of 'left', 'center', 'right'\n     */\n    adjustPosition: function(to) {\n      var angle = degreesToRadians(this.angle),\n          hypotFull = this.getScaledWidth(),\n          xFull = fabric.util.cos(angle) * hypotFull,\n          yFull = fabric.util.sin(angle) * hypotFull,\n          offsetFrom, offsetTo;\n\n      //TODO: this function does not consider mixed situation like top, center.\n      if (typeof this.originX === 'string') {\n        offsetFrom = originXOffset[this.originX];\n      }\n      else {\n        offsetFrom = this.originX - 0.5;\n      }\n      if (typeof to === 'string') {\n        offsetTo = originXOffset[to];\n      }\n      else {\n        offsetTo = to - 0.5;\n      }\n      this.left += xFull * (offsetTo - offsetFrom);\n      this.top += yFull * (offsetTo - offsetFrom);\n      this.setCoords();\n      this.originX = to;\n    },\n\n    /**\n     * Sets the origin/position of the object to it's center point\n     * @private\n     * @return {void}\n     */\n    _setOriginToCenter: function() {\n      this._originalOriginX = this.originX;\n      this._originalOriginY = this.originY;\n\n      var center = this.getCenterPoint();\n\n      this.originX = 'center';\n      this.originY = 'center';\n\n      this.left = center.x;\n      this.top = center.y;\n    },\n\n    /**\n     * Resets the origin/position of the object to it's original origin\n     * @private\n     * @return {void}\n     */\n    _resetOrigin: function() {\n      var originPoint = this.translateToOriginPoint(\n        this.getCenterPoint(),\n        this._originalOriginX,\n        this._originalOriginY);\n\n      this.originX = this._originalOriginX;\n      this.originY = this._originalOriginY;\n\n      this.left = originPoint.x;\n      this.top = originPoint.y;\n\n      this._originalOriginX = null;\n      this._originalOriginY = null;\n    },\n\n    /**\n     * @private\n     */\n    _getLeftTopCoords: function() {\n      return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');\n    },\n  });\n\n})();\n\n\n(function() {\n\n  function getCoords(coords) {\n    return [\n      new fabric.Point(coords.tl.x, coords.tl.y),\n      new fabric.Point(coords.tr.x, coords.tr.y),\n      new fabric.Point(coords.br.x, coords.br.y),\n      new fabric.Point(coords.bl.x, coords.bl.y)\n    ];\n  }\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      multiplyMatrices = fabric.util.multiplyTransformMatrices,\n      transformPoint = fabric.util.transformPoint;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Describe object's corner position in canvas element coordinates.\n     * properties are tl,mt,tr,ml,mr,bl,mb,br,mtr for the main controls.\n     * each property is an object with x, y and corner.\n     * The `corner` property contains in a similar manner the 4 points of the\n     * interactive area of the corner.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, viewportTransform, top, left, padding.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords;\n     * @memberOf fabric.Object.prototype\n     */\n    oCoords: null,\n\n    /**\n     * Describe object's corner position in canvas object absolute coordinates\n     * properties are tl,tr,bl,br and describe the four main corner.\n     * each property is an object with x, y, instance of Fabric.Point.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, top, left.\n     * Those coordinates are usefull to understand where an object is. They get updated\n     * with oCoords but they do not need to be updated when zoom or panning change.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords(true);\n     * @memberOf fabric.Object.prototype\n     */\n    aCoords: null,\n\n    /**\n     * storage for object transform matrix\n     */\n    ownMatrixCache: null,\n\n    /**\n     * storage for object full transform matrix\n     */\n    matrixCache: null,\n\n    /**\n     * return correct set of coordinates for intersection\n     */\n    getCoords: function(absolute, calculate) {\n      if (!this.oCoords) {\n        this.setCoords();\n      }\n      var coords = absolute ? this.aCoords : this.oCoords;\n      return getCoords(calculate ? this.calcCoords(absolute) : coords);\n    },\n\n    /**\n     * Checks if object intersects with an area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with an area formed by 2 points\n     */\n    intersectsWithRect: function(pointTL, pointBR, absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate),\n          intersection = fabric.Intersection.intersectPolygonRectangle(\n            coords,\n            pointTL,\n            pointBR\n          );\n      return intersection.status === 'Intersection';\n    },\n\n    /**\n     * Checks if object intersects with another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with another object\n     */\n    intersectsWithObject: function(other, absolute, calculate) {\n      var intersection = fabric.Intersection.intersectPolygonPolygon(\n        this.getCoords(absolute, calculate),\n        other.getCoords(absolute, calculate)\n      );\n\n      return intersection.status === 'Intersection'\n        || other.isContainedWithinObject(this, absolute, calculate)\n        || this.isContainedWithinObject(other, absolute, calculate);\n    },\n\n    /**\n     * Checks if object is fully contained within area of another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area of another object\n     */\n    isContainedWithinObject: function(other, absolute, calculate) {\n      var points = this.getCoords(absolute, calculate),\n          i = 0, lines = other._getImageLines(\n            calculate ? other.calcCoords(absolute) : absolute ? other.aCoords : other.oCoords\n          );\n      for (; i < 4; i++) {\n        if (!other.containsPoint(points[i], lines)) {\n          return false;\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Checks if object is fully contained within area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area formed by 2 points\n     */\n    isContainedWithinRect: function(pointTL, pointBR, absolute, calculate) {\n      var boundingRect = this.getBoundingRect(absolute, calculate);\n\n      return (\n        boundingRect.left >= pointTL.x &&\n        boundingRect.left + boundingRect.width <= pointBR.x &&\n        boundingRect.top >= pointTL.y &&\n        boundingRect.top + boundingRect.height <= pointBR.y\n      );\n    },\n\n    /**\n     * Checks if point is inside the object\n     * @param {fabric.Point} point Point to check against\n     * @param {Object} [lines] object returned from @method _getImageLines\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if point is inside the object\n     */\n    containsPoint: function(point, lines, absolute, calculate) {\n      var lines = lines || this._getImageLines(\n            calculate ? this.calcCoords(absolute) : absolute ? this.aCoords : this.oCoords\n          ),\n          xPoints = this._findCrossPoints(point, lines);\n\n      // if xPoints is odd then point is inside the object\n      return (xPoints !== 0 && xPoints % 2 === 1);\n    },\n\n    /**\n     * Checks if object is contained within the canvas with current viewportTransform\n     * the check is done stopping at first point that appears on screen\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully or partially contained within canvas\n     */\n    isOnScreen: function(calculate) {\n      if (!this.canvas) {\n        return false;\n      }\n      var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\n      var points = this.getCoords(true, calculate), point;\n      for (var i = 0; i < 4; i++) {\n        point = points[i];\n        if (point.x <= pointBR.x && point.x >= pointTL.x && point.y <= pointBR.y && point.y >= pointTL.y) {\n          return true;\n        }\n      }\n      // no points on screen, check intersection with absolute coordinates\n      if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\n        return true;\n      }\n      return this._containsCenterOfCanvas(pointTL, pointBR, calculate);\n    },\n\n    /**\n     * Checks if the object contains the midpoint between canvas extremities\n     * Does not make sense outside the context of isOnScreen and isPartiallyOnScreen\n     * @private\n     * @param {Fabric.Point} pointTL Top Left point\n     * @param {Fabric.Point} pointBR Top Right point\n     * @param {Boolean} calculate use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if the objects containe the point\n     */\n    _containsCenterOfCanvas: function(pointTL, pointBR, calculate) {\n      // worst case scenario the object is so big that contains the screen\n      var centerPoint = { x: (pointTL.x + pointBR.x) / 2, y: (pointTL.y + pointBR.y) / 2 };\n      if (this.containsPoint(centerPoint, null, true, calculate)) {\n        return true;\n      }\n      return false;\n    },\n\n    /**\n     * Checks if object is partially contained within the canvas with current viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is partially contained within canvas\n     */\n    isPartiallyOnScreen: function(calculate) {\n      if (!this.canvas) {\n        return false;\n      }\n      var pointTL = this.canvas.vptCoords.tl, pointBR = this.canvas.vptCoords.br;\n      if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\n        return true;\n      }\n      return this._containsCenterOfCanvas(pointTL, pointBR, calculate);\n    },\n\n    /**\n     * Method that returns an object with the object edges in it, given the coordinates of the corners\n     * @private\n     * @param {Object} oCoords Coordinates of the object corners\n     */\n    _getImageLines: function(oCoords) {\n      return {\n        topline: {\n          o: oCoords.tl,\n          d: oCoords.tr\n        },\n        rightline: {\n          o: oCoords.tr,\n          d: oCoords.br\n        },\n        bottomline: {\n          o: oCoords.br,\n          d: oCoords.bl\n        },\n        leftline: {\n          o: oCoords.bl,\n          d: oCoords.tl\n        }\n      };\n    },\n\n    /**\n     * Helper method to determine how many cross points are between the 4 object edges\n     * and the horizontal line determined by a point on canvas\n     * @private\n     * @param {fabric.Point} point Point to check\n     * @param {Object} lines Coordinates of the object being evaluated\n     */\n    // remove yi, not used but left code here just in case.\n    _findCrossPoints: function(point, lines) {\n      var b1, b2, a1, a2, xi, // yi,\n          xcount = 0,\n          iLine;\n\n      for (var lineKey in lines) {\n        iLine = lines[lineKey];\n        // optimisation 1: line below point. no cross\n        if ((iLine.o.y < point.y) && (iLine.d.y < point.y)) {\n          continue;\n        }\n        // optimisation 2: line above point. no cross\n        if ((iLine.o.y >= point.y) && (iLine.d.y >= point.y)) {\n          continue;\n        }\n        // optimisation 3: vertical line case\n        if ((iLine.o.x === iLine.d.x) && (iLine.o.x >= point.x)) {\n          xi = iLine.o.x;\n          // yi = point.y;\n        }\n        // calculate the intersection point\n        else {\n          b1 = 0;\n          b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\n          a1 = point.y - b1 * point.x;\n          a2 = iLine.o.y - b2 * iLine.o.x;\n\n          xi = -(a1 - a2) / (b1 - b2);\n          // yi = a1 + b1 * xi;\n        }\n        // dont count xi < point.x cases\n        if (xi >= point.x) {\n          xcount += 1;\n        }\n        // optimisation 4: specific for square images\n        if (xcount === 2) {\n          break;\n        }\n      }\n      return xcount;\n    },\n\n    /**\n     * Returns coordinates of object's bounding rectangle (left, top, width, height)\n     * the box is intented as aligned to axis of canvas.\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords / .aCoords\n     * @return {Object} Object with left, top, width, height properties\n     */\n    getBoundingRect: function(absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate);\n      return fabric.util.makeBoundingBoxFromPoints(coords);\n    },\n\n    /**\n     * Returns width of an object bounding box counting transformations\n     * before 2.0 it was named getWidth();\n     * @return {Number} width value\n     */\n    getScaledWidth: function() {\n      return this._getTransformedDimensions().x;\n    },\n\n    /**\n     * Returns height of an object bounding box counting transformations\n     * before 2.0 it was named getHeight();\n     * @return {Number} height value\n     */\n    getScaledHeight: function() {\n      return this._getTransformedDimensions().y;\n    },\n\n    /**\n     * Makes sure the scale is valid and modifies it if necessary\n     * @private\n     * @param {Number} value\n     * @return {Number}\n     */\n    _constrainScale: function(value) {\n      if (Math.abs(value) < this.minScaleLimit) {\n        if (value < 0) {\n          return -this.minScaleLimit;\n        }\n        else {\n          return this.minScaleLimit;\n        }\n      }\n      else if (value === 0) {\n        return 0.0001;\n      }\n      return value;\n    },\n\n    /**\n     * Scales an object (equally by x and y)\n     * @param {Number} value Scale factor\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scale: function(value) {\n      this._set('scaleX', value);\n      this._set('scaleY', value);\n      return this.setCoords();\n    },\n\n    /**\n     * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New width value\n     * @param {Boolean} absolute ignore viewport\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToWidth: function(value, absolute) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect(absolute).width / this.getScaledWidth();\n      return this.scale(value / this.width / boundingRectFactor);\n    },\n\n    /**\n     * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New height value\n     * @param {Boolean} absolute ignore viewport\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToHeight: function(value, absolute) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect(absolute).height / this.getScaledHeight();\n      return this.scale(value / this.height / boundingRectFactor);\n    },\n\n    /**\n     * Calculate and returns the .coords of an object.\n     * @return {Object} Object with tl, tr, br, bl ....\n     * @chainable\n     */\n    calcCoords: function(absolute) {\n      var rotateMatrix = this._calcRotateMatrix(),\n          translateMatrix = this._calcTranslateMatrix(),\n          startMatrix = multiplyMatrices(translateMatrix, rotateMatrix),\n          vpt = this.getViewportTransform(),\n          finalMatrix = absolute ? startMatrix : multiplyMatrices(vpt, startMatrix),\n          dim = this._getTransformedDimensions(),\n          w = dim.x / 2, h = dim.y / 2,\n          tl = transformPoint({ x: -w, y: -h }, finalMatrix),\n          tr = transformPoint({ x: w, y: -h }, finalMatrix),\n          bl = transformPoint({ x: -w, y: h }, finalMatrix),\n          br = transformPoint({ x: w, y: h }, finalMatrix);\n      if (!absolute) {\n        var padding = this.padding, angle = degreesToRadians(this.angle),\n            cos = fabric.util.cos(angle), sin = fabric.util.sin(angle),\n            cosP = cos * padding, sinP = sin * padding, cosPSinP = cosP + sinP,\n            cosPMinusSinP = cosP - sinP;\n        if (padding) {\n          tl.x -= cosPMinusSinP;\n          tl.y -= cosPSinP;\n          tr.x += cosPSinP;\n          tr.y -= cosPMinusSinP;\n          bl.x -= cosPSinP;\n          bl.y += cosPMinusSinP;\n          br.x += cosPMinusSinP;\n          br.y += cosPSinP;\n        }\n        var ml  = new fabric.Point((tl.x + bl.x) / 2, (tl.y + bl.y) / 2),\n            mt  = new fabric.Point((tr.x + tl.x) / 2, (tr.y + tl.y) / 2),\n            mr  = new fabric.Point((br.x + tr.x) / 2, (br.y + tr.y) / 2),\n            mb  = new fabric.Point((br.x + bl.x) / 2, (br.y + bl.y) / 2),\n            mtr = new fabric.Point(mt.x + sin * this.rotatingPointOffset, mt.y - cos * this.rotatingPointOffset);\n      }\n\n      // if (!absolute) {\n      //   var canvas = this.canvas;\n      //   setTimeout(function() {\n      //     canvas.contextTop.clearRect(0, 0, 700, 700);\n      //     canvas.contextTop.fillStyle = 'green';\n      //     canvas.contextTop.fillRect(mb.x, mb.y, 3, 3);\n      //     canvas.contextTop.fillRect(bl.x, bl.y, 3, 3);\n      //     canvas.contextTop.fillRect(br.x, br.y, 3, 3);\n      //     canvas.contextTop.fillRect(tl.x, tl.y, 3, 3);\n      //     canvas.contextTop.fillRect(tr.x, tr.y, 3, 3);\n      //     canvas.contextTop.fillRect(ml.x, ml.y, 3, 3);\n      //     canvas.contextTop.fillRect(mr.x, mr.y, 3, 3);\n      //     canvas.contextTop.fillRect(mt.x, mt.y, 3, 3);\n      //     canvas.contextTop.fillRect(mtr.x, mtr.y, 3, 3);\n      //   }, 50);\n      // }\n\n      var coords = {\n        // corners\n        tl: tl, tr: tr, br: br, bl: bl,\n      };\n      if (!absolute) {\n        // middle\n        coords.ml = ml;\n        coords.mt = mt;\n        coords.mr = mr;\n        coords.mb = mb;\n        // rotating point\n        coords.mtr = mtr;\n      }\n      return coords;\n    },\n\n    /**\n     * Sets corner position coordinates based on current angle, width and height\n     * See https://github.com/kangax/fabric.js/wiki/When-to-call-setCoords\n     * @param {Boolean} [ignoreZoom] set oCoords with or without the viewport transform.\n     * @param {Boolean} [skipAbsolute] skip calculation of aCoords, usefull in setViewportTransform\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setCoords: function(ignoreZoom, skipAbsolute) {\n      this.oCoords = this.calcCoords(ignoreZoom);\n      if (!skipAbsolute) {\n        this.aCoords = this.calcCoords(true);\n      }\n\n      // set coordinates of the draggable boxes in the corners used to scale/rotate the image\n      ignoreZoom || (this._setCornerCoords && this._setCornerCoords());\n\n      return this;\n    },\n\n    /**\n     * calculate rotation matrix of an object\n     * @return {Array} rotation matrix for the object\n     */\n    _calcRotateMatrix: function() {\n      if (this.angle) {\n        var theta = degreesToRadians(this.angle), cos = fabric.util.cos(theta), sin = fabric.util.sin(theta);\n        return [cos, sin, -sin, cos, 0, 0];\n      }\n      return fabric.iMatrix.concat();\n    },\n\n    /**\n     * calculate the translation matrix for an object transform\n     * @return {Array} rotation matrix for the object\n     */\n    _calcTranslateMatrix: function() {\n      var center = this.getCenterPoint();\n      return [1, 0, 0, 1, center.x, center.y];\n    },\n\n    transformMatrixKey: function(skipGroup) {\n      var sep = '_', prefix = '';\n      if (!skipGroup && this.group) {\n        prefix = this.group.transformMatrixKey(skipGroup) + sep;\n      };\n      return prefix + this.top + sep + this.left + sep + this.scaleX + sep + this.scaleY +\n        sep + this.skewX + sep + this.skewY + sep + this.angle + sep + this.originX + sep + this.originY +\n        sep + this.width + sep + this.height + sep + this.strokeWidth + this.flipX + this.flipY;\n    },\n\n    /**\n     * calculate trasform Matrix that represent current transformation from\n     * object properties.\n     * @param {Boolean} [skipGroup] return transformMatrix for object and not go upward with parents\n     * @return {Array} matrix Transform Matrix for the object\n     */\n    calcTransformMatrix: function(skipGroup) {\n      if (skipGroup) {\n        return this.calcOwnMatrix();\n      }\n      var key = this.transformMatrixKey(), cache = this.matrixCache || (this.matrixCache = {});\n      if (cache.key === key) {\n        return cache.value;\n      }\n      var matrix = this.calcOwnMatrix();\n      if (this.group) {\n        matrix = multiplyMatrices(this.group.calcTransformMatrix(), matrix);\n      }\n      cache.key = key;\n      cache.value = matrix;\n      return matrix;\n    },\n\n    calcOwnMatrix: function() {\n      var key = this.transformMatrixKey(true), cache = this.ownMatrixCache || (this.ownMatrixCache = {});\n      if (cache.key === key) {\n        return cache.value;\n      }\n      var matrix = this._calcTranslateMatrix(),\n          rotateMatrix,\n          dimensionMatrix = this._calcDimensionsTransformMatrix(this.skewX, this.skewY, true);\n      if (this.angle) {\n        rotateMatrix = this._calcRotateMatrix();\n        matrix = multiplyMatrices(matrix, rotateMatrix);\n      }\n      matrix = multiplyMatrices(matrix, dimensionMatrix);\n      cache.key = key;\n      cache.value = matrix;\n      return matrix;\n    },\n\n    _calcDimensionsTransformMatrix: function(skewX, skewY, flipping) {\n      var skewMatrix,\n          scaleX = this.scaleX * (flipping && this.flipX ? -1 : 1),\n          scaleY = this.scaleY * (flipping && this.flipY ? -1 : 1),\n          scaleMatrix = [scaleX, 0, 0, scaleY, 0, 0];\n      if (skewX) {\n        skewMatrix = [1, 0, Math.tan(degreesToRadians(skewX)), 1];\n        scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n      }\n      if (skewY) {\n        skewMatrix = [1, Math.tan(degreesToRadians(skewY)), 0, 1];\n        scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n      }\n      return scaleMatrix;\n    },\n\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getNonTransformedDimensions: function() {\n      var strokeWidth = this.strokeWidth,\n          w = this.width + strokeWidth,\n          h = this.height + strokeWidth;\n      return { x: w, y: h };\n    },\n\n    /*\n     * Calculate object bounding boxdimensions from its properties scale, skew.\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getTransformedDimensions: function(skewX, skewY) {\n      if (typeof skewX === 'undefined') {\n        skewX = this.skewX;\n      }\n      if (typeof skewY === 'undefined') {\n        skewY = this.skewY;\n      }\n      var dimensions = this._getNonTransformedDimensions();\n      if (skewX === 0 && skewY === 0) {\n        return { x: dimensions.x * this.scaleX, y: dimensions.y * this.scaleY };\n      }\n      var dimX = dimensions.x / 2, dimY = dimensions.y / 2,\n          points = [\n            {\n              x: -dimX,\n              y: -dimY\n            },\n            {\n              x: dimX,\n              y: -dimY\n            },\n            {\n              x: -dimX,\n              y: dimY\n            },\n            {\n              x: dimX,\n              y: dimY\n            }],\n          i, transformMatrix = this._calcDimensionsTransformMatrix(skewX, skewY, false),\n          bbox;\n      for (i = 0; i < points.length; i++) {\n        points[i] = fabric.util.transformPoint(points[i], transformMatrix);\n      }\n      bbox = fabric.util.makeBoundingBoxFromPoints(points);\n      return { x: bbox.width, y: bbox.height };\n    },\n\n    /*\n     * Calculate object dimensions for controls. include padding and canvas zoom\n     * private\n     */\n    _calculateCurrentDimensions: function()  {\n      var vpt = this.getViewportTransform(),\n          dim = this._getTransformedDimensions(),\n          p = fabric.util.transformPoint(dim, vpt, true);\n\n      return p.scalarAdd(2 * this.padding);\n    },\n  });\n})();\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * Moves an object to the bottom of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendToBack: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\n    }\n    else {\n      this.canvas.sendToBack(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to the top of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringToFront: function() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\n    }\n    else {\n      this.canvas.bringToFront(this);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object down in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendBackwards: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.sendBackwards(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object up in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringForward: function(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\n    }\n    else {\n      this.canvas.bringForward(this, intersecting);\n    }\n    return this;\n  },\n\n  /**\n   * Moves an object to specified level in stack of drawn objects\n   * @param {Number} index New position of object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  moveTo: function(index) {\n    if (this.group && this.group.type !== 'activeSelection') {\n      fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\n    }\n    else {\n      this.canvas.moveTo(this, index);\n    }\n    return this;\n  }\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  function getSvgColorString(prop, value) {\n    if (!value) {\n      return prop + ': none; ';\n    }\n    else if (value.toLive) {\n      return prop + ': url(#SVGID_' + value.id + '); ';\n    }\n    else {\n      var color = new fabric.Color(value),\n          str = prop + ': ' + color.toRgb() + '; ',\n          opacity = color.getAlpha();\n      if (opacity !== 1) {\n        //change the color in rgb + opacity\n        str += prop + '-opacity: ' + opacity.toString() + '; ';\n      }\n      return str;\n    }\n  }\n\n  var toFixed = fabric.util.toFixed;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function(skipShadow) {\n\n      var fillRule = this.fillRule,\n          strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n          strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',\n          strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n          strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n          strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n          opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n          visibility = this.visible ? '' : ' visibility: hidden;',\n          filter = skipShadow ? '' : this.getSvgFilter(),\n          fill = getSvgColorString('fill', this.fill),\n          stroke = getSvgColorString('stroke', this.stroke);\n\n      return [\n        stroke,\n        'stroke-width: ', strokeWidth, '; ',\n        'stroke-dasharray: ', strokeDashArray, '; ',\n        'stroke-linecap: ', strokeLineCap, '; ',\n        'stroke-linejoin: ', strokeLineJoin, '; ',\n        'stroke-miterlimit: ', strokeMiterLimit, '; ',\n        fill,\n        'fill-rule: ', fillRule, '; ',\n        'opacity: ', opacity, ';',\n        filter,\n        visibility\n      ].join('');\n    },\n\n    /**\n     * Returns styles-string for svg-export\n     * @param {Object} style the object from which to retrieve style properties\n     * @param {Boolean} useWhiteSpace a boolean to include an additional attribute in the style.\n     * @return {String}\n     */\n    getSvgSpanStyles: function(style, useWhiteSpace) {\n      var term = '; ';\n      var fontFamily = style.fontFamily ?\n        'font-family: ' + (((style.fontFamily.indexOf('\\'') === -1 && style.fontFamily.indexOf('\"') === -1) ?\n          '\\'' + style.fontFamily  + '\\'' : style.fontFamily)) + term : '';\n      var strokeWidth = style.strokeWidth ? 'stroke-width: ' + style.strokeWidth + term : '',\n          fontFamily = fontFamily,\n          fontSize = style.fontSize ? 'font-size: ' + style.fontSize + 'px' + term : '',\n          fontStyle = style.fontStyle ? 'font-style: ' + style.fontStyle + term : '',\n          fontWeight = style.fontWeight ? 'font-weight: ' + style.fontWeight + term : '',\n          fill = style.fill ? getSvgColorString('fill', style.fill) : '',\n          stroke = style.stroke ? getSvgColorString('stroke', style.stroke) : '',\n          textDecoration = this.getSvgTextDecoration(style),\n          deltaY = style.deltaY ? 'baseline-shift: ' + (-style.deltaY) + '; ' : '';\n      if (textDecoration) {\n        textDecoration = 'text-decoration: ' + textDecoration + term;\n      }\n\n      return [\n        stroke,\n        strokeWidth,\n        fontFamily,\n        fontSize,\n        fontStyle,\n        fontWeight,\n        textDecoration,\n        fill,\n        deltaY,\n        useWhiteSpace ? 'white-space: pre; ' : ''\n      ].join('');\n    },\n\n    /**\n     * Returns text-decoration property for svg-export\n     * @param {Object} style the object from which to retrieve style properties\n     * @return {String}\n     */\n    getSvgTextDecoration: function(style) {\n      if ('overline' in style || 'underline' in style || 'linethrough' in style) {\n        return (style.overline ? 'overline ' : '') +\n          (style.underline ? 'underline ' : '') + (style.linethrough ? 'line-through ' : '');\n      }\n      return '';\n    },\n\n    /**\n     * Returns filter for svg shadow\n     * @return {String}\n     */\n    getSvgFilter: function() {\n      return this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';\n    },\n\n    /**\n     * Returns id attribute for svg output\n     * @return {String}\n     */\n    getSvgId: function() {\n      return this.id ? 'id=\"' + this.id + '\" ' : '';\n    },\n\n    /**\n     * Returns transform-string for svg-export\n     * @return {String}\n     */\n    getSvgTransform: function() {\n      var angle = this.angle,\n          skewX = (this.skewX % 360),\n          skewY = (this.skewY % 360),\n          center = this.getCenterPoint(),\n\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n\n          translatePart = 'translate(' +\n                            toFixed(center.x, NUM_FRACTION_DIGITS) +\n                            ' ' +\n                            toFixed(center.y, NUM_FRACTION_DIGITS) +\n                          ')',\n\n          anglePart = angle !== 0\n            ? (' rotate(' + toFixed(angle, NUM_FRACTION_DIGITS) + ')')\n            : '',\n\n          scalePart = (this.scaleX === 1 && this.scaleY === 1)\n            ? '' :\n            (' scale(' +\n              toFixed(this.scaleX, NUM_FRACTION_DIGITS) +\n              ' ' +\n              toFixed(this.scaleY, NUM_FRACTION_DIGITS) +\n            ')'),\n\n          skewXPart = skewX !== 0 ? ' skewX(' + toFixed(skewX, NUM_FRACTION_DIGITS) + ')' : '',\n\n          skewYPart = skewY !== 0 ? ' skewY(' + toFixed(skewY, NUM_FRACTION_DIGITS) + ')' : '',\n\n          flipXPart = this.flipX ? ' matrix(-1 0 0 1 0 0) ' : '',\n\n          flipYPart = this.flipY ? ' matrix(1 0 0 -1 0 0)' : '';\n\n      return [\n        translatePart, anglePart, scalePart, flipXPart, flipYPart, skewXPart, skewYPart\n      ].join('');\n    },\n\n    /**\n     * Returns transform-string for svg-export from the transform matrix of single elements\n     * @return {String}\n     */\n    getSvgTransformMatrix: function() {\n      return this.transformMatrix ? ' matrix(' + this.transformMatrix.join(' ') + ') ' : '';\n    },\n\n    _setSVGBg: function(textBgRects) {\n      if (this.backgroundColor) {\n        var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n        textBgRects.push(\n          '\\t\\t<rect ',\n          this._getFillAttributes(this.backgroundColor),\n          ' x=\"',\n          toFixed(-this.width / 2, NUM_FRACTION_DIGITS),\n          '\" y=\"',\n          toFixed(-this.height / 2, NUM_FRACTION_DIGITS),\n          '\" width=\"',\n          toFixed(this.width, NUM_FRACTION_DIGITS),\n          '\" height=\"',\n          toFixed(this.height, NUM_FRACTION_DIGITS),\n          '\"></rect>\\n');\n      }\n    },\n\n    /**\n     * @private\n     */\n    _createBaseSVGMarkup: function() {\n      var markup = [];\n\n      if (this.fill && this.fill.toLive) {\n        markup.push(this.fill.toSVG(this, false));\n      }\n      if (this.stroke && this.stroke.toLive) {\n        markup.push(this.stroke.toSVG(this, false));\n      }\n      if (this.shadow) {\n        markup.push(this.shadow.toSVG(this));\n      }\n      return markup;\n    },\n\n    addPaintOrder: function() {\n      return this.paintFirst !== 'fill' ? ' paint-order=\"' + this.paintFirst + '\" ' : '';\n    }\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function() {\n\n  var extend = fabric.util.object.extend,\n      originalSet = 'stateProperties';\n\n  /*\n    Depends on `stateProperties`\n  */\n  function saveProps(origin, destination, props) {\n    var tmpObj = { }, deep = true;\n    props.forEach(function(prop) {\n      tmpObj[prop] = origin[prop];\n    });\n    extend(origin[destination], tmpObj, deep);\n  }\n\n  function _isEqual(origValue, currentValue, firstPass) {\n    if (origValue === currentValue) {\n      // if the objects are identical, return\n      return true;\n    }\n    else if (Array.isArray(origValue)) {\n      if (!Array.isArray(currentValue) || origValue.length !== currentValue.length) {\n        return false;\n      }\n      for (var i = 0, len = origValue.length; i < len; i++) {\n        if (!_isEqual(origValue[i], currentValue[i])) {\n          return false;\n        }\n      }\n      return true;\n    }\n    else if (origValue && typeof origValue === 'object') {\n      var keys = Object.keys(origValue), key;\n      if (!currentValue ||\n          typeof currentValue !== 'object' ||\n          (!firstPass && keys.length !== Object.keys(currentValue).length)\n      ) {\n        return false;\n      }\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i];\n        if (!_isEqual(origValue[key], currentValue[key])) {\n          return false;\n        }\n      }\n      return true;\n    }\n  }\n\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * Returns true if object state (one of its state properties) was changed\n     * @param {String} [propertySet] optional name for the set of property we want to save\n     * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called\n     */\n    hasStateChanged: function(propertySet) {\n      propertySet = propertySet || originalSet;\n      var dashedPropertySet = '_' + propertySet;\n      if (Object.keys(this[dashedPropertySet]).length < this[propertySet].length) {\n        return true;\n      }\n      return !_isEqual(this[dashedPropertySet], this, true);\n    },\n\n    /**\n     * Saves state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    saveState: function(options) {\n      var propertySet = options && options.propertySet || originalSet,\n          destination = '_' + propertySet;\n      if (!this[destination]) {\n        return this.setupState(options);\n      }\n      saveProps(this, destination, this[propertySet]);\n      if (options && options.stateProperties) {\n        saveProps(this, destination, options.stateProperties);\n      }\n      return this;\n    },\n\n    /**\n     * Setups state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    setupState: function(options) {\n      options = options || { };\n      var propertySet = options.propertySet || originalSet;\n      options.propertySet = propertySet;\n      this['_' + propertySet] = { };\n      this.saveState(options);\n      return this;\n    }\n  });\n})();\n\n\n(function() {\n\n  var degreesToRadians = fabric.util.degreesToRadians;\n\n  fabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n    /**\n     * The object interactivity controls.\n     * @private\n     */\n    _controlsVisibility: null,\n\n    /**\n     * Determines which corner has been clicked\n     * @private\n     * @param {Object} pointer The pointer indicating the mouse position\n     * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found\n     */\n    _findTargetCorner: function(pointer) {\n      // objects in group, anykind, are not self modificable,\n      // must not return an hovered corner.\n      if (!this.hasControls || this.group || (!this.canvas || this.canvas._activeObject !== this)) {\n        return false;\n      }\n\n      var ex = pointer.x,\n          ey = pointer.y,\n          xPoints,\n          lines;\n      this.__corner = 0;\n      for (var i in this.oCoords) {\n\n        if (!this.isControlVisible(i)) {\n          continue;\n        }\n\n        if (i === 'mtr' && !this.hasRotatingPoint) {\n          continue;\n        }\n\n        if (this.get('lockUniScaling') &&\n           (i === 'mt' || i === 'mr' || i === 'mb' || i === 'ml')) {\n          continue;\n        }\n\n        lines = this._getImageLines(this.oCoords[i].corner);\n\n        // debugging\n\n        // canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\n\n        // canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\n\n        xPoints = this._findCrossPoints({ x: ex, y: ey }, lines);\n        if (xPoints !== 0 && xPoints % 2 === 1) {\n          this.__corner = i;\n          return i;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Sets the coordinates of the draggable boxes in the corners of\n     * the image used to scale/rotate it.\n     * @private\n     */\n    _setCornerCoords: function() {\n      var coords = this.oCoords,\n          newTheta = degreesToRadians(45 - this.angle),\n          /* Math.sqrt(2 * Math.pow(this.cornerSize, 2)) / 2, */\n          /* 0.707106 stands for sqrt(2)/2 */\n          cornerHypotenuse = this.cornerSize * 0.707106,\n          cosHalfOffset = cornerHypotenuse * fabric.util.cos(newTheta),\n          sinHalfOffset = cornerHypotenuse * fabric.util.sin(newTheta),\n          x, y;\n\n      for (var point in coords) {\n        x = coords[point].x;\n        y = coords[point].y;\n        coords[point].corner = {\n          tl: {\n            x: x - sinHalfOffset,\n            y: y - cosHalfOffset\n          },\n          tr: {\n            x: x + cosHalfOffset,\n            y: y - sinHalfOffset\n          },\n          bl: {\n            x: x - cosHalfOffset,\n            y: y + sinHalfOffset\n          },\n          br: {\n            x: x + sinHalfOffset,\n            y: y + cosHalfOffset\n          }\n        };\n      }\n    },\n\n    /**\n     * Draws a colored layer behind the object, inside its selection borders.\n     * Requires public options: padding, selectionBackgroundColor\n     * this function is called when the context is transformed\n     * has checks to be skipped when the object is on a staticCanvas\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawSelectionBackground: function(ctx) {\n      if (!this.selectionBackgroundColor ||\n        (this.canvas && !this.canvas.interactive) ||\n        (this.canvas && this.canvas._activeObject !== this)\n      ) {\n        return this;\n      }\n      ctx.save();\n      var center = this.getCenterPoint(), wh = this._calculateCurrentDimensions(),\n          vpt = this.canvas.viewportTransform;\n      ctx.translate(center.x, center.y);\n      ctx.scale(1 / vpt[0], 1 / vpt[3]);\n      ctx.rotate(degreesToRadians(this.angle));\n      ctx.fillStyle = this.selectionBackgroundColor;\n      ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBorders: function(ctx, styleOverride) {\n      styleOverride = styleOverride || {};\n      var wh = this._calculateCurrentDimensions(),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth,\n          drawRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ?\n            styleOverride.hasRotatingPoint : this.hasRotatingPoint,\n          hasControls = typeof styleOverride.hasControls !== 'undefined' ?\n            styleOverride.hasControls : this.hasControls,\n          rotatingPointOffset = typeof styleOverride.rotatingPointOffset !== 'undefined' ?\n            styleOverride.rotatingPointOffset : this.rotatingPointOffset;\n\n      ctx.save();\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      if (drawRotatingPoint && this.isControlVisible('mtr') && hasControls) {\n\n        var rotateHeight = -height / 2;\n\n        ctx.beginPath();\n        ctx.moveTo(0, rotateHeight);\n        ctx.lineTo(0, rotateHeight - rotatingPointOffset);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box when it is inside a group.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {object} options object representing current object parameters\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBordersInGroup: function(ctx, options, styleOverride) {\n      styleOverride = styleOverride || {};\n      var p = this._getNonTransformedDimensions(),\n          matrix = fabric.util.customTransformMatrix(options.scaleX, options.scaleY, options.skewX),\n          wh = fabric.util.transformPoint(p, matrix),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth;\n\n      ctx.save();\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n\n      ctx.strokeRect(\n        -width / 2,\n        -height / 2,\n        width,\n        height\n      );\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws corners of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: cornerSize, padding\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawControls: function(ctx, styleOverride) {\n      styleOverride = styleOverride || {};\n      var wh = this._calculateCurrentDimensions(),\n          width = wh.x,\n          height = wh.y,\n          scaleOffset = styleOverride.cornerSize || this.cornerSize,\n          left = -(width + scaleOffset) / 2,\n          top = -(height + scaleOffset) / 2,\n          transparentCorners = typeof styleOverride.transparentCorners !== 'undefined' ?\n            styleOverride.transparentCorners : this.transparentCorners,\n          hasRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ?\n            styleOverride.hasRotatingPoint : this.hasRotatingPoint,\n          methodName = transparentCorners ? 'stroke' : 'fill';\n\n      ctx.save();\n      ctx.strokeStyle = ctx.fillStyle = styleOverride.cornerColor || this.cornerColor;\n      if (!this.transparentCorners) {\n        ctx.strokeStyle = styleOverride.cornerStrokeColor || this.cornerStrokeColor;\n      }\n      this._setLineDash(ctx, styleOverride.cornerDashArray || this.cornerDashArray, null);\n\n      // top-left\n      this._drawControl('tl', ctx, methodName,\n        left,\n        top, styleOverride);\n\n      // top-right\n      this._drawControl('tr', ctx, methodName,\n        left + width,\n        top, styleOverride);\n\n      // bottom-left\n      this._drawControl('bl', ctx, methodName,\n        left,\n        top + height, styleOverride);\n\n      // bottom-right\n      this._drawControl('br', ctx, methodName,\n        left + width,\n        top + height, styleOverride);\n\n      if (!this.get('lockUniScaling')) {\n\n        // middle-top\n        this._drawControl('mt', ctx, methodName,\n          left + width / 2,\n          top, styleOverride);\n\n        // middle-bottom\n        this._drawControl('mb', ctx, methodName,\n          left + width / 2,\n          top + height, styleOverride);\n\n        // middle-right\n        this._drawControl('mr', ctx, methodName,\n          left + width,\n          top + height / 2, styleOverride);\n\n        // middle-left\n        this._drawControl('ml', ctx, methodName,\n          left,\n          top + height / 2, styleOverride);\n      }\n\n      // middle-top-rotate\n      if (hasRotatingPoint) {\n        this._drawControl('mtr', ctx, methodName,\n          left + width / 2,\n          top - this.rotatingPointOffset, styleOverride);\n      }\n\n      ctx.restore();\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _drawControl: function(control, ctx, methodName, left, top, styleOverride) {\n      styleOverride = styleOverride || {};\n      if (!this.isControlVisible(control)) {\n        return;\n      }\n      var size = this.cornerSize, stroke = !this.transparentCorners && this.cornerStrokeColor;\n      switch (styleOverride.cornerStyle || this.cornerStyle) {\n        case 'circle':\n          ctx.beginPath();\n          ctx.arc(left + size / 2, top + size / 2, size / 2, 0, 2 * Math.PI, false);\n          ctx[methodName]();\n          if (stroke) {\n            ctx.stroke();\n          }\n          break;\n        default:\n          this.transparentCorners || ctx.clearRect(left, top, size, size);\n          ctx[methodName + 'Rect'](left, top, size, size);\n          if (stroke) {\n            ctx.strokeRect(left, top, size, size);\n          }\n      }\n    },\n\n    /**\n     * Returns true if the specified control is visible, false otherwise.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @returns {Boolean} true if the specified control is visible, false otherwise\n     */\n    isControlVisible: function(controlName) {\n      return this._getControlsVisibility()[controlName];\n    },\n\n    /**\n     * Sets the visibility of the specified control.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @param {Boolean} visible true to set the specified control visible, false otherwise\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlVisible: function(controlName, visible) {\n      this._getControlsVisibility()[controlName] = visible;\n      return this;\n    },\n\n    /**\n     * Sets the visibility state of object controls.\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n     * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it\n     * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it\n     * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it\n     * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it\n     * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it\n     * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it\n     * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it\n     * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlsVisibility: function(options) {\n      options || (options = { });\n\n      for (var p in options) {\n        this.setControlVisible(p, options[p]);\n      }\n      return this;\n    },\n\n    /**\n     * Returns the instance of the control visibility set for this object.\n     * @private\n     * @returns {Object}\n     */\n    _getControlsVisibility: function() {\n      if (!this._controlsVisibility) {\n        this._controlsVisibility = {\n          tl: true,\n          tr: true,\n          br: true,\n          bl: true,\n          ml: true,\n          mt: true,\n          mr: true,\n          mb: true,\n          mtr: true\n        };\n      }\n      return this._controlsVisibility;\n    },\n\n    /**\n     * This callback function is called every time _discardActiveObject or _setActiveObject\n     * try to to deselect this object. If the function returns true, the process is cancelled\n     * @param {Object} [options] options sent from the upper functions\n     * @param {Event} [options.e] event if the process is generated by an event\n     */\n    onDeselect: function() {\n      // implemented by sub-classes, as needed.\n    },\n\n\n    /**\n     * This callback function is called every time _discardActiveObject or _setActiveObject\n     * try to to select this object. If the function returns true, the process is cancelled\n     * @param {Object} [options] options sent from the upper functions\n     * @param {Event} [options.e] event if the process is generated by an event\n     */\n    onSelect: function() {\n      // implemented by sub-classes, as needed.\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Animation duration (in ms) for fx* methods\n   * @type Number\n   * @default\n   */\n  FX_DURATION: 500,\n\n  /**\n   * Centers object horizontally with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectH: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.left,\n      endValue: this.getCenter().left,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('left', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Centers object vertically with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectV: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.top,\n      endValue: this.getCenter().top,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('top', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function() {\n        object.setCoords();\n        onComplete();\n      }\n    });\n\n    return this;\n  },\n\n  /**\n   * Same as `fabric.Canvas#remove` but animated\n   * @param {fabric.Object} object Object to remove\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxRemove: function (object, callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.opacity,\n      endValue: 0,\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        object.set('opacity', value);\n        _this.requestRenderAll();\n        onChange();\n      },\n      onComplete: function () {\n        _this.remove(object);\n        onComplete();\n      }\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n  /**\n   * Animates object's properties\n   * @param {String|Object} property Property to animate (if string) or properties to animate (if object)\n   * @param {Number|Object} value Value to animate property to (if string was given first) or options object\n   * @return {fabric.Object} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\n   * @chainable\n   *\n   * As object — multiple properties\n   *\n   * object.animate({ left: ..., top: ... });\n   * object.animate({ left: ..., top: ... }, { duration: ... });\n   *\n   * As string — one property\n   *\n   * object.animate('left', ...);\n   * object.animate('left', { duration: ... });\n   *\n   */\n  animate: function() {\n    if (arguments[0] && typeof arguments[0] === 'object') {\n      var propsToAnimate = [], prop, skipCallbacks;\n      for (prop in arguments[0]) {\n        propsToAnimate.push(prop);\n      }\n      for (var i = 0, len = propsToAnimate.length; i < len; i++) {\n        prop = propsToAnimate[i];\n        skipCallbacks = i !== len - 1;\n        this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);\n      }\n    }\n    else {\n      this._animate.apply(this, arguments);\n    }\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to animate\n   * @param {String} to Value to animate to\n   * @param {Object} [options] Options object\n   * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked\n   */\n  _animate: function(property, to, options, skipCallbacks) {\n    var _this = this, propPair;\n\n    to = to.toString();\n\n    if (!options) {\n      options = { };\n    }\n    else {\n      options = fabric.util.object.clone(options);\n    }\n\n    if (~property.indexOf('.')) {\n      propPair = property.split('.');\n    }\n\n    var currentValue = propPair\n      ? this.get(propPair[0])[propPair[1]]\n      : this.get(property);\n\n    if (!('from' in options)) {\n      options.from = currentValue;\n    }\n\n    if (~to.indexOf('=')) {\n      to = currentValue + parseFloat(to.replace('=', ''));\n    }\n    else {\n      to = parseFloat(to);\n    }\n\n    fabric.util.animate({\n      startValue: options.from,\n      endValue: to,\n      byValue: options.by,\n      easing: options.easing,\n      duration: options.duration,\n      abort: options.abort && function() {\n        return options.abort.call(_this);\n      },\n      onChange: function(value, valueProgress, timeProgress) {\n        if (propPair) {\n          _this[propPair[0]][propPair[1]] = value;\n        }\n        else {\n          _this.set(property, value);\n        }\n        if (skipCallbacks) {\n          return;\n        }\n        options.onChange && options.onChange(value, valueProgress, timeProgress);\n      },\n      onComplete: function(value, valueProgress, timeProgress) {\n        if (skipCallbacks) {\n          return;\n        }\n\n        _this.setCoords();\n        options.onComplete && options.onComplete(value, valueProgress, timeProgress);\n      }\n    });\n  }\n});\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      coordProps = { x1: 1, x2: 1, y1: 1, y2: 1 },\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\n\n  if (fabric.Line) {\n    fabric.warn('fabric.Line is already defined');\n    return;\n  }\n\n  /**\n   * Line class\n   * @class fabric.Line\n   * @extends fabric.Object\n   * @see {@link fabric.Line#initialize} for constructor definition\n   */\n  fabric.Line = fabric.util.createClass(fabric.Object, /** @lends fabric.Line.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'line',\n\n    /**\n     * x value or first line edge\n     * @type Number\n     * @default\n     */\n    x1: 0,\n\n    /**\n     * y value or first line edge\n     * @type Number\n     * @default\n     */\n    y1: 0,\n\n    /**\n     * x value or second line edge\n     * @type Number\n     * @default\n     */\n    x2: 0,\n\n    /**\n     * y value or second line edge\n     * @type Number\n     * @default\n     */\n    y2: 0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('x1', 'x2', 'y1', 'y2'),\n\n    /**\n     * Constructor\n     * @param {Array} [points] Array of points\n     * @param {Object} [options] Options object\n     * @return {fabric.Line} thisArg\n     */\n    initialize: function(points, options) {\n      if (!points) {\n        points = [0, 0, 0, 0];\n      }\n\n      this.callSuper('initialize', options);\n\n      this.set('x1', points[0]);\n      this.set('y1', points[1]);\n      this.set('x2', points[2]);\n      this.set('y2', points[3]);\n\n      this._setWidthHeight(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options\n     */\n    _setWidthHeight: function(options) {\n      options || (options = { });\n\n      this.width = Math.abs(this.x2 - this.x1);\n      this.height = Math.abs(this.y2 - this.y1);\n\n      this.left = 'left' in options\n        ? options.left\n        : this._getLeftToOriginX();\n\n      this.top = 'top' in options\n        ? options.top\n        : this._getTopToOriginY();\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      if (typeof coordProps[key] !== 'undefined') {\n        this._setWidthHeight();\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.\n     */\n    _getLeftToOriginX: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originX',\n        axis1: 'x1',\n        axis2: 'x2',\n        dimension: 'width'\n      },\n      { // possible values of origin\n        nearest: 'left',\n        center: 'center',\n        farthest: 'right'\n      }\n    ),\n\n    /**\n     * @private\n     * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.\n     */\n    _getTopToOriginY: makeEdgeToOriginGetter(\n      { // property names\n        origin: 'originY',\n        axis1: 'y1',\n        axis2: 'y2',\n        dimension: 'height'\n      },\n      { // possible values of origin\n        nearest: 'top',\n        center: 'center',\n        farthest: 'bottom'\n      }\n    ),\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n\n      if (!this.strokeDashArray || this.strokeDashArray && supportsLineDash) {\n        // move from center (of virtual box) to its left/top corner\n        // we can't assume x1, y1 is top left and x2, y2 is bottom right\n        var p = this.calcLinePoints();\n        ctx.moveTo(p.x1, p.y1);\n        ctx.lineTo(p.x2, p.y2);\n      }\n\n      ctx.lineWidth = this.strokeWidth;\n\n      // TODO: test this\n      // make sure setting \"fill\" changes color of a line\n      // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n      var origStrokeStyle = ctx.strokeStyle;\n      ctx.strokeStyle = this.stroke || ctx.fillStyle;\n      this.stroke && this._renderStroke(ctx);\n      ctx.strokeStyle = origStrokeStyle;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p = this.calcLinePoints();\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, p.x1, p.y1, p.x2, p.y2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * This function is an helper for svg import. it returns the center of the object in the svg\n     * untransformed coordinates\n     * @private\n     * @return {Object} center point from element coordinates\n     */\n    _findCenterFromElement: function() {\n      return {\n        x: (this.x1 + this.x2) / 2,\n        y: (this.y1 + this.y2) / 2,\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @methd toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     */\n    _getNonTransformedDimensions: function() {\n      var dim = this.callSuper('_getNonTransformedDimensions');\n      if (this.strokeLineCap === 'butt') {\n        if (this.width === 0) {\n          dim.y -= this.strokeWidth;\n        }\n        if (this.height === 0) {\n          dim.x -= this.strokeWidth;\n        }\n      }\n      return dim;\n    },\n\n    /**\n     * Recalculates line points given width and height\n     * @private\n     */\n    calcLinePoints: function() {\n      var xMult = this.x1 <= this.x2 ? -1 : 1,\n          yMult = this.y1 <= this.y2 ? -1 : 1,\n          x1 = (xMult * this.width * 0.5),\n          y1 = (yMult * this.height * 0.5),\n          x2 = (xMult * this.width * -0.5),\n          y2 = (yMult * this.height * -0.5);\n\n      return {\n        x1: x1,\n        x2: x2,\n        y1: y1,\n        y2: y2\n      };\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(),\n          p = this.calcLinePoints();\n      markup.push(\n        '<line ', this.getSvgId(),\n        'x1=\"', p.x1,\n        '\" y1=\"', p.y1,\n        '\" x2=\"', p.x2,\n        '\" y2=\"', p.y2,\n        '\" style=\"', this.getSvgStyles(),\n        '\" transform=\"', this.getSvgTransform(),\n        this.getSvgTransformMatrix(),\n        '\"/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})\n   * @static\n   * @memberOf fabric.Line\n   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n   */\n  fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));\n\n  /**\n   * Returns fabric.Line instance from an SVG element\n   * @static\n   * @memberOf fabric.Line\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] callback function invoked after parsing\n   */\n  fabric.Line.fromElement = function(element, callback, options) {\n    options = options || { };\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),\n        points = [\n          parsedAttributes.x1 || 0,\n          parsedAttributes.y1 || 0,\n          parsedAttributes.x2 || 0,\n          parsedAttributes.y2 || 0\n        ];\n    callback(new fabric.Line(points, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Line instance from an object representation\n   * @static\n   * @memberOf fabric.Line\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   */\n  fabric.Line.fromObject = function(object, callback) {\n    function _callback(instance) {\n      delete instance.points;\n      callback && callback(instance);\n    };\n    var options = clone(object, true);\n    options.points = [object.x1, object.y1, object.x2, object.y2];\n    fabric.Object._fromObject('Line', options, _callback, 'points');\n  };\n\n  /**\n   * Produces a function that calculates distance from canvas edge to Line origin.\n   */\n  function makeEdgeToOriginGetter(propertyNames, originValues) {\n    var origin = propertyNames.origin,\n        axis1 = propertyNames.axis1,\n        axis2 = propertyNames.axis2,\n        dimension = propertyNames.dimension,\n        nearest = originValues.nearest,\n        center = originValues.center,\n        farthest = originValues.farthest;\n\n    return function() {\n      switch (this.get(origin)) {\n        case nearest:\n          return Math.min(this.get(axis1), this.get(axis2));\n        case center:\n          return Math.min(this.get(axis1), this.get(axis2)) + (0.5 * this.get(dimension));\n        case farthest:\n          return Math.max(this.get(axis1), this.get(axis2));\n      }\n    };\n\n  }\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      pi = Math.PI;\n\n  if (fabric.Circle) {\n    fabric.warn('fabric.Circle is already defined.');\n    return;\n  }\n\n  /**\n   * Circle class\n   * @class fabric.Circle\n   * @extends fabric.Object\n   * @see {@link fabric.Circle#initialize} for constructor definition\n   */\n  fabric.Circle = fabric.util.createClass(fabric.Object, /** @lends fabric.Circle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'circle',\n\n    /**\n     * Radius of this circle\n     * @type Number\n     * @default\n     */\n    radius: 0,\n\n    /**\n     * Start angle of the circle, moving clockwise\n     * deprectated type, this should be in degree, this was an oversight.\n     * probably will change to degrees in next major version\n     * @type Number\n     * @default 0\n     */\n    startAngle: 0,\n\n    /**\n     * End angle of the circle\n     * deprectated type, this should be in degree, this was an oversight.\n     * probably will change to degrees in next major version\n     * @type Number\n     * @default 2Pi\n     */\n    endAngle: pi * 2,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('radius', 'startAngle', 'endAngle'),\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Circle} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n\n      if (key === 'radius') {\n        this.setRadius(value);\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['radius', 'startAngle', 'endAngle'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = 0, y = 0,\n          angle = (this.endAngle - this.startAngle) % ( 2 * pi);\n\n      if (angle === 0) {\n        markup.push(\n          '<circle ', this.getSvgId(),\n          'cx=\"' + x + '\" cy=\"' + y + '\" ',\n          'r=\"', this.radius,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          ' ', this.getSvgTransformMatrix(), '\"',\n          this.addPaintOrder(),\n          '/>\\n'\n        );\n      }\n      else {\n        var startX = fabric.util.cos(this.startAngle) * this.radius,\n            startY = fabric.util.sin(this.startAngle) * this.radius,\n            endX = fabric.util.cos(this.endAngle) * this.radius,\n            endY = fabric.util.sin(this.endAngle) * this.radius,\n            largeFlag = angle > pi ? '1' : '0';\n\n        markup.push(\n          '<path d=\"M ' + startX + ' ' + startY,\n          ' A ' + this.radius + ' ' + this.radius,\n          ' 0 ', +largeFlag + ' 1', ' ' + endX + ' ' + endY,\n          '\" style=\"', this.getSvgStyles(),\n          '\" transform=\"', this.getSvgTransform(),\n          ' ', this.getSvgTransformMatrix(), '\"',\n          this.addPaintOrder(),\n          '\"/>\\n'\n        );\n      }\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n      ctx.arc(\n        0,\n        0,\n        this.radius,\n        this.startAngle,\n        this.endAngle, false);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusX: function() {\n      return this.get('radius') * this.get('scaleX');\n    },\n\n    /**\n     * Returns vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusY: function() {\n      return this.get('radius') * this.get('scaleY');\n    },\n\n    /**\n     * Sets radius of an object (and updates width accordingly)\n     * @return {fabric.Circle} thisArg\n     */\n    setRadius: function(value) {\n      this.radius = value;\n      return this.set('width', value * 2).set('height', value * 2);\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})\n   * @static\n   * @memberOf fabric.Circle\n   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n   */\n  fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));\n\n  /**\n   * Returns {@link fabric.Circle} instance from an SVG element\n   * @static\n   * @memberOf fabric.Circle\n   * @param {SVGElement} element Element to parse\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   * @param {Object} [options] Options object\n   * @throws {Error} If value of `r` attribute is missing or invalid\n   */\n  fabric.Circle.fromElement = function(element, callback) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\n\n    if (!isValidRadius(parsedAttributes)) {\n      throw new Error('value of `r` attribute is required and can not be negative');\n    }\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.radius;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.radius;\n    callback(new fabric.Circle(parsedAttributes));\n  };\n\n  /**\n   * @private\n   */\n  function isValidRadius(attributes) {\n    return (('radius' in attributes) && (attributes.radius >= 0));\n  }\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Circle} instance from an object representation\n   * @static\n   * @memberOf fabric.Circle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {Object} Instance of fabric.Circle\n   */\n  fabric.Circle.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Circle', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.Triangle) {\n    fabric.warn('fabric.Triangle is already defined');\n    return;\n  }\n\n  /**\n   * Triangle class\n   * @class fabric.Triangle\n   * @extends fabric.Object\n   * @return {fabric.Triangle} thisArg\n   * @see {@link fabric.Triangle#initialize} for constructor definition\n   */\n  fabric.Triangle = fabric.util.createClass(fabric.Object, /** @lends fabric.Triangle.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'triangle',\n\n    /**\n     * Width is set to 100 to compensate the old initialize code that was setting it to 100\n     * @type Number\n     * @default\n     */\n    width: 100,\n\n    /**\n     * Height is set to 100 to compensate the old initialize code that was setting it to 100\n     * @type Number\n     * @default\n     */\n    height: 100,\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      ctx.moveTo(-widthBy2, heightBy2);\n      ctx.lineTo(0, -heightBy2);\n      ctx.lineTo(widthBy2, heightBy2);\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, -widthBy2, heightBy2, 0, -heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, 0, -heightBy2, widthBy2, heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, widthBy2, heightBy2, -widthBy2, heightBy2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(),\n          widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2,\n          points = [\n            -widthBy2 + ' ' + heightBy2,\n            '0 ' + -heightBy2,\n            widthBy2 + ' ' + heightBy2\n          ]\n            .join(',');\n\n      markup.push(\n        '<polygon ', this.getSvgId(),\n        'points=\"', points,\n        '\" style=\"', this.getSvgStyles(),\n        '\" transform=\"', this.getSvgTransform(), '\"',\n        this.addPaintOrder(),\n        '/>'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /**\n   * Returns {@link fabric.Triangle} instance from an object representation\n   * @static\n   * @memberOf fabric.Triangle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   */\n  fabric.Triangle.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Triangle', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      piBy2   = Math.PI * 2;\n\n  if (fabric.Ellipse) {\n    fabric.warn('fabric.Ellipse is already defined.');\n    return;\n  }\n\n  /**\n   * Ellipse class\n   * @class fabric.Ellipse\n   * @extends fabric.Object\n   * @return {fabric.Ellipse} thisArg\n   * @see {@link fabric.Ellipse#initialize} for constructor definition\n   */\n  fabric.Ellipse = fabric.util.createClass(fabric.Object, /** @lends fabric.Ellipse.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'ellipse',\n\n    /**\n     * Horizontal radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {fabric.Ellipse} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this.set('rx', options && options.rx || 0);\n      this.set('ry', options && options.ry || 0);\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Ellipse} thisArg\n     */\n    _set: function(key, value) {\n      this.callSuper('_set', key, value);\n      switch (key) {\n\n        case 'rx':\n          this.rx = value;\n          this.set('width', value * 2);\n          break;\n\n        case 'ry':\n          this.ry = value;\n          this.set('height', value * 2);\n          break;\n\n      }\n      return this;\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRx: function() {\n      return this.get('rx') * this.get('scaleX');\n    },\n\n    /**\n     * Returns Vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRy: function() {\n      return this.get('ry') * this.get('scaleY');\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup();\n      markup.push(\n        '<ellipse ', this.getSvgId(),\n        'cx=\"0\" cy=\"0\" ',\n        'rx=\"', this.rx,\n        '\" ry=\"', this.ry,\n        '\" style=\"', this.getSvgStyles(),\n        '\" transform=\"', this.getSvgTransform(),\n        this.getSvgTransformMatrix(), '\"',\n        this.addPaintOrder(),\n        '/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     */\n    _render: function(ctx) {\n      ctx.beginPath();\n      ctx.save();\n      ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\n      ctx.arc(\n        0,\n        0,\n        this.rx,\n        0,\n        piBy2,\n        false);\n      ctx.restore();\n      this._renderPaintInOrder(ctx);\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})\n   * @static\n   * @memberOf fabric.Ellipse\n   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n   */\n  fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an SVG element\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {SVGElement} element Element to parse\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromElement = function(element, callback) {\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.rx;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.ry;\n    callback(new fabric.Ellipse(parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an object representation\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {fabric.Ellipse}\n   */\n  fabric.Ellipse.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Ellipse', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Rect) {\n    fabric.warn('fabric.Rect is already defined');\n    return;\n  }\n\n  /**\n   * Rectangle class\n   * @class fabric.Rect\n   * @extends fabric.Object\n   * @return {fabric.Rect} thisArg\n   * @see {@link fabric.Rect#initialize} for constructor definition\n   */\n  fabric.Rect = fabric.util.createClass(fabric.Object, /** @lends fabric.Rect.prototype */ {\n\n    /**\n     * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('rx', 'ry'),\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'rect',\n\n    /**\n     * Horizontal border radius\n     * @type Number\n     * @default\n     */\n    rx:   0,\n\n    /**\n     * Vertical border radius\n     * @type Number\n     * @default\n     */\n    ry:   0,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      this._initRxRy();\n    },\n\n    /**\n     * Initializes rx/ry attributes\n     * @private\n     */\n    _initRxRy: function() {\n      if (this.rx && !this.ry) {\n        this.ry = this.rx;\n      }\n      else if (this.ry && !this.rx) {\n        this.rx = this.ry;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n\n      // optimize 1x1 case (used in spray brush)\n      if (this.width === 1 && this.height === 1) {\n        ctx.fillRect(-0.5, -0.5, 1, 1);\n        return;\n      }\n\n      var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,\n          ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,\n          w = this.width,\n          h = this.height,\n          x = -this.width / 2,\n          y = -this.height / 2,\n          isRounded = rx !== 0 || ry !== 0,\n          /* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\n          k = 1 - 0.5522847498;\n      ctx.beginPath();\n\n      ctx.moveTo(x + rx, y);\n\n      ctx.lineTo(x + w - rx, y);\n      isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\n\n      ctx.lineTo(x + w, y + h - ry);\n      isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\n\n      ctx.lineTo(x + rx, y + h);\n      isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\n\n      ctx.lineTo(x, y + ry);\n      isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\n\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = -this.width / 2, y = -this.height / 2;\n      markup.push(\n        '<rect ', this.getSvgId(),\n        'x=\"', x, '\" y=\"', y,\n        '\" rx=\"', this.get('rx'), '\" ry=\"', this.get('ry'),\n        '\" width=\"', this.width, '\" height=\"', this.height,\n        '\" style=\"', this.getSvgStyles(),\n        '\" transform=\"', this.getSvgTransform(),\n        this.getSvgTransformMatrix(), '\"',\n        this.addPaintOrder(),\n        '/>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)\n   * @static\n   * @memberOf fabric.Rect\n   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n   */\n  fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));\n\n  /**\n   * Returns {@link fabric.Rect} instance from an SVG element\n   * @static\n   * @memberOf fabric.Rect\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Rect.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n    options = options || { };\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\n\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top  = parsedAttributes.top  || 0;\n    var rect = new fabric.Rect(extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n    rect.visible = rect.visible && rect.width > 0 && rect.height > 0;\n    callback(rect);\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Rect} instance from an object representation\n   * @static\n   * @memberOf fabric.Rect\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Rect instance is created\n   */\n  fabric.Rect.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Rect', object, callback);\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Polyline) {\n    fabric.warn('fabric.Polyline is already defined');\n    return;\n  }\n\n  /**\n   * Polyline class\n   * @class fabric.Polyline\n   * @extends fabric.Object\n   * @see {@link fabric.Polyline#initialize} for constructor definition\n   */\n  fabric.Polyline = fabric.util.createClass(fabric.Object, /** @lends fabric.Polyline.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polyline',\n\n    /**\n     * Points array\n     * @type Array\n     * @default\n     */\n    points: null,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('points'),\n\n    /**\n     * Constructor\n     * @param {Array} points Array of points (where each point is an object with x and y)\n     * @param {Object} [options] Options object\n     * @return {fabric.Polyline} thisArg\n     * @example\n     * var poly = new fabric.Polyline([\n     *     { x: 10, y: 10 },\n     *     { x: 50, y: 30 },\n     *     { x: 40, y: 70 },\n     *     { x: 60, y: 50 },\n     *     { x: 100, y: 150 },\n     *     { x: 40, y: 100 }\n     *   ], {\n     *   stroke: 'red',\n     *   left: 100,\n     *   top: 100\n     * });\n     */\n    initialize: function(points, options) {\n      options = options || {};\n      this.points = points || [];\n      this.callSuper('initialize', options);\n      var calcDim = this._calcDimensions();\n      if (typeof options.left === 'undefined') {\n        this.left = calcDim.left;\n      }\n      if (typeof options.top === 'undefined') {\n        this.top = calcDim.top;\n      }\n      this.width = calcDim.width;\n      this.height = calcDim.height;\n      this.pathOffset = {\n        x: calcDim.left + this.width / 2,\n        y: calcDim.top + this.height / 2\n      };\n    },\n\n    /**\n     * Calculate the polygon min and max point from points array,\n     * returning an object with left, top, widht, height to measure the\n     * polygon size\n     * @return {Object} object.left X coordinate of the polygon leftmost point\n     * @return {Object} object.top Y coordinate of the polygon topmost point\n     * @return {Object} object.width distance between X coordinates of the polygon leftmost and rightmost point\n     * @return {Object} object.height distance between Y coordinates of the polygon topmost and bottommost point\n     * @private\n     */\n    _calcDimensions: function() {\n\n      var points = this.points,\n          minX = min(points, 'x') || 0,\n          minY = min(points, 'y') || 0,\n          maxX = max(points, 'x') || 0,\n          maxY = max(points, 'y') || 0,\n          width = (maxX - minX),\n          height = (maxY - minY);\n\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        points: this.points.concat()\n      });\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var points = [], diffX = this.pathOffset.x, diffY = this.pathOffset.y,\n          markup = this._createBaseSVGMarkup(),\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        points.push(\n          toFixed(this.points[i].x - diffX, NUM_FRACTION_DIGITS), ',',\n          toFixed(this.points[i].y - diffY, NUM_FRACTION_DIGITS), ' '\n        );\n      }\n      markup.push(\n        '<', this.type, ' ', this.getSvgId(),\n        'points=\"', points.join(''),\n        '\" style=\"', this.getSvgStyles(),\n        '\" transform=\"', this.getSvgTransform(),\n        ' ', this.getSvgTransformMatrix(), '\"',\n        this.addPaintOrder(),\n        '/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    commonRender: function(ctx) {\n      var point, len = this.points.length,\n          x = this.pathOffset.x,\n          y = this.pathOffset.y;\n\n      if (!len || isNaN(this.points[len - 1].y)) {\n        // do not draw if no points or odd points\n        // NaN comes from parseFloat of a empty string in parser\n        return false;\n      }\n      ctx.beginPath();\n      ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\n      for (var i = 0; i < len; i++) {\n        point = this.points[i];\n        ctx.lineTo(point.x - x, point.y - y);\n      }\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var p1, p2;\n\n      ctx.beginPath();\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        p1 = this.points[i];\n        p2 = this.points[i + 1] || p1;\n        fabric.util.drawDashedLine(ctx, p1.x, p1.y, p2.x, p2.y, this.strokeDashArray);\n      }\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.get('points').length;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})\n   * @static\n   * @memberOf fabric.Polyline\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n   */\n  fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns fabric.Polyline instance from an SVG element\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {SVGElement} element Element to parser\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Polyline.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n    options || (options = { });\n\n    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n        parsedAttributes = fabric.parseAttributes(element, fabric.Polyline.ATTRIBUTE_NAMES);\n\n    callback(new fabric.Polyline(points, fabric.util.object.extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polyline instance from an object representation\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Polyline.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Polyline', object, callback, 'points');\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Polygon) {\n    fabric.warn('fabric.Polygon is already defined');\n    return;\n  }\n\n  /**\n   * Polygon class\n   * @class fabric.Polygon\n   * @extends fabric.Polyline\n   * @see {@link fabric.Polygon#initialize} for constructor definition\n   */\n  fabric.Polygon = fabric.util.createClass(fabric.Polyline, /** @lends fabric.Polygon.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polygon',\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n      ctx.closePath();\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      this.callSuper('_renderDashedStroke', ctx);\n      ctx.closePath();\n    },\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)\n   * @static\n   * @memberOf fabric.Polygon\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement\n   */\n  fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n\n  /**\n   * Returns {@link fabric.Polygon} instance from an SVG element\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Polygon.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n\n    options || (options = { });\n\n    var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n        parsedAttributes = fabric.parseAttributes(element, fabric.Polygon.ATTRIBUTE_NAMES);\n\n    callback(new fabric.Polygon(points, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polygon instance from an object representation\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Polygon.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Polygon', object, callback, 'points');\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      extend = fabric.util.object.extend,\n      _toString = Object.prototype.toString,\n      drawArc = fabric.util.drawArc,\n      commandLengths = {\n        m: 2,\n        l: 2,\n        h: 1,\n        v: 1,\n        c: 6,\n        s: 4,\n        q: 4,\n        t: 2,\n        a: 7\n      },\n      repeatedCommands = {\n        m: 'l',\n        M: 'L'\n      };\n\n  if (fabric.Path) {\n    fabric.warn('fabric.Path is already defined');\n    return;\n  }\n\n  /**\n   * Path class\n   * @class fabric.Path\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n   * @see {@link fabric.Path#initialize} for constructor definition\n   */\n  fabric.Path = fabric.util.createClass(fabric.Object, /** @lends fabric.Path.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'path',\n\n    /**\n     * Array of path points\n     * @type Array\n     * @default\n     */\n    path: null,\n\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('path', 'fillRule'),\n\n    stateProperties: fabric.Object.prototype.stateProperties.concat('path'),\n\n    /**\n     * Constructor\n     * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n     * @param {Object} [options] Options object\n     * @return {fabric.Path} thisArg\n     */\n    initialize: function(path, options) {\n      options = options || { };\n      this.callSuper('initialize', options);\n\n      if (!path) {\n        path = [];\n      }\n\n      var fromArray = _toString.call(path) === '[object Array]';\n\n      this.path = fromArray\n        ? path\n        // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)\n        : path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\n\n      if (!this.path) {\n        return;\n      }\n\n      if (!fromArray) {\n        this.path = this._parsePath();\n      }\n\n      this._setPositionDimensions(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} options Options object\n     */\n    _setPositionDimensions: function(options) {\n      var calcDim = this._parseDimensions();\n\n      this.width = calcDim.width;\n      this.height = calcDim.height;\n\n      if (typeof options.left === 'undefined') {\n        this.left = calcDim.left;\n      }\n\n      if (typeof options.top === 'undefined') {\n        this.top = calcDim.top;\n      }\n\n      this.pathOffset = this.pathOffset || {\n        x: calcDim.left + this.width / 2,\n        y: calcDim.top + this.height / 2\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _renderPathCommands: function(ctx) {\n      var current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          l = -this.pathOffset.x,\n          t = -this.pathOffset.y;\n\n      ctx.beginPath();\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            ctx.bezierCurveTo(\n              x + current[1] + l, // x1\n              y + current[2] + t, // y1\n              controlX + l, // x2\n              controlY + t, // y2\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            x = current[5];\n            y = current[6];\n            controlX = current[3];\n            controlY = current[4];\n            ctx.bezierCurveTo(\n              current[1] + l,\n              current[2] + t,\n              controlX + l,\n              controlY + t,\n              x + l,\n              y + t\n            );\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              x + current[1] + l,\n              y + current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.bezierCurveTo(\n              controlX + l,\n              controlY + t,\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            controlX = x + current[1];\n            controlY = y + current[2];\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n\n            ctx.quadraticCurveTo(\n              current[1] + l,\n              current[2] + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            ctx.quadraticCurveTo(\n              controlX + l,\n              controlY + t,\n              tempX + l,\n              tempY + t\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x + l,\n              current[7] + y + t\n            ]);\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + l,\n              current[7] + t\n            ]);\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            ctx.closePath();\n            break;\n        }\n        previous = current;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _render: function(ctx) {\n      this._renderPathCommands(ctx);\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Path (' + this.complexity() +\n        '): { \"top\": ' + this.top + ', \"left\": ' + this.left + ' }>';\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var o = extend(this.callSuper('toObject', propertiesToInclude), {\n        path: this.path.map(function(item) { return item.slice(); }),\n        top: this.top,\n        left: this.left,\n      });\n      return o;\n    },\n\n    /**\n     * Returns dataless object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var o = this.toObject(['sourcePath'].concat(propertiesToInclude));\n      if (o.sourcePath) {\n        delete o.path;\n      }\n      return o;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var chunks = [],\n          markup = this._createBaseSVGMarkup(), addTransform = '';\n\n      for (var i = 0, len = this.path.length; i < len; i++) {\n        chunks.push(this.path[i].join(' '));\n      }\n      var path = chunks.join(' ');\n      addTransform = ' translate(' + (-this.pathOffset.x) + ', ' + (-this.pathOffset.y) + ') ';\n      markup.push(\n        '<path ', this.getSvgId(),\n        'd=\"', path,\n        '\" style=\"', this.getSvgStyles(),\n        '\" transform=\"', this.getSvgTransform(), addTransform,\n        this.getSvgTransformMatrix(), '\" stroke-linecap=\"round\" ',\n        this.addPaintOrder(),\n        '/>\\n'\n      );\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns number representation of an instance complexity\n     * @return {Number} complexity of this instance\n     */\n    complexity: function() {\n      return this.path.length;\n    },\n\n    /**\n     * @private\n     */\n    _parsePath: function() {\n      var result = [],\n          coords = [],\n          currentPath,\n          parsed,\n          re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/ig,\n          match,\n          coordsStr;\n\n      for (var i = 0, coordsParsed, len = this.path.length; i < len; i++) {\n        currentPath = this.path[i];\n\n        coordsStr = currentPath.slice(1).trim();\n        coords.length = 0;\n\n        while ((match = re.exec(coordsStr))) {\n          coords.push(match[0]);\n        }\n\n        coordsParsed = [currentPath.charAt(0)];\n\n        for (var j = 0, jlen = coords.length; j < jlen; j++) {\n          parsed = parseFloat(coords[j]);\n          if (!isNaN(parsed)) {\n            coordsParsed.push(parsed);\n          }\n        }\n\n        var command = coordsParsed[0],\n            commandLength = commandLengths[command.toLowerCase()],\n            repeatedCommand = repeatedCommands[command] || command;\n\n        if (coordsParsed.length - 1 > commandLength) {\n          for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\n            result.push([command].concat(coordsParsed.slice(k, k + commandLength)));\n            command = repeatedCommand;\n          }\n        }\n        else {\n          result.push(coordsParsed);\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _parseDimensions: function() {\n\n      var aX = [],\n          aY = [],\n          current, // current instruction\n          previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0, // current x\n          y = 0, // current y\n          controlX = 0, // current control point x\n          controlY = 0, // current control point y\n          tempX,\n          tempY,\n          bounds;\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n\n        current = this.path[i];\n\n        switch (current[0]) { // first letter\n\n          case 'l': // lineto, relative\n            x += current[1];\n            y += current[2];\n            bounds = [];\n            break;\n\n          case 'L': // lineto, absolute\n            x = current[1];\n            y = current[2];\n            bounds = [];\n            break;\n\n          case 'h': // horizontal lineto, relative\n            x += current[1];\n            bounds = [];\n            break;\n\n          case 'H': // horizontal lineto, absolute\n            x = current[1];\n            bounds = [];\n            break;\n\n          case 'v': // vertical lineto, relative\n            y += current[1];\n            bounds = [];\n            break;\n\n          case 'V': // verical lineto, absolute\n            y = current[1];\n            bounds = [];\n            break;\n\n          case 'm': // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'M': // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'c': // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              x + current[1], // x1\n              y + current[2], // y1\n              controlX, // x2\n              controlY, // y2\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C': // bezierCurveTo, absolute\n            controlX = current[3];\n            controlY = current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              current[1],\n              current[2],\n              controlX,\n              controlY,\n              current[5],\n              current[6]\n            );\n            x = current[5];\n            y = current[6];\n            break;\n\n          case 's': // shorthand cubic bezierCurveTo, relative\n\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              x + current[1],\n              y + current[2],\n              tempX,\n              tempY\n            );\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = x + current[1];\n            controlY = y + current[2];\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S': // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              current[1],\n              current[2],\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 'q': // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n            controlX = x + current[1];\n            controlY = y + current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q': // quadraticCurveTo, absolute\n            controlX = current[1];\n            controlY = current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              current[3],\n              current[4]\n            );\n            x = current[3];\n            y = current[4];\n            break;\n\n          case 't': // shorthand quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            }\n            else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n            bounds = fabric.util.getBoundsOfCurve(x, y,\n              controlX,\n              controlY,\n              controlX,\n              controlY,\n              tempX,\n              tempY\n            );\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6] + x,\n              current[7] + y\n            );\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y,\n              current[1],\n              current[2],\n              current[3],\n              current[4],\n              current[5],\n              current[6],\n              current[7]\n            );\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            break;\n        }\n        previous = current;\n        bounds.forEach(function (point) {\n          aX.push(point.x);\n          aY.push(point.y);\n        });\n        aX.push(x);\n        aY.push(y);\n      }\n\n      var minX = min(aX) || 0,\n          minY = min(aY) || 0,\n          maxX = max(aX) || 0,\n          maxY = max(aY) || 0,\n          deltaX = maxX - minX,\n          deltaY = maxY - minY,\n\n          o = {\n            left: minX,\n            top: minY,\n            width: deltaX,\n            height: deltaY\n          };\n\n      return o;\n    }\n  });\n\n  /**\n   * Creates an instance of fabric.Path from an object\n   * @static\n   * @memberOf fabric.Path\n   * @param {Object} object\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n  fabric.Path.fromObject = function(object, callback) {\n    if (typeof object.sourcePath === 'string') {\n      var pathUrl = object.sourcePath;\n      fabric.loadSVGFromURL(pathUrl, function (elements) {\n        var path = elements[0];\n        path.setOptions(object);\n        callback && callback(path);\n      });\n    }\n    else {\n      fabric.Object._fromObject('Path', object, callback, 'path');\n    }\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)\n   * @static\n   * @memberOf fabric.Path\n   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n   */\n  fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);\n\n  /**\n   * Creates an instance of fabric.Path from an SVG <path> element\n   * @static\n   * @memberOf fabric.Path\n   * @param {SVGElement} element to parse\n   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   */\n  fabric.Path.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\n    callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max;\n\n  if (fabric.Group) {\n    return;\n  }\n\n  /**\n   * Group class\n   * @class fabric.Group\n   * @extends fabric.Object\n   * @mixes fabric.Collection\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.Group#initialize} for constructor definition\n   */\n  fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection, /** @lends fabric.Group.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'group',\n\n    /**\n     * Width of stroke\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * Indicates if click events should also check for subtargets\n     * @type Boolean\n     * @default\n     */\n    subTargetCheck: false,\n\n    /**\n     * Groups are container, do not render anything on theyr own, ence no cache properties\n     * @type Array\n     * @default\n     */\n    cacheProperties: [],\n\n    /**\n     * setOnGroup is a method used for TextBox that is no more used since 2.0.0 The behavior is still\n     * available setting this boolean to true.\n     * @type Boolean\n     * @since 2.0.0\n     * @default\n     */\n    useSetOnGroup: false,\n\n    /**\n     * Constructor\n     * @param {Object} objects Group objects\n     * @param {Object} [options] Options object\n     * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options, isAlreadyGrouped) {\n      options = options || {};\n      this._objects = [];\n      // if objects enclosed in a group have been grouped already,\n      // we cannot change properties of objects.\n      // Thus we need to set options to group without objects,\n      isAlreadyGrouped && this.callSuper('initialize', options);\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      if (options.originX) {\n        this.originX = options.originX;\n      }\n      if (options.originY) {\n        this.originY = options.originY;\n      }\n\n      if (!isAlreadyGrouped) {\n        var center = options && options.centerPoint;\n        // if coming from svg i do not want to calc bounds.\n        // i assume width and height are passed along options\n        center || this._calcBounds();\n        this._updateObjectsCoords(center);\n        delete options.centerPoint;\n        this.callSuper('initialize', options);\n      }\n      else {\n        this._updateObjectsACoords();\n      }\n\n      this.setCoords();\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsACoords: function() {\n      var ignoreZoom = true, skipAbsolute = true;\n      for (var i = this._objects.length; i--; ){\n        this._objects[i].setCoords(ignoreZoom, skipAbsolute);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsCoords: function(center) {\n      var center = center || this.getCenterPoint();\n      for (var i = this._objects.length; i--; ){\n        this._updateObjectCoords(this._objects[i], center);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     * @param {fabric.Point} center, current center of group.\n     */\n    _updateObjectCoords: function(object, center) {\n      var objectLeft = object.left,\n          objectTop = object.top,\n          ignoreZoom = true, skipAbsolute = true;\n\n      object.set({\n        left: objectLeft - center.x,\n        top: objectTop - center.y\n      });\n      object.group = this;\n      object.setCoords(ignoreZoom, skipAbsolute);\n    },\n\n    /**\n     * Returns string represenation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.Group: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Adds an object to a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    addWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n      if (object) {\n        this._objects.push(object);\n        object.group = this;\n        object._set('canvas', this.canvas);\n      }\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * Removes an object from a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    removeWithUpdate: function(object) {\n      this._restoreObjectsState();\n      fabric.util.resetObjectTransform(this);\n\n      this.remove(object);\n      this._calcBounds();\n      this._updateObjectsCoords();\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _onObjectAdded: function(object) {\n      this.dirty = true;\n      object.group = this;\n      object._set('canvas', this.canvas);\n    },\n\n    /**\n     * @private\n     */\n    _onObjectRemoved: function(object) {\n      this.dirty = true;\n      delete object.group;\n    },\n\n    /**\n     * @private\n     */\n    _set: function(key, value) {\n      var i = this._objects.length;\n      if (this.useSetOnGroup) {\n        while (i--) {\n          this._objects[i].setOnGroup(key, value);\n        }\n      }\n      if (key === 'canvas') {\n        i = this._objects.length;\n        while (i--) {\n          this._objects[i]._set(key, value);\n        }\n      }\n      this.callSuper('_set', key, value);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var objsToObject = this.getObjects().map(function(obj) {\n        var originalDefaults = obj.includeDefaultValues;\n        obj.includeDefaultValues = obj.group.includeDefaultValues;\n        var _obj = obj.toObject(propertiesToInclude);\n        obj.includeDefaultValues = originalDefaults;\n        return _obj;\n      });\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        objects: objsToObject\n      });\n    },\n\n    /**\n     * Returns object representation of an instance, in dataless mode.\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function(propertiesToInclude) {\n      var objsToObject, sourcePath = this.sourcePath;\n      if (sourcePath) {\n        objsToObject = sourcePath;\n      }\n      else {\n        objsToObject = this.getObjects().map(function(obj) {\n          var originalDefaults = obj.includeDefaultValues;\n          obj.includeDefaultValues = obj.group.includeDefaultValues;\n          var _obj = obj.toDatalessObject(propertiesToInclude);\n          obj.includeDefaultValues = originalDefaults;\n          return _obj;\n        });\n      }\n      return extend(this.callSuper('toDatalessObject', propertiesToInclude), {\n        objects: objsToObject\n      });\n    },\n\n    /**\n     * Renders instance on a given context\n     * @param {CanvasRenderingContext2D} ctx context to render instance on\n     */\n    render: function(ctx) {\n      this._transformDone = true;\n      this.callSuper('render', ctx);\n      this._transformDone = false;\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      var ownCache = this.objectCaching && (!this.group || this.needsItsOwnCache() || !this.group.isOnACache());\n      this.ownCaching = ownCache;\n      if (ownCache) {\n        for (var i = 0, len = this._objects.length; i < len; i++) {\n          if (this._objects[i].willDrawShadow()) {\n            this.ownCaching = false;\n            return false;\n          }\n        }\n      }\n      return ownCache;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      if (this.shadow) {\n        return this.callSuper('willDrawShadow');\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].willDrawShadow()) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isOnACache: function() {\n      return this.ownCaching || (this.group && this.group.isOnACache());\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawObject: function(ctx) {\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i].render(ctx);\n      }\n    },\n\n    /**\n     * Check if cache is dirty\n     */\n    isCacheDirty: function() {\n      if (this.callSuper('isCacheDirty')) {\n        return true;\n      }\n      if (!this.statefullCache) {\n        return false;\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].isCacheDirty(true)) {\n          if (this._cacheCanvas) {\n            // if this group has not a cache canvas there is nothing to clean\n            var x = this.cacheWidth / this.zoomX, y = this.cacheHeight / this.zoomY;\n            this._cacheContext.clearRect(-x / 2, -y / 2, x, y);\n          }\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Retores original state of each of group objects (original state is that which was before group was created).\n     * @private\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    _restoreObjectsState: function() {\n      this._objects.forEach(this._restoreObjectState, this);\n      return this;\n    },\n\n    /**\n     * Realises the transform from this group onto the supplied object\n     * i.e. it tells you what would happen if the supplied object was in\n     * the group, and then the group was destroyed. It mutates the supplied\n     * object.\n     * @param {fabric.Object} object\n     * @return {fabric.Object} transformedObject\n     */\n    realizeTransform: function(object) {\n      var matrix = object.calcTransformMatrix(),\n          options = fabric.util.qrDecompose(matrix),\n          center = new fabric.Point(options.translateX, options.translateY);\n      object.flipX = false;\n      object.flipY = false;\n      object.set('scaleX', options.scaleX);\n      object.set('scaleY', options.scaleY);\n      object.skewX = options.skewX;\n      object.skewY = options.skewY;\n      object.angle = options.angle;\n      object.setPositionByOrigin(center, 'center', 'center');\n      return object;\n    },\n\n    /**\n     * Restores original state of a specified object in group\n     * @private\n     * @param {fabric.Object} object\n     * @return {fabric.Group} thisArg\n     */\n    _restoreObjectState: function(object) {\n      this.realizeTransform(object);\n      object.setCoords();\n      delete object.group;\n      return this;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    destroy: function() {\n      // when group is destroyed objects needs to get a repaint to be eventually\n      // displayed on canvas.\n      this._objects.forEach(function(object) {\n        object.set('dirty', true);\n      });\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * make a group an active selection, remove the group from canvas\n     * the group has to be on canvas for this to work.\n     * @return {fabric.ActiveSelection} thisArg\n     * @chainable\n     */\n    toActiveSelection: function() {\n      if (!this.canvas) {\n        return;\n      }\n      var objects = this._objects, canvas = this.canvas;\n      this._objects = [];\n      var options = this.toObject();\n      delete options.objects;\n      var activeSelection = new fabric.ActiveSelection([]);\n      activeSelection.set(options);\n      activeSelection.type = 'activeSelection';\n      canvas.remove(this);\n      objects.forEach(function(object) {\n        object.group = activeSelection;\n        object.dirty = true;\n        canvas.add(object);\n      });\n      activeSelection.canvas = canvas;\n      activeSelection._objects = objects;\n      canvas._activeObject = activeSelection;\n      activeSelection.setCoords();\n      return activeSelection;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    ungroupOnCanvas: function() {\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * Sets coordinates of all objects inside group\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    setObjectsCoords: function() {\n      var ignoreZoom = true, skipAbsolute = true;\n      this.forEachObject(function(object) {\n        object.setCoords(ignoreZoom, skipAbsolute);\n      });\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _calcBounds: function(onlyWidthHeight) {\n      var aX = [],\n          aY = [],\n          o, prop,\n          props = ['tr', 'br', 'bl', 'tl'],\n          i = 0, iLen = this._objects.length,\n          j, jLen = props.length,\n          ignoreZoom = true;\n\n      for ( ; i < iLen; ++i) {\n        o = this._objects[i];\n        o.setCoords(ignoreZoom);\n        for (j = 0; j < jLen; j++) {\n          prop = props[j];\n          aX.push(o.oCoords[prop].x);\n          aY.push(o.oCoords[prop].y);\n        }\n      }\n\n      this.set(this._getBounds(aX, aY, onlyWidthHeight));\n    },\n\n    /**\n     * @private\n     */\n    _getBounds: function(aX, aY, onlyWidthHeight) {\n      var minXY = new fabric.Point(min(aX), min(aY)),\n          maxXY = new fabric.Point(max(aX), max(aY)),\n          obj = {\n            width: (maxXY.x - minXY.x) || 0,\n            height: (maxXY.y - minXY.y) || 0\n          };\n\n      if (!onlyWidthHeight) {\n        obj.left = minXY.x || 0;\n        obj.top = minXY.y || 0;\n        if (this.originX === 'center') {\n          obj.left += obj.width / 2;\n        }\n        if (this.originX === 'right') {\n          obj.left += obj.width;\n        }\n        if (this.originY === 'center') {\n          obj.top += obj.height / 2;\n        }\n        if (this.originY === 'bottom') {\n          obj.top += obj.height;\n        }\n      }\n      return obj;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup();\n      markup.push(\n        '<g ', this.getSvgId(), 'transform=\"',\n        /* avoiding styles intentionally */\n        this.getSvgTransform(),\n        this.getSvgTransformMatrix(),\n        '\" style=\"',\n        this.getSvgFilter(),\n        '\">\\n'\n      );\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        markup.push('\\t', this._objects[i].toSVG(reviver));\n      }\n\n      markup.push('</g>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n  });\n\n  /**\n   * Returns {@link fabric.Group} instance from an object representation\n   * @static\n   * @memberOf fabric.Group\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an group instance is created\n   */\n  fabric.Group.fromObject = function(object, callback) {\n    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n      var options = fabric.util.object.clone(object, true);\n      delete options.objects;\n      callback && callback(new fabric.Group(enlivenedObjects, options, true));\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { });\n\n  if (fabric.ActiveSelection) {\n    return;\n  }\n\n  /**\n   * Group class\n   * @class fabric.ActiveSelection\n   * @extends fabric.Group\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.ActiveSelection#initialize} for constructor definition\n   */\n  fabric.ActiveSelection = fabric.util.createClass(fabric.Group, /** @lends fabric.ActiveSelection.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'activeSelection',\n\n    /**\n     * Constructor\n     * @param {Object} objects ActiveSelection objects\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function(objects, options) {\n      options = options || {};\n      this._objects = objects || [];\n      for (var i = this._objects.length; i--; ) {\n        this._objects[i].group = this;\n      }\n\n      if (options.originX) {\n        this.originX = options.originX;\n      }\n      if (options.originY) {\n        this.originY = options.originY;\n      }\n      this._calcBounds();\n      this._updateObjectsCoords();\n      fabric.Object.prototype.initialize.call(this, options);\n      this.setCoords();\n    },\n\n    /**\n     * Change te activeSelection to a normal group,\n     * High level function that automatically adds it to canvas as\n     * active object. no events fired.\n     * @since 2.0.0\n     * @return {fabric.Group}\n     */\n    toGroup: function() {\n      var objects = this._objects;\n      this._objects = [];\n      var options = this.toObject();\n      var newGroup = new fabric.Group([]);\n      delete options.objects;\n      newGroup.set(options);\n      newGroup.type = 'group';\n      objects.forEach(function(object) {\n        object.group = newGroup;\n        object.canvas.remove(object);\n      });\n      newGroup._objects = objects;\n      if (!this.canvas) {\n        return newGroup;\n      }\n      var canvas = this.canvas;\n      canvas.add(newGroup);\n      canvas._activeObject = newGroup;\n      newGroup.setCoords();\n      return newGroup;\n    },\n\n    /**\n     * If returns true, deselection is cancelled.\n     * @since 2.0.0\n     * @return {Boolean} [cancel]\n     */\n    onDeselect: function() {\n      this.destroy();\n      return false;\n    },\n\n    /**\n     * Returns string representation of a group\n     * @return {String}\n     */\n    toString: function() {\n      return '#<fabric.ActiveSelection: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * @private\n     */\n    _set: function(key, value) {\n      var i = this._objects.length;\n      if (key === 'canvas') {\n        while (i--) {\n          this._objects[i].set(key, value);\n        }\n      }\n      if (this.useSetOnGroup) {\n        while (i--) {\n          this._objects[i].setOnGroup(key, value);\n        }\n      }\n      fabric.Object.prototype._set.call(this, key, value);\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function() {\n      return false;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * @return {Boolean}\n     */\n    willDrawShadow: function() {\n      if (this.shadow) {\n        return this.callSuper('willDrawShadow');\n      }\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].willDrawShadow()) {\n          return true;\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isOnACache: function() {\n      return false;\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [styleOverride] properties to override the object style\n     * @param {Object} [childrenOverride] properties to override the children overrides\n     */\n    _renderControls: function(ctx, styleOverride, childrenOverride) {\n      ctx.save();\n      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      this.callSuper('_renderControls', ctx, styleOverride);\n      childrenOverride = childrenOverride || { };\n      if (typeof childrenOverride.hasControls === 'undefined') {\n        childrenOverride.hasControls = false;\n      }\n      if (typeof childrenOverride.hasRotatingPoint === 'undefined') {\n        childrenOverride.hasRotatingPoint = false;\n      }\n      childrenOverride.forActiveSelection = true;\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i]._renderControls(ctx, childrenOverride);\n      }\n      ctx.restore();\n    },\n  });\n\n  /**\n   * Returns {@link fabric.ActiveSelection} instance from an object representation\n   * @static\n   * @memberOf fabric.ActiveSelection\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an ActiveSelection instance is created\n   */\n  fabric.ActiveSelection.fromObject = function(object, callback) {\n    fabric.util.enlivenObjects(object.objects, function(enlivenedObjects) {\n      delete object.objects;\n      callback && callback(new fabric.ActiveSelection(enlivenedObjects, object, true));\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var extend = fabric.util.object.extend;\n\n  if (!global.fabric) {\n    global.fabric = { };\n  }\n\n  if (global.fabric.Image) {\n    fabric.warn('fabric.Image is already defined.');\n    return;\n  }\n\n  /**\n   * Image class\n   * @class fabric.Image\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n   * @see {@link fabric.Image#initialize} for constructor definition\n   */\n  fabric.Image = fabric.util.createClass(fabric.Object, /** @lends fabric.Image.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'image',\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * Width of a stroke.\n     * For image quality a stroke multiple of 2 gives better results.\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * private\n     * contains last value of scaleX to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleX: 1,\n\n    /**\n     * private\n     * contains last value of scaleY to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleY: 1,\n\n    /**\n     * private\n     * contains last value of scaling applied by the apply filter chain\n     * @type Number\n     */\n    _filterScalingX: 1,\n\n    /**\n     * private\n     * contains last value of scaling applied by the apply filter chain\n     * @type Number\n     */\n    _filterScalingY: 1,\n\n    /**\n     * minimum scale factor under which any resizeFilter is triggered to resize the image\n     * 0 will disable the automatic resize. 1 will trigger automatically always.\n     * number bigger than 1 are not implemented yet.\n     * @type Number\n     */\n    minimumScaleTrigger: 0.5,\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('cropX', 'cropY'),\n\n    /**\n     * When `true`, object is cached on an additional canvas.\n     * default to false for images\n     * since 1.7.0\n     * @type Boolean\n     * @default\n     */\n    objectCaching: false,\n\n    /**\n     * key used to retrieve the texture representing this image\n     * since 2.0.0\n     * @type String\n     * @default\n     */\n    cacheKey: '',\n\n    /**\n     * Image crop in pixels from original image size.\n     * since 2.0.0\n     * @type Number\n     * @default\n     */\n    cropX: 0,\n\n    /**\n     * Image crop in pixels from original image size.\n     * since 2.0.0\n     * @type Number\n     * @default\n     */\n    cropY: 0,\n\n    /**\n     * Constructor\n     * @param {HTMLImageElement | String} element Image element\n     * @param {Object} [options] Options object\n     * @param {function} [callback] callback function to call after eventual filters applied.\n     * @return {fabric.Image} thisArg\n     */\n    initialize: function(element, options) {\n      options || (options = { });\n      this.filters = [];\n      this.cacheKey = 'texture' + fabric.Object.__uid++;\n      this.callSuper('initialize', options);\n      this._initElement(element, options);\n    },\n\n    /**\n     * Returns image element which this instance if based on\n     * @return {HTMLImageElement} Image element\n     */\n    getElement: function() {\n      return this._element;\n    },\n\n    /**\n     * Sets image element for this instance to a specified one.\n     * If filters defined they are applied to new image.\n     * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n     * @param {HTMLImageElement} element\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setElement: function(element, options) {\n      var backend = fabric.filterBackend;\n      if (backend && backend.evictCachesForKey) {\n        backend.evictCachesForKey(this.cacheKey);\n        backend.evictCachesForKey(this.cacheKey + '_filtered');\n      }\n      this._element = element;\n      this._originalElement = element;\n      this._initConfig(options);\n      if (this.resizeFilter) {\n        this.applyResizeFilters();\n      }\n      if (this.filters.length !== 0) {\n        this.applyFilters();\n      }\n      return this;\n    },\n\n    /**\n     * Delete cacheKey if we have a webGlBackend\n     * delete reference to image elements\n     */\n    dispose: function() {\n      var backend = fabric.filterBackend;\n      if (backend && backend.evictCachesForKey) {\n        backend.evictCachesForKey(this.cacheKey);\n        backend.evictCachesForKey(this.cacheKey + '_filtered');\n      }\n      this._originalElement = undefined;\n      this._element = undefined;\n      this._filteredEl = undefined;\n    },\n\n    /**\n     * Sets crossOrigin value (on an instance and corresponding image element)\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setCrossOrigin: function(value) {\n      this.crossOrigin = value;\n      this._element.crossOrigin = value;\n\n      return this;\n    },\n\n    /**\n     * Returns original size of an image\n     * @return {Object} Object with \"width\" and \"height\" properties\n     */\n    getOriginalSize: function() {\n      var element = this.getElement();\n      return {\n        width: element.width,\n        height: element.height\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _stroke: function(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n      var w = this.width / 2, h = this.height / 2;\n      ctx.beginPath();\n      ctx.moveTo(-w, -h);\n      ctx.lineTo(w, -h);\n      ctx.lineTo(w, h);\n      ctx.lineTo(-w, h);\n      ctx.lineTo(-w, -h);\n      ctx.closePath();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n\n      ctx.save();\n      this._setStrokeStyles(ctx, this);\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var filters = [];\n\n      this.filters.forEach(function(filterObj) {\n        if (filterObj) {\n          filters.push(filterObj.toObject());\n        }\n      });\n      var object = extend(\n        this.callSuper(\n          'toObject',\n          ['crossOrigin', 'cropX', 'cropY'].concat(propertiesToInclude)\n        ), {\n          src: this.getSrc(),\n          filters: filters,\n        });\n      if (this.resizeFilter) {\n        object.resizeFilter = this.resizeFilter.toObject();\n      }\n      return object;\n    },\n\n    /**\n     * Returns true if an image has crop applied, inspecting values of cropX,cropY,width,hight.\n     * @return {Boolean}\n     */\n    hasCrop: function() {\n      return this.cropX || this.cropY || this.width < this._element.width || this.height < this._element.height;\n    },\n\n    /* _TO_SVG_START_ */\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(), x = -this.width / 2, y = -this.height / 2, clipPath = '';\n      if (this.hasCrop()) {\n        var clipPathId = fabric.Object.__uid++;\n        markup.push(\n          '<clipPath id=\"imageCrop_' + clipPathId + '\">\\n',\n          '\\t<rect x=\"' + x + '\" y=\"' + y + '\" width=\"' + this.width + '\" height=\"' + this.height + '\" />\\n',\n          '</clipPath>\\n'\n        );\n        clipPath = ' clip-path=\"url(#imageCrop_' + clipPathId + ')\" ';\n      }\n      markup.push('<g transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\">\\n');\n      var imageMarkup = ['\\t<image ', this.getSvgId(), 'xlink:href=\"', this.getSvgSrc(true),\n        '\" x=\"', x - this.cropX, '\" y=\"', y - this.cropY,\n        '\" style=\"', this.getSvgStyles(),\n        // we're essentially moving origin of transformation from top/left corner to the center of the shape\n        // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n        // so that object's center aligns with container's left/top\n        '\" width=\"', this._element.width || this._element.naturalWidth,\n        '\" height=\"', this._element.height || this._element.height,\n        '\"', clipPath,\n        '></image>\\n'];\n      if (this.paintFirst === 'fill') {\n        Array.prototype.push.apply(markup, imageMarkup);\n      }\n      if (this.stroke || this.strokeDashArray) {\n        var origFill = this.fill;\n        this.fill = null;\n        markup.push(\n          '\\t<rect ',\n          'x=\"', x, '\" y=\"', y,\n          '\" width=\"', this.width, '\" height=\"', this.height,\n          '\" style=\"', this.getSvgStyles(),\n          '\"/>\\n'\n        );\n        this.fill = origFill;\n      }\n      if (this.paintFirst !== 'fill') {\n        Array.prototype.push.apply(markup, imageMarkup);\n      }\n      markup.push('</g>\\n');\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns source of an image\n     * @param {Boolean} filtered indicates if the src is needed for svg\n     * @return {String} Source of an image\n     */\n    getSrc: function(filtered) {\n      var element = filtered ? this._element : this._originalElement;\n      if (element) {\n        if (element.toDataURL) {\n          return element.toDataURL();\n        }\n        return element.src;\n      }\n      else {\n        return this.src || '';\n      }\n    },\n\n    /**\n     * Sets source of an image\n     * @param {String} src Source string (URL)\n     * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setSrc: function(src, callback, options) {\n      fabric.util.loadImage(src, function(img) {\n        this.setElement(img, options);\n        this._setWidthHeight();\n        callback(this);\n      }, this, options && options.crossOrigin);\n      return this;\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of an instance\n     */\n    toString: function() {\n      return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\n    },\n\n    applyResizeFilters: function() {\n      var filter = this.resizeFilter,\n          retinaScaling = this.canvas ? this.canvas.getRetinaScaling() : 1,\n          minimumScale = this.minimumScaleTrigger,\n          scaleX = this.scaleX * retinaScaling,\n          scaleY = this.scaleY * retinaScaling,\n          elementToFilter = this._filteredEl || this._originalElement;\n      if (this.group) {\n        this.set('dirty', true);\n      }\n      if (!filter || (scaleX > minimumScale && scaleY > minimumScale)) {\n        this._element = elementToFilter;\n        this._filterScalingX = 1;\n        this._filterScalingY = 1;\n        return;\n      }\n      if (!fabric.filterBackend) {\n        fabric.filterBackend = fabric.initFilterBackend();\n      }\n      var canvasEl = fabric.util.createCanvasElement(),\n          cacheKey = this._filteredEl ? this.cacheKey : (this.cacheKey + '_filtered'),\n          sourceWidth = elementToFilter.width, sourceHeight = elementToFilter.height;\n      canvasEl.width = sourceWidth;\n      canvasEl.height = sourceHeight;\n      this._element = canvasEl;\n      filter.scaleX = scaleX;\n      filter.scaleY = scaleY;\n      fabric.filterBackend.applyFilters(\n        [filter], elementToFilter, sourceWidth, sourceHeight, this._element, cacheKey);\n      this._filterScalingX = canvasEl.width / this._originalElement.width;\n      this._filterScalingY = canvasEl.height / this._originalElement.height;\n    },\n\n    /**\n     * Applies filters assigned to this image (from \"filters\" array) or from filter param\n     * @method applyFilters\n     * @param {Array} filters to be applied\n     * @param {Boolean} forResizing specify if the filter operation is a resize operation\n     * @return {thisArg} return the fabric.Image object\n     * @chainable\n     */\n    applyFilters: function(filters) {\n\n      filters = filters || this.filters || [];\n      filters = filters.filter(function(filter) { return filter; });\n      if (this.group) {\n        this.set('dirty', true);\n      }\n      if (filters.length === 0) {\n        this._element = this._originalElement;\n        this._filteredEl = null;\n        this._filterScalingX = 1;\n        this._filterScalingY = 1;\n        return this;\n      }\n\n      var imgElement = this._originalElement,\n          sourceWidth = imgElement.naturalWidth || imgElement.width,\n          sourceHeight = imgElement.naturalHeight || imgElement.height;\n\n      if (this._element === this._originalElement) {\n        // if the element is the same we need to create a new element\n        var canvasEl = fabric.util.createCanvasElement();\n        canvasEl.width = sourceWidth;\n        canvasEl.height = sourceHeight;\n        this._element = canvasEl;\n        this._filteredEl = canvasEl;\n      }\n      else {\n        // clear the existing element to get new filter data\n        this._element.getContext('2d').clearRect(0, 0, sourceWidth, sourceHeight);\n      }\n      if (!fabric.filterBackend) {\n        fabric.filterBackend = fabric.initFilterBackend();\n      }\n      fabric.filterBackend.applyFilters(\n        filters, this._originalElement, sourceWidth, sourceHeight, this._element, this.cacheKey);\n      if (this._originalElement.width !== this._element.width ||\n        this._originalElement.height !== this._element.height) {\n        this._filterScalingX = this._element.width / this._originalElement.width;\n        this._filterScalingY = this._element.height / this._originalElement.height;\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      if (this.isMoving === false && this.resizeFilter && this._needsResize()) {\n        this._lastScaleX = this.scaleX;\n        this._lastScaleY = this.scaleY;\n        this.applyResizeFilters();\n      }\n      this._stroke(ctx);\n      this._renderPaintInOrder(ctx);\n    },\n\n    _renderFill: function(ctx) {\n      var w = this.width, h = this.height, sW = w * this._filterScalingX, sH = h * this._filterScalingY,\n          x = -w / 2, y = -h / 2, elementToDraw = this._element;\n      elementToDraw && ctx.drawImage(elementToDraw,\n        this.cropX * this._filterScalingX,\n        this.cropY * this._filterScalingY,\n        sW,\n        sH,\n        x, y, w, h);\n    },\n\n    /**\n     * @private, needed to check if image needs resize\n     */\n    _needsResize: function() {\n      return (this.scaleX !== this._lastScaleX || this.scaleY !== this._lastScaleY);\n    },\n\n    /**\n     * @private\n     */\n    _resetWidthHeight: function() {\n      var element = this.getElement();\n\n      this.set('width', element.width);\n      this.set('height', element.height);\n    },\n\n    /**\n     * The Image class's initialization method. This method is automatically\n     * called by the constructor.\n     * @private\n     * @param {HTMLImageElement|String} element The element representing the image\n     * @param {Object} [options] Options object\n     */\n    _initElement: function(element, options) {\n      this.setElement(fabric.util.getById(element), options);\n      fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initConfig: function(options) {\n      options || (options = { });\n      this.setOptions(options);\n      this._setWidthHeight(options);\n      if (this._element && this.crossOrigin) {\n        this._element.crossOrigin = this.crossOrigin;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Array} filters to be initialized\n     * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created\n     */\n    _initFilters: function(filters, callback) {\n      if (filters && filters.length) {\n        fabric.util.enlivenObjects(filters, function(enlivenedObjects) {\n          callback && callback(enlivenedObjects);\n        }, 'fabric.Image.filters');\n      }\n      else {\n        callback && callback();\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Object with width/height properties\n     */\n    _setWidthHeight: function(options) {\n      this.width = options && ('width' in options)\n        ? options.width\n        : (this.getElement()\n          ? this.getElement().width || 0\n          : 0);\n\n      this.height = options && ('height' in options)\n        ? options.height\n        : (this.getElement()\n          ? this.getElement().height || 0\n          : 0);\n    },\n\n    /**\n     * Calculate offset for center and scale factor for the image in order to respect\n     * the preserveAspectRatio attribute\n     * @private\n     * @return {Object}\n     */\n    parsePreserveAspectRatioAttribute: function() {\n      var pAR = fabric.util.parsePreserveAspectRatioAttribute(this.preserveAspectRatio || ''),\n          rWidth = this._element.width, rHeight = this._element.height,\n          scaleX = 1, scaleY = 1, offsetLeft = 0, offsetTop = 0, cropX = 0, cropY = 0,\n          offset, pWidth = this.width, pHeight = this.height, parsedAttributes = { width: pWidth, height: pHeight };\n      if (pAR && (pAR.alignX !== 'none' || pAR.alignY !== 'none')) {\n        if (pAR.meetOrSlice === 'meet') {\n          scaleX = scaleY = fabric.util.findScaleToFit(this._element, parsedAttributes);\n          offset = (pWidth - rWidth * scaleX) / 2;\n          if (pAR.alignX === 'Min') {\n            offsetLeft = -offset;\n          }\n          if (pAR.alignX === 'Max') {\n            offsetLeft = offset;\n          }\n          offset = (pHeight - rHeight * scaleY) / 2;\n          if (pAR.alignY === 'Min') {\n            offsetTop = -offset;\n          }\n          if (pAR.alignY === 'Max') {\n            offsetTop = offset;\n          }\n        }\n        if (pAR.meetOrSlice === 'slice') {\n          scaleX = scaleY = fabric.util.findScaleToCover(this._element, parsedAttributes);\n          offset = rWidth - pWidth / scaleX;\n          if (pAR.alignX === 'Mid') {\n            cropX = offset / 2;\n          }\n          if (pAR.alignX === 'Max') {\n            cropX = offset;\n          }\n          offset = rHeight - pHeight / scaleY;\n          if (pAR.alignY === 'Mid') {\n            cropY = offset / 2;\n          }\n          if (pAR.alignY === 'Max') {\n            cropY = offset;\n          }\n          rWidth = pWidth / scaleX;\n          rHeight = pHeight / scaleY;\n        }\n      }\n      else {\n        scaleX = pWidth / rWidth;\n        scaleY = pHeight / rHeight;\n      }\n      return {\n        width: rWidth,\n        height: rHeight,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        offsetLeft: offsetLeft,\n        offsetTop: offsetTop,\n        cropX: cropX,\n        cropY: cropY\n      };\n    }\n  });\n\n  /**\n   * Default CSS class name for canvas\n   * @static\n   * @type String\n   * @default\n   */\n  fabric.Image.CSS_CANVAS = 'canvas-img';\n\n  /**\n   * Alias for getSrc\n   * @static\n   */\n  fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\n\n  /**\n   * Creates an instance of fabric.Image from its object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} callback Callback to invoke when an image instance is created\n   */\n  fabric.Image.fromObject = function(_object, callback) {\n    var object = fabric.util.object.clone(_object);\n    fabric.util.loadImage(object.src, function(img, error) {\n      if (error) {\n        callback && callback(null, error);\n        return;\n      }\n      fabric.Image.prototype._initFilters.call(object, object.filters, function(filters) {\n        object.filters = filters || [];\n        fabric.Image.prototype._initFilters.call(object, [object.resizeFilter], function(resizeFilters) {\n          object.resizeFilter = resizeFilters[0];\n          var image = new fabric.Image(img, object);\n          callback(image);\n        });\n      });\n    }, null, object.crossOrigin);\n  };\n\n  /**\n   * Creates an instance of fabric.Image from an URL string\n   * @static\n   * @param {String} url URL to create an image from\n   * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument)\n   * @param {Object} [imgOptions] Options object\n   */\n  fabric.Image.fromURL = function(url, callback, imgOptions) {\n    fabric.util.loadImage(url, function(img) {\n      callback && callback(new fabric.Image(img, imgOptions));\n    }, null, imgOptions && imgOptions.crossOrigin);\n  };\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})\n   * @static\n   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n   */\n  fabric.Image.ATTRIBUTE_NAMES =\n    fabric.SHARED_ATTRIBUTES.concat('x y width height preserveAspectRatio xlink:href crossOrigin'.split(' '));\n\n  /**\n   * Returns {@link fabric.Image} instance from an SVG element\n   * @static\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} callback Callback to execute when fabric.Image object is created\n   * @return {fabric.Image} Instance of fabric.Image\n   */\n  fabric.Image.fromElement = function(element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES);\n    fabric.Image.fromURL(parsedAttributes['xlink:href'], callback,\n      extend((options ? fabric.util.object.clone(options) : { }), parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\nfabric.util.object.extend(fabric.Object.prototype, /** @lends fabric.Object.prototype */ {\n\n  /**\n   * @private\n   * @return {Number} angle value\n   */\n  _getAngleValueForStraighten: function() {\n    var angle = this.angle % 360;\n    if (angle > 0) {\n      return Math.round((angle - 1) / 90) * 90;\n    }\n    return Math.round(angle / 90) * 90;\n  },\n\n  /**\n   * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  straighten: function() {\n    this.rotate(this._getAngleValueForStraighten());\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Object.prototype.straighten} but with animation\n   * @param {Object} callbacks Object with callback functions\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  fxStraighten: function(callbacks) {\n    callbacks = callbacks || { };\n\n    var empty = function() { },\n        onComplete = callbacks.onComplete || empty,\n        onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: this.get('angle'),\n      endValue: this._getAngleValueForStraighten(),\n      duration: this.FX_DURATION,\n      onChange: function(value) {\n        _this.rotate(value);\n        onChange();\n      },\n      onComplete: function() {\n        _this.setCoords();\n        onComplete();\n      },\n    });\n\n    return this;\n  }\n});\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype, /** @lends fabric.StaticCanvas.prototype */ {\n\n  /**\n   * Straightens object, then rerenders canvas\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  straightenObject: function (object) {\n    object.straighten();\n    this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxStraightenObject: function (object) {\n    object.fxStraighten({\n      onChange: this.requestRenderAllBound\n    });\n    return this;\n  }\n});\n\n\n(function() {\n\n  'use strict';\n\n  /**\n   * Tests if webgl supports certain precision\n   * @param {WebGL} Canvas WebGL context to test on\n   * @param {String} Precision to test can be any of following: 'lowp', 'mediump', 'highp'\n   * @returns {Boolean} Whether the user's browser WebGL supports given precision.\n   */\n  function testPrecision(gl, precision){\n    var fragmentSource = 'precision ' + precision + ' float;\\nvoid main(){}';\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Indicate whether this filtering backend is supported by the user's browser.\n   * @param {Number} tileSize check if the tileSize is supported\n   * @returns {Boolean} Whether the user's browser supports WebGL.\n   */\n  fabric.isWebglSupported = function(tileSize) {\n    if (fabric.isLikelyNode) {\n      return false;\n    }\n    tileSize = tileSize || fabric.WebglFilterBackend.prototype.tileSize;\n    var canvas = document.createElement('canvas');\n    var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n    var isSupported = false;\n    // eslint-disable-next-line\n    if (gl) {\n      fabric.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n      isSupported = fabric.maxTextureSize >= tileSize;\n      var precisions = ['highp', 'mediump', 'lowp'];\n      for (var i = 0; i < 3; i++){\n        if (testPrecision(gl, precisions[i])){\n          fabric.webGlPrecision = precisions[i];\n          break;\n        };\n      }\n    }\n    this.isSupported = isSupported;\n    return isSupported;\n  };\n\n  fabric.WebglFilterBackend = WebglFilterBackend;\n\n  /**\n   * WebGL filter backend.\n   */\n  function WebglFilterBackend(options) {\n    if (options && options.tileSize) {\n      this.tileSize = options.tileSize;\n    }\n    this.setupGLContext(this.tileSize, this.tileSize);\n    this.captureGPUInfo();\n  };\n\n  WebglFilterBackend.prototype = /** @lends fabric.WebglFilterBackend.prototype */ {\n\n    tileSize: 2048,\n\n    /**\n     * Experimental. This object is a sort of repository of help layers used to avoid\n     * of recreating them during frequent filtering. If you are previewing a filter with\n     * a slider you problably do not want to create help layers every filter step.\n     * in this object there will be appended some canvases, created once, resized sometimes\n     * cleared never. Clearing is left to the developer.\n     **/\n    resources: {\n\n    },\n\n    /**\n     * Setup a WebGL context suitable for filtering, and bind any needed event handlers.\n     */\n    setupGLContext: function(width, height) {\n      this.dispose();\n      this.createWebGLCanvas(width, height);\n      // eslint-disable-next-line\n      this.aPosition = new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]);\n      this.chooseFastestCopyGLTo2DMethod(width, height);\n    },\n\n    /**\n     * Pick a method to copy data from GL context to 2d canvas.  In some browsers using\n     * putImageData is faster than drawImage for that specific operation.\n     */\n    chooseFastestCopyGLTo2DMethod: function(width, height) {\n      var canMeasurePerf = typeof window.performance !== 'undefined';\n      var canUseImageData;\n      try {\n        new ImageData(1, 1);\n        canUseImageData = true;\n      }\n      catch (e) {\n        canUseImageData = false;\n      }\n      // eslint-disable-next-line no-undef\n      var canUseArrayBuffer = typeof ArrayBuffer !== 'undefined';\n      // eslint-disable-next-line no-undef\n      var canUseUint8Clamped = typeof Uint8ClampedArray !== 'undefined';\n\n      if (!(canMeasurePerf && canUseImageData && canUseArrayBuffer && canUseUint8Clamped)) {\n        return;\n      }\n\n      var targetCanvas = fabric.util.createCanvasElement();\n      // eslint-disable-next-line no-undef\n      var imageBuffer = new ArrayBuffer(width * height * 4);\n      var testContext = {\n        imageBuffer: imageBuffer,\n        destinationWidth: width,\n        destinationHeight: height,\n        targetCanvas: targetCanvas\n      };\n      var startTime, drawImageTime, putImageDataTime;\n      targetCanvas.width = width;\n      targetCanvas.height = height;\n\n      startTime = window.performance.now();\n      copyGLTo2DDrawImage.call(testContext, this.gl, testContext);\n      drawImageTime = window.performance.now() - startTime;\n\n      startTime = window.performance.now();\n      copyGLTo2DPutImageData.call(testContext, this.gl, testContext);\n      putImageDataTime = window.performance.now() - startTime;\n\n      if (drawImageTime > putImageDataTime) {\n        this.imageBuffer = imageBuffer;\n        this.copyGLTo2D = copyGLTo2DPutImageData;\n      }\n      else {\n        this.copyGLTo2D = copyGLTo2DDrawImage;\n      }\n    },\n\n    /**\n     * Create a canvas element and associated WebGL context and attaches them as\n     * class properties to the GLFilterBackend class.\n     */\n    createWebGLCanvas: function(width, height) {\n      var canvas = fabric.util.createCanvasElement();\n      canvas.width = width;\n      canvas.height = height;\n      var glOptions = {\n            alpha: true,\n            premultipliedAlpha: false,\n            depth: false,\n            stencil: false,\n            antialias: false\n          },\n          gl = canvas.getContext('webgl', glOptions);\n      if (!gl) {\n        gl = canvas.getContext('experimental-webgl', glOptions);\n      }\n      if (!gl) {\n        return;\n      }\n      gl.clearColor(0, 0, 0, 0);\n      // this canvas can fire webglcontextlost and webglcontextrestored\n      this.canvas = canvas;\n      this.gl = gl;\n    },\n\n    /**\n     * Attempts to apply the requested filters to the source provided, drawing the filtered output\n     * to the provided target canvas.\n     *\n     * @param {Array} filters The filters to apply.\n     * @param {HTMLImageElement|HTMLCanvasElement} source The source to be filtered.\n     * @param {Number} width The width of the source input.\n     * @param {Number} height The height of the source input.\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n     * @param {String|undefined} cacheKey A key used to cache resources related to the source. If\n     * omitted, caching will be skipped.\n     */\n    applyFilters: function(filters, source, width, height, targetCanvas, cacheKey) {\n      var gl = this.gl;\n      var cachedTexture;\n      if (cacheKey) {\n        cachedTexture = this.getCachedTexture(cacheKey, source);\n      }\n      var pipelineState = {\n        originalWidth: source.width || source.originalWidth,\n        originalHeight: source.height || source.originalHeight,\n        sourceWidth: width,\n        sourceHeight: height,\n        destinationWidth: width,\n        destinationHeight: height,\n        context: gl,\n        sourceTexture: this.createTexture(gl, width, height, !cachedTexture && source),\n        targetTexture: this.createTexture(gl, width, height),\n        originalTexture: cachedTexture ||\n          this.createTexture(gl, width, height, !cachedTexture && source),\n        passes: filters.length,\n        webgl: true,\n        aPosition: this.aPosition,\n        programCache: this.programCache,\n        pass: 0,\n        filterBackend: this,\n        targetCanvas: targetCanvas\n      };\n      var tempFbo = gl.createFramebuffer();\n      gl.bindFramebuffer(gl.FRAMEBUFFER, tempFbo);\n      filters.forEach(function(filter) { filter && filter.applyTo(pipelineState); });\n      resizeCanvasIfNeeded(pipelineState);\n      this.copyGLTo2D(gl, pipelineState);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n      gl.deleteTexture(pipelineState.sourceTexture);\n      gl.deleteTexture(pipelineState.targetTexture);\n      gl.deleteFramebuffer(tempFbo);\n      targetCanvas.getContext('2d').setTransform(1, 0, 0, 1, 0, 0);\n      return pipelineState;\n    },\n\n    /**\n     * The same as the applyFilter method but with additional logging of WebGL\n     * errors.\n     */\n    applyFiltersDebug: function(filters, source, width, height, targetCanvas, cacheKey) {\n      // The following code is useful when debugging a specific issue but adds ~10x slowdown.\n      var gl = this.gl;\n      var ret = this.applyFilters(filters, source, width, height, targetCanvas, cacheKey);\n      var glError = gl.getError();\n      if (glError !== gl.NO_ERROR) {\n        var errorString = this.glErrorToString(gl, glError);\n        var error = new Error('WebGL Error ' + errorString);\n        error.glErrorCode = glError;\n        throw error;\n      }\n      return ret;\n    },\n\n    glErrorToString: function(context, errorCode) {\n      if (!context) {\n        return 'Context undefined for error code: ' + errorCode;\n      }\n      else if (typeof errorCode !== 'number') {\n        return 'Error code is not a number';\n      }\n      switch (errorCode) {\n        case context.NO_ERROR:\n          return 'NO_ERROR';\n        case context.INVALID_ENUM:\n          return 'INVALID_ENUM';\n        case context.INVALID_VALUE:\n          return 'INVALID_VALUE';\n        case context.INVALID_OPERATION:\n          return 'INVALID_OPERATION';\n        case context.INVALID_FRAMEBUFFER_OPERATION:\n          return 'INVALID_FRAMEBUFFER_OPERATION';\n        case context.OUT_OF_MEMORY:\n          return 'OUT_OF_MEMORY';\n        case context.CONTEXT_LOST_WEBGL:\n          return 'CONTEXT_LOST_WEBGL';\n        default:\n          return 'UNKNOWN_ERROR';\n      }\n    },\n\n    /**\n     * Detach event listeners, remove references, and clean up caches.\n     */\n    dispose: function() {\n      if (this.canvas) {\n        this.canvas = null;\n        this.gl = null;\n      }\n      this.clearWebGLCaches();\n    },\n\n    /**\n     * Wipe out WebGL-related caches.\n     */\n    clearWebGLCaches: function() {\n      this.programCache = {};\n      this.textureCache = {};\n    },\n\n    /**\n     * Create a WebGL texture object.\n     *\n     * Accepts specific dimensions to initialize the textuer to or a source image.\n     *\n     * @param {WebGLRenderingContext} gl The GL context to use for creating the texture.\n     * @param {Number} width The width to initialize the texture at.\n     * @param {Number} height The height to initialize the texture.\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source for the texture data.\n     * @returns {WebGLTexture}\n     */\n    createTexture: function(gl, width, height, textureImageSource) {\n      var texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      if (textureImageSource) {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, textureImageSource);\n      }\n      else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n      return texture;\n    },\n\n    /**\n     * Can be optionally used to get a texture from the cache array\n     *\n     * If an existing texture is not found, a new texture is created and cached.\n     *\n     * @param {String} uniqueId A cache key to use to find an existing texture.\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source to use to create the\n     * texture cache entry if one does not already exist.\n     */\n    getCachedTexture: function(uniqueId, textureImageSource) {\n      if (this.textureCache[uniqueId]) {\n        return this.textureCache[uniqueId];\n      }\n      else {\n        var texture = this.createTexture(\n          this.gl, textureImageSource.width, textureImageSource.height, textureImageSource);\n        this.textureCache[uniqueId] = texture;\n        return texture;\n      }\n    },\n\n    /**\n     * Clear out cached resources related to a source image that has been\n     * filtered previously.\n     *\n     * @param {String} cacheKey The cache key provided when the source image was filtered.\n     */\n    evictCachesForKey: function(cacheKey) {\n      if (this.textureCache[cacheKey]) {\n        this.gl.deleteTexture(this.textureCache[cacheKey]);\n        delete this.textureCache[cacheKey];\n      }\n    },\n\n    copyGLTo2D: copyGLTo2DDrawImage,\n\n    /**\n     * Attempt to extract GPU information strings from a WebGL context.\n     *\n     * Useful information when debugging or blacklisting specific GPUs.\n     *\n     * @returns {Object} A GPU info object with renderer and vendor strings.\n     */\n    captureGPUInfo: function() {\n      if (this.gpuInfo) {\n        return this.gpuInfo;\n      }\n      var gl = this.gl;\n      var ext = gl.getExtension('WEBGL_debug_renderer_info');\n      var gpuInfo = { renderer: '', vendor: '' };\n      if (ext) {\n        var renderer = gl.getParameter(ext.UNMASKED_RENDERER_WEBGL);\n        var vendor = gl.getParameter(ext.UNMASKED_VENDOR_WEBGL);\n        if (renderer) {\n          gpuInfo.renderer = renderer.toLowerCase();\n        }\n        if (vendor) {\n          gpuInfo.vendor = vendor.toLowerCase();\n        }\n      }\n      this.gpuInfo = gpuInfo;\n      return gpuInfo;\n    },\n  };\n})();\n\nfunction resizeCanvasIfNeeded(pipelineState) {\n  var targetCanvas = pipelineState.targetCanvas,\n      width = targetCanvas.width, height = targetCanvas.height,\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight;\n\n  if (width !== dWidth || height !== dHeight) {\n    targetCanvas.width = dWidth;\n    targetCanvas.height = dHeight;\n  }\n}\n\n/**\n * Copy an input WebGL canvas on to an output 2D canvas.\n *\n * The WebGL canvas is assumed to be upside down, with the top-left pixel of the\n * desired output image appearing in the bottom-left corner of the WebGL canvas.\n *\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n * @param {Object} pipelineState The 2D target canvas to copy on to.\n */\nfunction copyGLTo2DDrawImage(gl, pipelineState) {\n  var glCanvas = gl.canvas, targetCanvas = pipelineState.targetCanvas,\n      ctx = targetCanvas.getContext('2d');\n  ctx.translate(0, targetCanvas.height); // move it down again\n  ctx.scale(1, -1); // vertical flip\n  // where is my image on the big glcanvas?\n  var sourceY = glCanvas.height - targetCanvas.height;\n  ctx.drawImage(glCanvas, 0, sourceY, targetCanvas.width, targetCanvas.height, 0, 0,\n    targetCanvas.width, targetCanvas.height);\n}\n\n/**\n * Copy an input WebGL canvas on to an output 2D canvas using 2d canvas' putImageData\n * API. Measurably faster than using ctx.drawImage in Firefox (version 54 on OSX Sierra).\n *\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n * @param {Object} pipelineState The 2D target canvas to copy on to.\n */\nfunction copyGLTo2DPutImageData(gl, pipelineState) {\n  var targetCanvas = pipelineState.targetCanvas, ctx = targetCanvas.getContext('2d'),\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight,\n      numBytes = dWidth * dHeight * 4;\n\n  // eslint-disable-next-line no-undef\n  var u8 = new Uint8Array(this.imageBuffer, 0, numBytes);\n  // eslint-disable-next-line no-undef\n  var u8Clamped = new Uint8ClampedArray(this.imageBuffer, 0, numBytes);\n\n  gl.readPixels(0, 0, dWidth, dHeight, gl.RGBA, gl.UNSIGNED_BYTE, u8);\n  var imgData = new ImageData(u8Clamped, dWidth, dHeight);\n  ctx.putImageData(imgData, 0, 0);\n}\n\n\n(function() {\n\n  'use strict';\n\n  var noop = function() {};\n\n  fabric.Canvas2dFilterBackend = Canvas2dFilterBackend;\n\n  /**\n   * Canvas 2D filter backend.\n   */\n  function Canvas2dFilterBackend() {};\n\n  Canvas2dFilterBackend.prototype = /** @lends fabric.Canvas2dFilterBackend.prototype */ {\n    evictCachesForKey: noop,\n    dispose: noop,\n    clearWebGLCaches: noop,\n\n    /**\n     * Experimental. This object is a sort of repository of help layers used to avoid\n     * of recreating them during frequent filtering. If you are previewing a filter with\n     * a slider you probably do not want to create help layers every filter step.\n     * in this object there will be appended some canvases, created once, resized sometimes\n     * cleared never. Clearing is left to the developer.\n     **/\n    resources: {\n\n    },\n\n    /**\n     * Apply a set of filters against a source image and draw the filtered output\n     * to the provided destination canvas.\n     *\n     * @param {EnhancedFilter} filters The filter to apply.\n     * @param {HTMLImageElement|HTMLCanvasElement} sourceElement The source to be filtered.\n     * @param {Number} sourceWidth The width of the source input.\n     * @param {Number} sourceHeight The height of the source input.\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n     */\n    applyFilters: function(filters, sourceElement, sourceWidth, sourceHeight, targetCanvas) {\n      var ctx = targetCanvas.getContext('2d');\n      ctx.drawImage(sourceElement, 0, 0, sourceWidth, sourceHeight);\n      var imageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n      var originalImageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n      var pipelineState = {\n        sourceWidth: sourceWidth,\n        sourceHeight: sourceHeight,\n        imageData: imageData,\n        originalEl: sourceElement,\n        originalImageData: originalImageData,\n        canvasEl: targetCanvas,\n        ctx: ctx,\n        filterBackend: this,\n      };\n      filters.forEach(function(filter) { filter.applyTo(pipelineState); });\n      if (pipelineState.imageData.width !== sourceWidth || pipelineState.imageData.height !== sourceHeight) {\n        targetCanvas.width = pipelineState.imageData.width;\n        targetCanvas.height = pipelineState.imageData.height;\n      }\n      ctx.putImageData(pipelineState.imageData, 0, 0);\n      return pipelineState;\n    },\n\n  };\n})();\n\n\n/**\n * @namespace fabric.Image.filters\n * @memberOf fabric.Image\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#image_filters}\n * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n */\nfabric.Image.filters = fabric.Image.filters || { };\n\n/**\n * Root filter class from which all filter classes inherit from\n * @class fabric.Image.filters.BaseFilter\n * @memberOf fabric.Image.filters\n */\nfabric.Image.filters.BaseFilter = fabric.util.createClass(/** @lends fabric.Image.filters.BaseFilter.prototype */ {\n\n  /**\n   * Filter type\n   * @param {String} type\n   * @default\n   */\n  type: 'BaseFilter',\n\n  /**\n   * Array of attributes to send with buffers. do not modify\n   * @private\n   */\n\n  vertexSource: 'attribute vec2 aPosition;\\n' +\n    'varying vec2 vTexCoord;\\n' +\n    'void main() {\\n' +\n      'vTexCoord = aPosition;\\n' +\n      'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' +\n    '}',\n\n  fragmentSource: 'precision highp float;\\n' +\n    'varying vec2 vTexCoord;\\n' +\n    'uniform sampler2D uTexture;\\n' +\n    'void main() {\\n' +\n      'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n    '}',\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  initialize: function(options) {\n    if (options) {\n      this.setOptions(options);\n    }\n  },\n\n  /**\n   * Sets filter's properties from options\n   * @param {Object} [options] Options object\n   */\n  setOptions: function(options) {\n    for (var prop in options) {\n      this[prop] = options[prop];\n    }\n  },\n\n  /**\n   * Compile this filter's shader program.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context to use for shader compilation.\n   * @param {String} fragmentSource fragmentShader source for compilation\n   * @param {String} vertexSource vertexShader source for compilation\n   */\n  createProgram: function(gl, fragmentSource, vertexSource) {\n    fragmentSource = fragmentSource || this.fragmentSource;\n    vertexSource = vertexSource || this.vertexSource;\n    if (fabric.webGlPrecision !== 'highp'){\n      fragmentSource = fragmentSource.replace(\n        /precision highp float/g,\n        'precision ' + fabric.webGlPrecision + ' float'\n      );\n    }\n    var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertexShader, vertexSource);\n    gl.compileShader(vertexShader);\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Vertex shader compile error for ' + this.type + ': ' +\n        gl.getShaderInfoLog(vertexShader)\n      );\n    }\n\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Fragment shader compile error for ' + this.type + ': ' +\n        gl.getShaderInfoLog(fragmentShader)\n      );\n    }\n\n    var program = gl.createProgram();\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      throw new Error(\n        // eslint-disable-next-line prefer-template\n        'Shader link error for \"${this.type}\" ' +\n        gl.getProgramInfoLog(program)\n      );\n    }\n\n    var attributeLocations = this.getAttributeLocations(gl, program);\n    var uniformLocations = this.getUniformLocations(gl, program) || { };\n    uniformLocations.uStepW = gl.getUniformLocation(program, 'uStepW');\n    uniformLocations.uStepH = gl.getUniformLocation(program, 'uStepH');\n    return {\n      program: program,\n      attributeLocations: attributeLocations,\n      uniformLocations: uniformLocations\n    };\n  },\n\n  /**\n   * Return a map of attribute names to WebGLAttributeLocation objects.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take attribute locations.\n   * @returns {Object} A map of attribute names to attribute locations.\n   */\n  getAttributeLocations: function(gl, program) {\n    return {\n      aPosition: gl.getAttribLocation(program, 'aPosition'),\n    };\n  },\n\n  /**\n   * Return a map of uniform names to WebGLUniformLocation objects.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take uniform locations.\n   * @returns {Object} A map of uniform names to uniform locations.\n   */\n  getUniformLocations: function (/* gl, program */) {\n    // in case i do not need any special uniform i need to return an empty object\n    return { };\n  },\n\n  /**\n   * Send attribute data from this filter to its shader program on the GPU.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} attributeLocations A map of shader attribute names to their locations.\n   */\n  sendAttributeData: function(gl, attributeLocations, aPositionData) {\n    var attributeLocation = attributeLocations.aPosition;\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.enableVertexAttribArray(attributeLocation);\n    gl.vertexAttribPointer(attributeLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, aPositionData, gl.STATIC_DRAW);\n  },\n\n  _setupFrameBuffer: function(options) {\n    var gl = options.context, width, height;\n    if (options.passes > 1) {\n      width = options.destinationWidth;\n      height = options.destinationHeight;\n      if (options.sourceWidth !== width || options.sourceHeight !== height) {\n        gl.deleteTexture(options.targetTexture);\n        options.targetTexture = options.filterBackend.createTexture(gl, width, height);\n      }\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D,\n        options.targetTexture, 0);\n    }\n    else {\n      // draw last filter on canvas and not to framebuffer.\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.finish();\n    }\n  },\n\n  _swapTextures: function(options) {\n    options.passes--;\n    options.pass++;\n    var temp = options.targetTexture;\n    options.targetTexture = options.sourceTexture;\n    options.sourceTexture = temp;\n  },\n\n  /**\n   * Intentionally left blank, to be overridden in custom filters\n   * @param {Object} options\n   **/\n  isNeutralState: function(/* options */) {\n    return false;\n  },\n\n  /**\n   * Apply this filter to the input image data provided.\n   *\n   * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyTo: function(options) {\n    if (options.webgl) {\n      if (options.passes > 1 && this.isNeutralState(options)) {\n        // avoid doing something that we do not need\n        return;\n      }\n      this._setupFrameBuffer(options);\n      this.applyToWebGL(options);\n      this._swapTextures(options);\n    }\n    else if (!this.isNeutralState()) {\n      this.applyTo2d(options);\n    }\n  },\n\n  /**\n   * Retrieves the cached shader.\n   * @param {Object} options\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  retrieveShader: function(options) {\n    if (!options.programCache.hasOwnProperty(this.type)) {\n      options.programCache[this.type] = this.createProgram(options.context);\n    }\n    return options.programCache[this.type];\n  },\n\n  /**\n   * Apply this filter using webgl.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.originalTexture The texture of the original input image.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyToWebGL: function(options) {\n    var gl = options.context;\n    var shader = this.retrieveShader(options);\n    if (options.pass === 0 && options.originalTexture) {\n      gl.bindTexture(gl.TEXTURE_2D, options.originalTexture);\n    }\n    else {\n      gl.bindTexture(gl.TEXTURE_2D, options.sourceTexture);\n    }\n    gl.useProgram(shader.program);\n    this.sendAttributeData(gl, shader.attributeLocations, options.aPosition);\n\n    gl.uniform1f(shader.uniformLocations.uStepW, 1 / options.sourceWidth);\n    gl.uniform1f(shader.uniformLocations.uStepH, 1 / options.sourceHeight);\n\n    this.sendUniformData(gl, shader.uniformLocations);\n    gl.viewport(0, 0, options.destinationWidth, options.destinationHeight);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  },\n\n  bindAdditionalTexture: function(gl, texture, textureUnit) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    // reset active texture to 0 as usual\n    gl.activeTexture(gl.TEXTURE0);\n  },\n\n  unbindAdditionalTexture: function(gl, textureUnit) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.activeTexture(gl.TEXTURE0);\n  },\n\n  getMainParameter: function() {\n    return this[this.mainParameter];\n  },\n\n  setMainParameter: function(value) {\n    this[this.mainParameter] = value;\n  },\n\n  /**\n   * Send uniform data from this filter to its shader program on the GPU.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} uniformLocations A map of shader uniform names to their locations.\n   */\n  sendUniformData: function(/* gl, uniformLocations */) {\n    // Intentionally left blank.  Override me in subclasses.\n  },\n\n  /**\n   * If needed by a 2d filter, this functions can create an helper canvas to be used\n   * remember that options.targetCanvas is available for use till end of chain.\n   */\n  createHelpLayer: function(options) {\n    if (!options.helpLayer) {\n      var helpLayer = document.createElement('canvas');\n      helpLayer.width = options.sourceWidth;\n      helpLayer.height = options.sourceHeight;\n      options.helpLayer = helpLayer;\n    }\n  },\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject: function() {\n    var object = { type: this.type }, mainP = this.mainParameter;\n    if (mainP) {\n      object[mainP] = this[mainP];\n    }\n    return object;\n  },\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON: function() {\n    // delegate, not alias\n    return this.toObject();\n  }\n});\n\nfabric.Image.filters.BaseFilter.fromObject = function(object, callback) {\n  var filter = new fabric.Image.filters[object.type](object);\n  callback && callback(filter);\n  return filter;\n};\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Matrix filter class\n   * @class fabric.Image.filters.ColorMatrix\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.ColorMatrix#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @see {@Link http://www.webwasp.co.uk/tutorials/219/Color_Matrix_Filter.php}\n   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl}\n   * @example <caption>Kodachrome filter</caption>\n   * var filter = new fabric.Image.filters.ColorMatrix({\n   *  matrix: [\n       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n       0, 0, 0, 1, 0\n      ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.ColorMatrix = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.ColorMatrix.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'ColorMatrix',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'uniform mat4 uColorMatrix;\\n' +\n      'uniform vec4 uConstants;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color *= uColorMatrix;\\n' +\n        'color += uConstants;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Colormatrix for pixels.\n     * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n     * outside the -1, 1 range.\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n     * @param {Array} matrix array of 20 numbers.\n     * @default\n     */\n    matrix: [\n      1, 0, 0, 0, 0,\n      0, 1, 0, 0, 0,\n      0, 0, 1, 0, 0,\n      0, 0, 0, 1, 0\n    ],\n\n    mainParameter: 'matrix',\n\n    /**\n     * Lock the colormatrix on the color part, skipping alpha, manly for non webgl scenario\n     * to save some calculation\n     */\n    colorsOnly: true,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      // create a new array instead mutating the prototype with push\n      this.matrix = this.matrix.slice(0);\n    },\n\n    /**\n     * Intentionally left blank, to be overridden in custom filters\n     * @param {Object} options\n     **/\n    isNeutralState: function(/* options */) {\n      var _class = filters.ColorMatrix;\n      for (var i = 20; i--;) {\n        if (this.matrix[i] !== _class.prototype.matrix[i]) {\n          return false;\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Apply the ColorMatrix operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = data.length,\n          m = this.matrix,\n          r, g, b, a, i, colorsOnly = this.colorsOnly;\n\n      for (i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n        if (colorsOnly) {\n          data[i] = r * m[0] + g * m[1] + b * m[2] + m[4] * 255;\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + m[9] * 255;\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + m[14] * 255;\n        }\n        else {\n          a = data[i + 3];\n          data[i] = r * m[0] + g * m[1] + b * m[2] + a * m[3] + m[4] * 255;\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + a * m[8] + m[9] * 255;\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + a * m[13] + m[14] * 255;\n          data[i + 3] = r * m[15] + g * m[16] + b * m[17] + a * m[18] + m[19] * 255;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uColorMatrix: gl.getUniformLocation(program, 'uColorMatrix'),\n        uConstants: gl.getUniformLocation(program, 'uConstants'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var m = this.matrix,\n          matrix = [\n            m[0], m[1], m[2], m[3],\n            m[5], m[6], m[7], m[8],\n            m[10], m[11], m[12], m[13],\n            m[15], m[16], m[17], m[18]\n          ],\n          constants = [m[4], m[9], m[14], m[19]];\n      gl.uniformMatrix4fv(uniformLocations.uColorMatrix, false, matrix);\n      gl.uniform4fv(uniformLocations.uConstants, constants);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] function to invoke after filter creation\n   * @return {fabric.Image.filters.ColorMatrix} Instance of fabric.Image.filters.ColorMatrix\n   */\n  fabric.Image.filters.ColorMatrix.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Brightness filter class\n   * @class fabric.Image.filters.Brightness\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Brightness({\n   *   brightness: 0.05\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Brightness = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Brightness.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Brightness',\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uBrightness;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color.rgb += uBrightness;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Brightness value, from -1 to 1.\n     * translated to -255 to 255 for 2d\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n     * @param {Number} brightness\n     * @default\n     */\n    brightness: 0,\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'brightness',\n\n    /**\n    * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n    *\n    * @param {Object} options\n    * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n    */\n    applyTo2d: function(options) {\n      if (this.brightness === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, i, len = data.length,\n          brightness = Math.round(this.brightness * 255);\n      for (i = 0; i < len; i += 4) {\n        data[i] = data[i] + brightness;\n        data[i + 1] = data[i + 1] + brightness;\n        data[i + 2] = data[i + 2] + brightness;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uBrightness: gl.getUniformLocation(program, 'uBrightness'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uBrightness, this.brightness);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness\n   */\n  fabric.Image.filters.Brightness.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n   * @class fabric.Image.filters.Convolute\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example <caption>Sharpen filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 0, -1,  0,\n   *            -1,  5, -1,\n   *             0, -1,  0 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Blur filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Emboss filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Emboss filter with opaqueness</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   opaque: true,\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Convolute = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Convolute.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Convolute',\n\n    /*\n     * Opaque value (true/false)\n     */\n    opaque: false,\n\n    /*\n     * matrix for the filter, max 9x9\n     */\n    matrix: [0, 0, 0, 0, 1, 0, 0, 0, 0],\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: {\n      Convolute_3_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[9];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 1), uStepH * (h - 1));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 3.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_3_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[9];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 1.0), uStepH * (h - 1.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 3.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_5_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[25];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 5.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_5_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[25];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 5.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_7_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[49];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 7.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_7_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[49];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 7.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n      Convolute_9_1: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[81];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 0);\\n' +\n          'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' +\n              'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 9.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      Convolute_9_0: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform float uMatrix[81];\\n' +\n        'uniform float uStepW;\\n' +\n        'uniform float uStepH;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = vec4(0, 0, 0, 1);\\n' +\n          'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' +\n            'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' +\n              'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' +\n              'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 9.0 + w)];\\n' +\n            '}\\n' +\n          '}\\n' +\n          'float alpha = texture2D(uTexture, vTexCoord).a;\\n' +\n          'gl_FragColor = color;\\n' +\n          'gl_FragColor.a = alpha;\\n' +\n        '}',\n    },\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Convolute.prototype\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.opaque=false] Opaque value (true/false)\n     * @param {Array} [options.matrix] Filter matrix\n     */\n\n\n    /**\n    * Retrieves the cached shader.\n    * @param {Object} options\n    * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n    * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n    */\n    retrieveShader: function(options) {\n      var size = Math.sqrt(this.matrix.length);\n      var cacheKey = this.type + '_' + size + '_' + (this.opaque ? 1 : 0);\n      var shaderSource = this.fragmentSource[cacheKey];\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          weights = this.matrix,\n          side = Math.round(Math.sqrt(weights.length)),\n          halfSide = Math.floor(side / 2),\n          sw = imageData.width,\n          sh = imageData.height,\n          output = options.ctx.createImageData(sw, sh),\n          dst = output.data,\n          // go through the destination image pixels\n          alphaFac = this.opaque ? 1 : 0,\n          r, g, b, a, dstOff,\n          scx, scy, srcOff, wt,\n          x, y, cx, cy;\n\n      for (y = 0; y < sh; y++) {\n        for (x = 0; x < sw; x++) {\n          dstOff = (y * sw + x) * 4;\n          // calculate the weighed sum of the source image pixels that\n          // fall under the convolution matrix\n          r = 0; g = 0; b = 0; a = 0;\n\n          for (cy = 0; cy < side; cy++) {\n            for (cx = 0; cx < side; cx++) {\n              scy = y + cy - halfSide;\n              scx = x + cx - halfSide;\n\n              // eslint-disable-next-line max-depth\n              if (scy < 0 || scy > sh || scx < 0 || scx > sw) {\n                continue;\n              }\n\n              srcOff = (scy * sw + scx) * 4;\n              wt = weights[cy * side + cx];\n\n              r += data[srcOff] * wt;\n              g += data[srcOff + 1] * wt;\n              b += data[srcOff + 2] * wt;\n              // eslint-disable-next-line max-depth\n              if (!alphaFac) {\n                a += data[srcOff + 3] * wt;\n              }\n            }\n          }\n          dst[dstOff] = r;\n          dst[dstOff + 1] = g;\n          dst[dstOff + 2] = b;\n          if (!alphaFac) {\n            dst[dstOff + 3] = a;\n          }\n          else {\n            dst[dstOff + 3] = data[dstOff + 3];\n          }\n        }\n      }\n      options.imageData = output;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uMatrix: gl.getUniformLocation(program, 'uMatrix'),\n        uOpaque: gl.getUniformLocation(program, 'uOpaque'),\n        uHalfSize: gl.getUniformLocation(program, 'uHalfSize'),\n        uSize: gl.getUniformLocation(program, 'uSize'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1fv(uniformLocations.uMatrix, this.matrix);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        opaque: this.opaque,\n        matrix: this.matrix\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute\n   */\n  fabric.Image.filters.Convolute.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Grayscale image filter class\n   * @class fabric.Image.filters.Grayscale\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Grayscale();\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Grayscale = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Grayscale.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Grayscale',\n\n    fragmentSource: {\n      average: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = (color.r + color.b + color.g) / 3.0;\\n' +\n          'gl_FragColor = vec4(average, average, average, color.a);\\n' +\n        '}',\n      lightness: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform int uMode;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 col = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = (max(max(col.r, col.g),col.b) + min(min(col.r, col.g),col.b)) / 2.0;\\n' +\n          'gl_FragColor = vec4(average, average, average, col.a);\\n' +\n        '}',\n      luminosity: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform int uMode;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 col = texture2D(uTexture, vTexCoord);\\n' +\n          'float average = 0.21 * col.r + 0.72 * col.g + 0.07 * col.b;\\n' +\n          'gl_FragColor = vec4(average, average, average, col.a);\\n' +\n        '}',\n    },\n\n\n    /**\n     * Grayscale mode, between 'average', 'lightness', 'luminosity'\n     * @param {String} type\n     * @default\n     */\n    mode: 'average',\n\n    mainParameter: 'mode',\n\n    /**\n     * Apply the Grayscale operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          len = data.length, value,\n          mode = this.mode;\n      for (i = 0; i < len; i += 4) {\n        if (mode === 'average') {\n          value = (data[i] + data[i + 1] + data[i + 2]) / 3;\n        }\n        else if (mode === 'lightness') {\n          value = (Math.min(data[i], data[i + 1], data[i + 2]) +\n            Math.max(data[i], data[i + 1], data[i + 2])) / 2;\n        }\n        else if (mode === 'luminosity') {\n          value = 0.21 * data[i] + 0.72 * data[i + 1] + 0.07 * data[i + 2];\n        }\n        data[i] = value;\n        data[i + 1] = value;\n        data[i + 2] = value;\n      }\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        var shaderSource = this.fragmentSource[this.mode];\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uMode: gl.getUniformLocation(program, 'uMode'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      // default average mode.\n      var mode = 1;\n      gl.uniform1i(uniformLocations.uMode, mode);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale\n   */\n  fabric.Image.filters.Grayscale.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Invert filter class\n   * @class fabric.Image.filters.Invert\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Invert();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Invert = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Invert.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Invert',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform int uInvert;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'if (uInvert == 1) {\\n' +\n          'gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,color.a);\\n' +\n        '} else {\\n' +\n          'gl_FragColor = color;\\n' +\n        '}\\n' +\n      '}',\n\n    /**\n     * Filter invert. if false, does nothing\n     * @param {Boolean} invert\n     * @default\n     */\n    invert: true,\n\n    mainParameter: 'invert',\n\n    /**\n     * Apply the Invert operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (!this.invert) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          len = data.length;\n      for (i = 0; i < len; i += 4) {\n        data[i] = 255 - data[i];\n        data[i + 1] = 255 - data[i + 1];\n        data[i + 2] = 255 - data[i + 2];\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uInvert: gl.getUniformLocation(program, 'uInvert'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1i(uniformLocations.uInvert, this.invert);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert\n   */\n  fabric.Image.filters.Invert.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Noise filter class\n   * @class fabric.Image.filters.Noise\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Noise({\n   *   noise: 700\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Noise = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Noise.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Noise',\n\n    /**\n     * Fragment source for the noise program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uStepH;\\n' +\n      'uniform float uNoise;\\n' +\n      'uniform float uSeed;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'float rand(vec2 co, float seed, float vScale) {\\n' +\n        'return fract(sin(dot(co.xy * vScale ,vec2(12.9898 , 78.233))) * 43758.5453 * (seed + 0.01) / 2.0);\\n' +\n      '}\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'color.rgb += (0.5 - rand(vTexCoord, uSeed, 0.1 / uStepH)) * uNoise;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'noise',\n\n    /**\n     * Noise value, from\n     * @param {Number} noise\n     * @default\n     */\n    noise: 0,\n\n    /**\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (this.noise === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, i, len = data.length,\n          noise = this.noise, rand;\n\n      for (i = 0, len = data.length; i < len; i += 4) {\n\n        rand = (0.5 - Math.random()) * noise;\n\n        data[i] += rand;\n        data[i + 1] += rand;\n        data[i + 2] += rand;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uNoise: gl.getUniformLocation(program, 'uNoise'),\n        uSeed: gl.getUniformLocation(program, 'uSeed'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uNoise, this.noise / 255);\n      gl.uniform1f(uniformLocations.uSeed, Math.random());\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        noise: this.noise\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise\n   */\n  fabric.Image.filters.Noise.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Pixelate filter class\n   * @class fabric.Image.filters.Pixelate\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Pixelate({\n   *   blocksize: 8\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Pixelate = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Pixelate.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Pixelate',\n\n    blocksize: 4,\n\n    mainParameter: 'blocksize',\n\n    /**\n     * Fragment source for the Pixelate program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uBlocksize;\\n' +\n      'uniform float uStepW;\\n' +\n      'uniform float uStepH;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'float blockW = uBlocksize * uStepW;\\n' +\n        'float blockH = uBlocksize * uStepW;\\n' +\n        'int posX = int(vTexCoord.x / blockW);\\n' +\n        'int posY = int(vTexCoord.y / blockH);\\n' +\n        'float fposX = float(posX);\\n' +\n        'float fposY = float(posY);\\n' +\n        'vec2 squareCoords = vec2(fposX * blockW, fposY * blockH);\\n' +\n        'vec4 color = texture2D(uTexture, squareCoords);\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    /**\n     * Apply the Pixelate operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (this.blocksize === 1) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = imageData.height,\n          jLen = imageData.width,\n          index, i, j, r, g, b, a,\n          _i, _j, _iLen, _jLen;\n\n      for (i = 0; i < iLen; i += this.blocksize) {\n        for (j = 0; j < jLen; j += this.blocksize) {\n\n          index = (i * 4) * jLen + (j * 4);\n\n          r = data[index];\n          g = data[index + 1];\n          b = data[index + 2];\n          a = data[index + 3];\n\n          _iLen = Math.min(i + this.blocksize, iLen);\n          _jLen = Math.min(j + this.blocksize, jLen);\n          for (_i = i; _i < _iLen; _i++) {\n            for (_j = j; _j < _jLen; _j++) {\n              index = (_i * 4) * jLen + (_j * 4);\n              data[index] = r;\n              data[index + 1] = g;\n              data[index + 2] = b;\n              data[index + 3] = a;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Indicate when the filter is not gonna apply changes to the image\n     **/\n    isNeutralState: function() {\n      return this.blocksize === 1;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uBlocksize: gl.getUniformLocation(program, 'uBlocksize'),\n        uStepW: gl.getUniformLocation(program, 'uStepW'),\n        uStepH: gl.getUniformLocation(program, 'uStepH'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uBlocksize, this.blocksize);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate\n   */\n  fabric.Image.filters.Pixelate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Remove white filter class\n   * @class fabric.Image.filters.RemoveColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.RemoveColor#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.RemoveColor({\n   *   threshold: 0.2,\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.RemoveColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.RemoveColor.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'RemoveColor',\n\n    /**\n     * Color to remove, in any format understood by fabric.Color.\n     * @param {String} type\n     * @default\n     */\n    color: '#FFFFFF',\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec4 uLow;\\n' +\n      'uniform vec4 uHigh;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' +\n        'if(all(greaterThan(gl_FragColor.rgb,uLow.rgb)) && all(greaterThan(uHigh.rgb,gl_FragColor.rgb))) {\\n' +\n          'gl_FragColor.a = 0.0;\\n' +\n        '}\\n' +\n      '}',\n\n    /**\n     * distance to actual color, as value up or down from each r,g,b\n     * between 0 and 1\n     **/\n    distance: 0.02,\n\n    /**\n     * For color to remove inside distance, use alpha channel for a smoother deletion\n     * NOT IMPLEMENTED YET\n     **/\n    useAlpha: false,\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.RemoveWhite.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.color=#RRGGBB] Threshold value\n     * @param {Number} [options.distance=10] Distance value\n     */\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, i,\n          distance = this.distance * 255,\n          r, g, b,\n          source = new fabric.Color(this.color).getSource(),\n          lowC = [\n            source[0] - distance,\n            source[1] - distance,\n            source[2] - distance,\n          ],\n          highC = [\n            source[0] + distance,\n            source[1] + distance,\n            source[2] + distance,\n          ];\n\n\n      for (i = 0; i < data.length; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (r > lowC[0] &&\n            g > lowC[1] &&\n            b > lowC[2] &&\n            r < highC[0] &&\n            g < highC[1] &&\n            b < highC[2]) {\n          data[i + 3] = 0;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uLow: gl.getUniformLocation(program, 'uLow'),\n        uHigh: gl.getUniformLocation(program, 'uHigh'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var source = new fabric.Color(this.color).getSource(),\n          distance = parseFloat(this.distance),\n          lowC = [\n            0 + source[0] / 255 - distance,\n            0 + source[1] / 255 - distance,\n            0 + source[2] / 255 - distance,\n            1\n          ],\n          highC = [\n            source[0] / 255 + distance,\n            source[1] / 255 + distance,\n            source[2] / 255 + distance,\n            1\n          ];\n      gl.uniform4fv(uniformLocations.uLow, lowC);\n      gl.uniform4fv(uniformLocations.uHigh, highC);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return extend(this.callSuper('toObject'), {\n        color: this.color,\n        distance: this.distance\n      });\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.RemoveColor} Instance of fabric.Image.filters.RemoveWhite\n   */\n  fabric.Image.filters.RemoveColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  var matrices = {\n    Brownie: [\n      0.59970,0.34553,-0.27082,0,0.186,\n      -0.03770,0.86095,0.15059,0,-0.1449,\n      0.24113,-0.07441,0.44972,0,-0.02965,\n      0,0,0,1,0\n    ],\n    Vintage: [\n      0.62793,0.32021,-0.03965,0,0.03784,\n      0.02578,0.64411,0.03259,0,0.02926,\n      0.04660,-0.08512,0.52416,0,0.02023,\n      0,0,0,1,0\n    ],\n    Kodachrome: [\n      1.12855,-0.39673,-0.03992,0,0.24991,\n      -0.16404,1.08352,-0.05498,0,0.09698,\n      -0.16786,-0.56034,1.60148,0,0.13972,\n      0,0,0,1,0\n    ],\n    Technicolor: [\n      1.91252,-0.85453,-0.09155,0,0.04624,\n      -0.30878,1.76589,-0.10601,0,-0.27589,\n      -0.23110,-0.75018,1.84759,0,0.12137,\n      0,0,0,1,0\n    ],\n    Polaroid: [\n      1.438,-0.062,-0.062,0,0,\n      -0.122,1.378,-0.122,0,0,\n      -0.016,-0.016,1.483,0,0,\n      0,0,0,1,0\n    ],\n    Sepia: [\n      0.393, 0.769, 0.189, 0, 0,\n      0.349, 0.686, 0.168, 0, 0,\n      0.272, 0.534, 0.131, 0, 0,\n      0, 0, 0, 1, 0\n    ],\n    BlackWhite: [\n      1.5, 1.5, 1.5, 0, -1,\n      1.5, 1.5, 1.5, 0, -1,\n      1.5, 1.5, 1.5, 0, -1,\n      0, 0, 0, 1, 0,\n    ]\n  };\n\n  for (var key in matrices) {\n    filters[key] = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.Sepia.prototype */ {\n\n      /**\n       * Filter type\n       * @param {String} type\n       * @default\n       */\n      type: key,\n\n      /**\n       * Colormatrix for the effect\n       * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n       * outside the -1, 1 range.\n       * @param {Array} matrix array of 20 numbers.\n       * @default\n       */\n      matrix: matrices[key],\n\n      /**\n       * Lock the matrix export for this kind of static, parameter less filters.\n       */\n      mainParameter: false,\n      /**\n       * Lock the colormatrix on the color part, skipping alpha\n       */\n      colorsOnly: true,\n\n    });\n    fabric.Image.filters[key].fromObject = fabric.Image.filters.BaseFilter.fromObject;\n  }\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Color Blend filter class\n   * @class fabric.Image.filter.BlendColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.BlendColor({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.BlendImage({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.BlendColor = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blend.prototype */ {\n    type: 'BlendColor',\n\n    /**\n     * Color to make the blend operation with. default to a reddish color since black or white\n     * gives always strong result.\n     **/\n    color: '#F95C63',\n\n    /**\n     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\n     * darken, lighten, overlay, exclusion, tint.\n     **/\n    mode: 'multiply',\n\n    /**\n     * alpha value. represent the strength of the blend color operation.\n     **/\n    alpha: 1,\n\n    /**\n     * Fragment source for the Multiply program\n     */\n    fragmentSource: {\n      multiply: 'gl_FragColor.rgb *= uColor.rgb;\\n',\n      screen: 'gl_FragColor.rgb = 1.0 - (1.0 - gl_FragColor.rgb) * (1.0 - uColor.rgb);\\n',\n      add: 'gl_FragColor.rgb += uColor.rgb;\\n',\n      diff: 'gl_FragColor.rgb = abs(gl_FragColor.rgb - uColor.rgb);\\n',\n      subtract: 'gl_FragColor.rgb -= uColor.rgb;\\n',\n      lighten: 'gl_FragColor.rgb = max(gl_FragColor.rgb, uColor.rgb);\\n',\n      darken: 'gl_FragColor.rgb = min(gl_FragColor.rgb, uColor.rgb);\\n',\n      exclusion: 'gl_FragColor.rgb += uColor.rgb - 2.0 * (uColor.rgb * gl_FragColor.rgb);\\n',\n      overlay: 'if (uColor.r < 0.5) {\\n' +\n          'gl_FragColor.r *= 2.0 * uColor.r;\\n' +\n        '} else {\\n' +\n          'gl_FragColor.r = 1.0 - 2.0 * (1.0 - gl_FragColor.r) * (1.0 - uColor.r);\\n' +\n        '}\\n' +\n        'if (uColor.g < 0.5) {\\n' +\n          'gl_FragColor.g *= 2.0 * uColor.g;\\n' +\n        '} else {\\n' +\n          'gl_FragColor.g = 1.0 - 2.0 * (1.0 - gl_FragColor.g) * (1.0 - uColor.g);\\n' +\n        '}\\n' +\n        'if (uColor.b < 0.5) {\\n' +\n          'gl_FragColor.b *= 2.0 * uColor.b;\\n' +\n        '} else {\\n' +\n          'gl_FragColor.b = 1.0 - 2.0 * (1.0 - gl_FragColor.b) * (1.0 - uColor.b);\\n' +\n        '}\\n',\n      tint: 'gl_FragColor.rgb *= (1.0 - uColor.a);\\n' +\n        'gl_FragColor.rgb += uColor.rgb;\\n',\n    },\n\n    /**\n     * build the fragment source for the filters, joining the common part with\n     * the specific one.\n     * @param {String} mode the mode of the filter, a key of this.fragmentSource\n     * @return {String} the source to be compiled\n     * @private\n     */\n    buildSource: function(mode) {\n      return 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'gl_FragColor = color;\\n' +\n          'if (color.a > 0.0) {\\n' +\n            this.fragmentSource[mode] +\n          '}\\n' +\n        '}';\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode, shaderSource;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        shaderSource = this.buildSource(this.mode);\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          data = imageData.data, iLen = data.length,\n          tr, tg, tb,\n          r, g, b,\n          source, alpha1 = 1 - this.alpha;\n\n      source = new fabric.Color(this.color).getSource();\n      tr = source[0] * this.alpha;\n      tg = source[1] * this.alpha;\n      tb = source[2] * this.alpha;\n\n      for (var i = 0; i < iLen; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            break;\n          case 'screen':\n            data[i] = 255 - (255 - r) * (255 - tr) / 255;\n            data[i + 1] = 255 - (255 - g) * (255 - tg) / 255;\n            data[i + 2] = 255 - (255 - b) * (255 - tb) / 255;\n            break;\n          case 'add':\n            data[i] = r + tr;\n            data[i + 1] = g + tg;\n            data[i + 2] = b + tb;\n            break;\n          case 'diff':\n          case 'difference':\n            data[i] = Math.abs(r - tr);\n            data[i + 1] = Math.abs(g - tg);\n            data[i + 2] = Math.abs(b - tb);\n            break;\n          case 'subtract':\n            data[i] = r - tr;\n            data[i + 1] = g - tg;\n            data[i + 2] = b - tb;\n            break;\n          case 'darken':\n            data[i] = Math.min(r, tr);\n            data[i + 1] = Math.min(g, tg);\n            data[i + 2] = Math.min(b, tb);\n            break;\n          case 'lighten':\n            data[i] = Math.max(r, tr);\n            data[i + 1] = Math.max(g, tg);\n            data[i + 2] = Math.max(b, tb);\n            break;\n          case 'overlay':\n            data[i] = tr < 128 ? (2 * r * tr / 255) : (255 - 2 * (255 - r) * (255 - tr) / 255);\n            data[i + 1] = tg < 128 ? (2 * g * tg / 255) : (255 - 2 * (255 - g) * (255 - tg) / 255);\n            data[i + 2] = tb < 128 ? (2 * b * tb / 255) : (255 - 2 * (255 - b) * (255 - tb) / 255);\n            break;\n          case 'exclusion':\n            data[i] = tr + r - ((2 * tr * r) / 255);\n            data[i + 1] = tg + g - ((2 * tg * g) / 255);\n            data[i + 2] = tb + b - ((2 * tb * b) / 255);\n            break;\n          case 'tint':\n            data[i] = tr + r * alpha1;\n            data[i + 1] = tg + g * alpha1;\n            data[i + 2] = tb + b * alpha1;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uColor: gl.getUniformLocation(program, 'uColor'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var source = new fabric.Color(this.color).getSource();\n      source[0] = this.alpha * source[0] / 255;\n      source[1] = this.alpha * source[1] / 255;\n      source[2] = this.alpha * source[2] / 255;\n      source[3] = this.alpha;\n      gl.uniform4fv(uniformLocations.uColor, source);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        color: this.color,\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.BlendColor} Instance of fabric.Image.filters.BlendColor\n   */\n  fabric.Image.filters.BlendColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Image Blend filter class\n   * @class fabric.Image.filter.BlendImage\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.BlendColor({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.BlendImage({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.BlendImage = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.BlendImage.prototype */ {\n    type: 'BlendImage',\n\n    /**\n     * Color to make the blend operation with. default to a reddish color since black or white\n     * gives always strong result.\n     **/\n    image: null,\n\n    /**\n     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\n     * darken, lighten, overlay, exclusion, tint.\n     **/\n    mode: 'multiply',\n\n    /**\n     * alpha value. represent the strength of the blend color operation.\n     **/\n    alpha: 1,\n\n    vertexSource: 'attribute vec2 aPosition;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'varying vec2 vTexCoord2;\\n' +\n      'uniform mat3 uTransformMatrix;\\n' +\n      'void main() {\\n' +\n        'vTexCoord = aPosition;\\n' +\n        'vTexCoord2 = (uTransformMatrix * vec3(aPosition, 1.0)).xy;\\n' +\n        'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' +\n      '}',\n\n    /**\n     * Fragment source for the Multiply program\n     */\n    fragmentSource: {\n      multiply: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform sampler2D uImage;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'varying vec2 vTexCoord2;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' +\n          'color.rgba *= color2.rgba;\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n      mask: 'precision highp float;\\n' +\n        'uniform sampler2D uTexture;\\n' +\n        'uniform sampler2D uImage;\\n' +\n        'uniform vec4 uColor;\\n' +\n        'varying vec2 vTexCoord;\\n' +\n        'varying vec2 vTexCoord2;\\n' +\n        'void main() {\\n' +\n          'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n          'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' +\n          'color.a = color2.a;\\n' +\n          'gl_FragColor = color;\\n' +\n        '}',\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var cacheKey = this.type + '_' + this.mode;\n      var shaderSource = this.fragmentSource[this.mode];\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    applyToWebGL: function(options) {\n      // load texture to blend.\n      var gl = options.context,\n          texture = this.createTexture(options.filterBackend, this.image);\n      this.bindAdditionalTexture(gl, texture, gl.TEXTURE1);\n      this.callSuper('applyToWebGL', options);\n      this.unbindAdditionalTexture(gl, gl.TEXTURE1);\n    },\n\n    createTexture: function(backend, image) {\n      return backend.getCachedTexture(image.cacheKey, image._element);\n    },\n\n    /**\n     * Calculate a transformMatrix to adapt the image to blend over\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    calculateMatrix: function() {\n      var image = this.image,\n          width = image._element.width,\n          height = image._element.height;\n      return [\n        1 / image.scaleX, 0, 0,\n        0, 1 / image.scaleY, 0,\n        -image.left / width, -image.top / height, 1\n      ];\n    },\n\n    /**\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          resources = options.filterBackend.resources,\n          data = imageData.data, iLen = data.length,\n          width = options.imageData.width,\n          height = options.imageData.height,\n          tr, tg, tb, ta,\n          r, g, b, a,\n          canvas1, context, image = this.image, blendData;\n\n      if (!resources.blendImage) {\n        resources.blendImage = document.createElement('canvas');\n      }\n      canvas1 = resources.blendImage;\n      if (canvas1.width !== width || canvas1.height !== height) {\n        canvas1.width = width;\n        canvas1.height = height;\n      }\n      context = canvas1.getContext('2d');\n      context.setTransform(image.scaleX, 0, 0, image.scaleY, image.left, image.top);\n      context.drawImage(image._element, 0, 0, width, height);\n      blendData = context.getImageData(0, 0, width, height).data;\n      for (var i = 0; i < iLen; i += 4) {\n\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n        a = data[i + 3];\n\n        tr = blendData[i];\n        tg = blendData[i + 1];\n        tb = blendData[i + 2];\n        ta = blendData[i + 3];\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            data[i + 3] = a * ta / 255;\n            break;\n          case 'mask':\n            data[i + 3] = ta;\n            break;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uTransformMatrix: gl.getUniformLocation(program, 'uTransformMatrix'),\n        uImage: gl.getUniformLocation(program, 'uImage'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var matrix = this.calculateMatrix();\n      gl.uniform1i(uniformLocations.uImage, 1); // texture unit 1.\n      gl.uniformMatrix3fv(uniformLocations.uTransformMatrix, false, matrix);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        image: this.image && this.image.toObject(),\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} callback to be invoked after filter creation\n   * @return {fabric.Image.filters.BlendImage} Instance of fabric.Image.filters.BlendImage\n   */\n  fabric.Image.filters.BlendImage.fromObject = function(object, callback) {\n    fabric.Image.fromObject(object.image, function(image) {\n      var options = fabric.util.object.clone(object);\n      options.image = image;\n      callback(new fabric.Image.filters.BlendImage(options));\n    });\n  };\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }), pow = Math.pow, floor = Math.floor,\n      sqrt = Math.sqrt, abs = Math.abs, round = Math.round, sin = Math.sin,\n      ceil = Math.ceil,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Resize image filter class\n   * @class fabric.Image.filters.Resize\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Resize();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n  filters.Resize = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Resize.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Resize',\n\n    /**\n     * Resize type\n     * @param {String} resizeType\n     * @default\n     */\n    resizeType: 'hermite',\n\n    /**\n     * Scale factor for resizing, x axis\n     * @param {Number} scaleX\n     * @default\n     */\n    scaleX: 0,\n\n    /**\n     * Scale factor for resizing, y axis\n     * @param {Number} scaleY\n     * @default\n     */\n    scaleY: 0,\n\n    /**\n     * LanczosLobes parameter for lanczos filter\n     * @param {Number} lanczosLobes\n     * @default\n     */\n    lanczosLobes: 3,\n\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uDelta: gl.getUniformLocation(program, 'uDelta'),\n        uTaps: gl.getUniformLocation(program, 'uTaps'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform2fv(uniformLocations.uDelta, this.horizontal ? [1 / this.width, 0] : [0, 1 / this.height]);\n      gl.uniform1fv(uniformLocations.uTaps, this.taps);\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function(options) {\n      var filterWindow = this.getFilterWindow(), cacheKey = this.type + '_' + filterWindow;\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        var fragmentShader = this.generateShader(filterWindow);\n        options.programCache[cacheKey] = this.createProgram(options.context, fragmentShader);\n      }\n      return options.programCache[cacheKey];\n    },\n\n    getFilterWindow: function() {\n      var scale = this.tempScale;\n      return Math.ceil(this.lanczosLobes / scale);\n    },\n\n    getTaps: function() {\n      var lobeFunction = this.lanczosCreate(this.lanczosLobes), scale = this.tempScale,\n          filterWindow = this.getFilterWindow(), taps = new Array(filterWindow);\n      for (var i = 1; i <= filterWindow; i++) {\n        taps[i - 1] = lobeFunction(i * scale);\n      }\n      return taps;\n    },\n\n    /**\n     * Generate vertex and shader sources from the necessary steps numbers\n     * @param {Number} filterWindow\n     */\n    generateShader: function(filterWindow) {\n      var offsets = new Array(filterWindow),\n          fragmentShader = this.fragmentSourceTOP, filterWindow;\n\n      for (var i = 1; i <= filterWindow; i++) {\n        offsets[i - 1] = i + '.0 * uDelta';\n      }\n\n      fragmentShader += 'uniform float uTaps[' + filterWindow + '];\\n';\n      fragmentShader += 'void main() {\\n';\n      fragmentShader += '  vec4 color = texture2D(uTexture, vTexCoord);\\n';\n      fragmentShader += '  float sum = 1.0;\\n';\n\n      offsets.forEach(function(offset, i) {\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord + ' + offset + ') * uTaps[' + i + '];\\n';\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord - ' + offset + ') * uTaps[' + i + '];\\n';\n        fragmentShader += '  sum += 2.0 * uTaps[' + i + '];\\n';\n      });\n      fragmentShader += '  gl_FragColor = color / sum;\\n';\n      fragmentShader += '}';\n      return fragmentShader;\n    },\n\n    fragmentSourceTOP: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec2 uDelta;\\n' +\n      'varying vec2 vTexCoord;\\n',\n\n    /**\n     * Apply the resize filter to the image\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be executed\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    applyTo: function(options) {\n      if (options.webgl) {\n        if (options.passes > 1 && this.isNeutralState(options)) {\n          // avoid doing something that we do not need\n          return;\n        }\n        options.passes++;\n        this.width = options.sourceWidth;\n        this.horizontal = true;\n        this.dW = Math.round(this.width * this.scaleX);\n        this.dH = options.sourceHeight;\n        this.tempScale = this.dW / this.width;\n        this.taps = this.getTaps();\n        options.destinationWidth = this.dW;\n        this._setupFrameBuffer(options);\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        options.sourceWidth = options.destinationWidth;\n\n        this.height = options.sourceHeight;\n        this.horizontal = false;\n        this.dH = Math.round(this.height * this.scaleY);\n        this.tempScale = this.dH / this.height;\n        this.taps = this.getTaps();\n        options.destinationHeight = this.dH;\n        this._setupFrameBuffer(options);\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        options.sourceHeight = options.destinationHeight;\n      }\n      else if (!this.isNeutralState(options)) {\n        this.applyTo2d(options);\n      }\n    },\n\n    isNeutralState: function(options) {\n      var scaleX = options.scaleX || this.scaleX,\n          scaleY = options.scaleY || this.scaleY;\n      return scaleX === 1 && scaleY === 1;\n    },\n\n    lanczosCreate: function(lobes) {\n      return function(x) {\n        if (x >= lobes || x <= -lobes) {\n          return 0.0;\n        }\n        if (x < 1.19209290E-07 && x > -1.19209290E-07) {\n          return 1.0;\n        }\n        x *= Math.PI;\n        var xx = x / lobes;\n        return (sin(x) / x) * sin(xx) / xx;\n      };\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Resize.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} scaleX\n     * @param {Number} scaleY\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData,\n          scaleX = this.scaleX,\n          scaleY = this.scaleY;\n\n      this.rcpScaleX = 1 / scaleX;\n      this.rcpScaleY = 1 / scaleY;\n\n      var oW = imageData.width, oH = imageData.height,\n          dW = round(oW * scaleX), dH = round(oH * scaleY),\n          newData;\n\n      if (this.resizeType === 'sliceHack') {\n        newData = this.sliceByTwo(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'hermite') {\n        newData = this.hermiteFastResize(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'bilinear') {\n        newData = this.bilinearFiltering(options, oW, oH, dW, dH);\n      }\n      else if (this.resizeType === 'lanczos') {\n        newData = this.lanczosResize(options, oW, oH, dW, dH);\n      }\n      options.imageData = newData;\n    },\n\n    /**\n     * Filter sliceByTwo\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    sliceByTwo: function(options, oW, oH, dW, dH) {\n      var imageData = options.imageData,\n          mult = 0.5, doneW = false, doneH = false, stepW = oW * mult,\n          stepH = oH * mult, resources = fabric.filterBackend.resources,\n          tmpCanvas, ctx, sX = 0, sY = 0, dX = oW, dY = 0;\n      if (!resources.sliceByTwo) {\n        resources.sliceByTwo = document.createElement('canvas');\n      }\n      tmpCanvas = resources.sliceByTwo;\n      if (tmpCanvas.width < oW * 1.5 || tmpCanvas.height < oH) {\n        tmpCanvas.width = oW * 1.5;\n        tmpCanvas.height = oH;\n      }\n      ctx = tmpCanvas.getContext('2d');\n      ctx.clearRect(0, 0, oW * 1.5, oH);\n      ctx.putImageData(imageData, 0, 0);\n\n      dW = floor(dW);\n      dH = floor(dH);\n\n      while (!doneW || !doneH) {\n        oW = stepW;\n        oH = stepH;\n        if (dW < floor(stepW * mult)) {\n          stepW = floor(stepW * mult);\n        }\n        else {\n          stepW = dW;\n          doneW = true;\n        }\n        if (dH < floor(stepH * mult)) {\n          stepH = floor(stepH * mult);\n        }\n        else {\n          stepH = dH;\n          doneH = true;\n        }\n        ctx.drawImage(tmpCanvas, sX, sY, oW, oH, dX, dY, stepW, stepH);\n        sX = dX;\n        sY = dY;\n        dY += stepH;\n      }\n      return ctx.getImageData(sX, sY, dW, dH);\n    },\n\n    /**\n     * Filter lanczosResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    lanczosResize: function(options, oW, oH, dW, dH) {\n\n      function process(u) {\n        var v, i, weight, idx, a, red, green,\n            blue, alpha, fX, fY;\n        center.x = (u + 0.5) * ratioX;\n        icenter.x = floor(center.x);\n        for (v = 0; v < dH; v++) {\n          center.y = (v + 0.5) * ratioY;\n          icenter.y = floor(center.y);\n          a = 0; red = 0; green = 0; blue = 0; alpha = 0;\n          for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n            if (i < 0 || i >= oW) {\n              continue;\n            }\n            fX = floor(1000 * abs(i - center.x));\n            if (!cacheLanc[fX]) {\n              cacheLanc[fX] = { };\n            }\n            for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n              if (j < 0 || j >= oH) {\n                continue;\n              }\n              fY = floor(1000 * abs(j - center.y));\n              if (!cacheLanc[fX][fY]) {\n                cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);\n              }\n              weight = cacheLanc[fX][fY];\n              if (weight > 0) {\n                idx = (j * oW + i) * 4;\n                a += weight;\n                red += weight * srcData[idx];\n                green += weight * srcData[idx + 1];\n                blue += weight * srcData[idx + 2];\n                alpha += weight * srcData[idx + 3];\n              }\n            }\n          }\n          idx = (v * dW + u) * 4;\n          destData[idx] = red / a;\n          destData[idx + 1] = green / a;\n          destData[idx + 2] = blue / a;\n          destData[idx + 3] = alpha / a;\n        }\n\n        if (++u < dW) {\n          return process(u);\n        }\n        else {\n          return destImg;\n        }\n      }\n\n      var srcData = options.imageData.data,\n          destImg = options.ctx.createImageData(dW, dH),\n          destData = destImg.data,\n          lanczos = this.lanczosCreate(this.lanczosLobes),\n          ratioX = this.rcpScaleX, ratioY = this.rcpScaleY,\n          rcpRatioX = 2 / this.rcpScaleX, rcpRatioY = 2 / this.rcpScaleY,\n          range2X = ceil(ratioX * this.lanczosLobes / 2),\n          range2Y = ceil(ratioY * this.lanczosLobes / 2),\n          cacheLanc = { }, center = { }, icenter = { };\n\n      return process(0);\n    },\n\n    /**\n     * bilinearFiltering\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    bilinearFiltering: function(options, oW, oH, dW, dH) {\n      var a, b, c, d, x, y, i, j, xDiff, yDiff, chnl,\n          color, offset = 0, origPix, ratioX = this.rcpScaleX,\n          ratioY = this.rcpScaleY,\n          w4 = 4 * (oW - 1), img = options.imageData,\n          pixels = img.data, destImage = options.ctx.createImageData(dW, dH),\n          destPixels = destImage.data;\n      for (i = 0; i < dH; i++) {\n        for (j = 0; j < dW; j++) {\n          x = floor(ratioX * j);\n          y = floor(ratioY * i);\n          xDiff = ratioX * j - x;\n          yDiff = ratioY * i - y;\n          origPix = 4 * (y * oW + x);\n\n          for (chnl = 0; chnl < 4; chnl++) {\n            a = pixels[origPix + chnl];\n            b = pixels[origPix + 4 + chnl];\n            c = pixels[origPix + w4 + chnl];\n            d = pixels[origPix + w4 + 4 + chnl];\n            color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) +\n                    c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\n            destPixels[offset++] = color;\n          }\n        }\n      }\n      return destImage;\n    },\n\n    /**\n     * hermiteFastResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    hermiteFastResize: function(options, oW, oH, dW, dH) {\n      var ratioW = this.rcpScaleX, ratioH = this.rcpScaleY,\n          ratioWHalf = ceil(ratioW / 2),\n          ratioHHalf = ceil(ratioH / 2),\n          img = options.imageData, data = img.data,\n          img2 = options.ctx.createImageData(dW, dH), data2 = img2.data;\n      for (var j = 0; j < dH; j++) {\n        for (var i = 0; i < dW; i++) {\n          var x2 = (i + j * dW) * 4, weight = 0, weights = 0, weightsAlpha = 0,\n              gxR = 0, gxG = 0, gxB = 0, gxA = 0, centerY = (j + 0.5) * ratioH;\n          for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n            var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,\n                centerX = (i + 0.5) * ratioW, w0 = dy * dy;\n            for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n              var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,\n                  w = sqrt(w0 + dx * dx);\n              /* eslint-disable max-depth */\n              if (w > 1 && w < -1) {\n                continue;\n              }\n              //hermite filter\n              weight = 2 * w * w * w - 3 * w * w + 1;\n              if (weight > 0) {\n                dx = 4 * (xx + yy * oW);\n                //alpha\n                gxA += weight * data[dx + 3];\n                weightsAlpha += weight;\n                //colors\n                if (data[dx + 3] < 255) {\n                  weight = weight * data[dx + 3] / 250;\n                }\n                gxR += weight * data[dx];\n                gxG += weight * data[dx + 1];\n                gxB += weight * data[dx + 2];\n                weights += weight;\n              }\n              /* eslint-enable max-depth */\n            }\n          }\n          data2[x2] = gxR / weights;\n          data2[x2 + 1] = gxG / weights;\n          data2[x2 + 2] = gxB / weights;\n          data2[x2 + 3] = gxA / weightsAlpha;\n        }\n      }\n      return img2;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function() {\n      return {\n        type: this.type,\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        resizeType: this.resizeType,\n        lanczosLobes: this.lanczosLobes\n      };\n    }\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize\n   */\n  fabric.Image.filters.Resize.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Contrast filter class\n   * @class fabric.Image.filters.Contrast\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Contrast#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Contrast({\n   *   contrast: 40\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Contrast = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Contrast.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Contrast',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uContrast;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'float contrastF = 1.015 * (uContrast + 1.0) / (1.0 * (1.015 - uContrast));\\n' +\n        'color.rgb = contrastF * (color.rgb - 0.5) + 0.5;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    contrast: 0,\n\n    mainParameter: 'contrast',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Contrast.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.contrast=0] Value to contrast the image up (-1...1)\n     */\n\n    /**\n      * Apply the Contrast operation to a Uint8Array representing the pixels of an image.\n      *\n      * @param {Object} options\n      * @param {ImageData} options.imageData The Uint8Array to be filtered.\n      */\n    applyTo2d: function(options) {\n      if (this.contrast === 0) {\n        return;\n      }\n      var imageData = options.imageData, i, len,\n          data = imageData.data, len = data.length,\n          contrast = Math.floor(this.contrast * 255),\n          contrastF = 259 * (contrast + 255) / (255 * (259 - contrast));\n\n      for (i = 0; i < len; i += 4) {\n        data[i] = contrastF * (data[i] - 128) + 128;\n        data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\n        data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uContrast: gl.getUniformLocation(program, 'uContrast'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uContrast, this.contrast);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Contrast} Instance of fabric.Image.filters.Contrast\n   */\n  fabric.Image.filters.Contrast.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Saturate filter class\n   * @class fabric.Image.filters.Saturation\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Saturation#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Saturation({\n   *   saturation: 100\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Saturation = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Saturation.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Saturation',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform float uSaturation;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'float rgMax = max(color.r, color.g);\\n' +\n        'float rgbMax = max(rgMax, color.b);\\n' +\n        'color.r += rgbMax != color.r ? (rgbMax - color.r) * uSaturation : 0.00;\\n' +\n        'color.g += rgbMax != color.g ? (rgbMax - color.g) * uSaturation : 0.00;\\n' +\n        'color.b += rgbMax != color.b ? (rgbMax - color.b) * uSaturation : 0.00;\\n' +\n        'gl_FragColor = color;\\n' +\n      '}',\n\n    saturation: 0,\n\n    mainParameter: 'saturation',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Saturate.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.saturate=0] Value to saturate the image (-1...1)\n     */\n\n    /**\n     * Apply the Saturation operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function(options) {\n      if (this.saturation === 0) {\n        return;\n      }\n      var imageData = options.imageData,\n          data = imageData.data, len = data.length,\n          adjust = -this.saturation, i, max;\n\n      for (i = 0; i < len; i += 4) {\n        max = Math.max(data[i], data[i + 1], data[i + 2]);\n        data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;\n        data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;\n        data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uSaturation: gl.getUniformLocation(program, 'uSaturation'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uSaturation, -this.saturation);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Saturation} Instance of fabric.Image.filters.Saturate\n   */\n  fabric.Image.filters.Saturation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Blur filter class\n   * @class fabric.Image.filters.Blur\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Blur#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Blur({\n   *   blur: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n  filters.Blur = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Blur.prototype */ {\n\n    type: 'Blur',\n\n    /*\n'gl_FragColor = vec4(0.0);',\n'gl_FragColor += texture2D(texture, vTexCoord + -7 * uDelta)*0.0044299121055113265;',\n'gl_FragColor += texture2D(texture, vTexCoord + -6 * uDelta)*0.00895781211794;',\n'gl_FragColor += texture2D(texture, vTexCoord + -5 * uDelta)*0.0215963866053;',\n'gl_FragColor += texture2D(texture, vTexCoord + -4 * uDelta)*0.0443683338718;',\n'gl_FragColor += texture2D(texture, vTexCoord + -3 * uDelta)*0.0776744219933;',\n'gl_FragColor += texture2D(texture, vTexCoord + -2 * uDelta)*0.115876621105;',\n'gl_FragColor += texture2D(texture, vTexCoord + -1 * uDelta)*0.147308056121;',\n'gl_FragColor += texture2D(texture, vTexCoord              )*0.159576912161;',\n'gl_FragColor += texture2D(texture, vTexCoord + 1 * uDelta)*0.147308056121;',\n'gl_FragColor += texture2D(texture, vTexCoord + 2 * uDelta)*0.115876621105;',\n'gl_FragColor += texture2D(texture, vTexCoord + 3 * uDelta)*0.0776744219933;',\n'gl_FragColor += texture2D(texture, vTexCoord + 4 * uDelta)*0.0443683338718;',\n'gl_FragColor += texture2D(texture, vTexCoord + 5 * uDelta)*0.0215963866053;',\n'gl_FragColor += texture2D(texture, vTexCoord + 6 * uDelta)*0.00895781211794;',\n'gl_FragColor += texture2D(texture, vTexCoord + 7 * uDelta)*0.0044299121055113265;',\n*/\n\n    /* eslint-disable max-len */\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec2 uDelta;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'const float nSamples = 15.0;\\n' +\n      'vec3 v3offset = vec3(12.9898, 78.233, 151.7182);\\n' +\n      'float random(vec3 scale) {\\n' +\n        /* use the fragment position for a different seed per-pixel */\n        'return fract(sin(dot(gl_FragCoord.xyz, scale)) * 43758.5453);\\n' +\n      '}\\n' +\n      'void main() {\\n' +\n        'vec4 color = vec4(0.0);\\n' +\n        'float total = 0.0;\\n' +\n        'float offset = random(v3offset);\\n' +\n        'for (float t = -nSamples; t <= nSamples; t++) {\\n' +\n          'float percent = (t + offset - 0.5) / nSamples;\\n' +\n          'float weight = 1.0 - abs(percent);\\n' +\n          'color += texture2D(uTexture, vTexCoord + uDelta * percent) * weight;\\n' +\n          'total += weight;\\n' +\n        '}\\n' +\n        'gl_FragColor = color / total;\\n' +\n      '}',\n    /* eslint-enable max-len */\n\n    /**\n     * blur value, in percentage of image dimensions.\n     * specific to keep the image blur constant at different resolutions\n     * range bewteen 0 and 1.\n     */\n    blur: 0,\n\n    mainParameter: 'blur',\n\n    applyTo: function(options) {\n      if (options.webgl) {\n        // this aspectRatio is used to give the same blur to vertical and horizontal\n        this.aspectRatio = options.sourceWidth / options.sourceHeight;\n        options.passes++;\n        this._setupFrameBuffer(options);\n        this.horizontal = true;\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n        this._setupFrameBuffer(options);\n        this.horizontal = false;\n        this.applyToWebGL(options);\n        this._swapTextures(options);\n      }\n      else {\n        this.applyTo2d(options);\n      }\n    },\n\n    applyTo2d: function(options) {\n      // paint canvasEl with current image data.\n      //options.ctx.putImageData(options.imageData, 0, 0);\n      options.imageData = this.simpleBlur(options);\n    },\n\n    simpleBlur: function(options) {\n      var resources = options.filterBackend.resources, canvas1, canvas2,\n          width = options.imageData.width,\n          height = options.imageData.height;\n\n      if (!resources.blurLayer1) {\n        resources.blurLayer1 = fabric.util.createCanvasElement();\n        resources.blurLayer2 = fabric.util.createCanvasElement();\n      }\n      canvas1 = resources.blurLayer1;\n      canvas2 = resources.blurLayer2;\n      if (canvas1.width !== width || canvas1.height !== height) {\n        canvas2.width = canvas1.width = width;\n        canvas2.height = canvas1.height = height;\n      }\n      var ctx1 = canvas1.getContext('2d'),\n          ctx2 = canvas2.getContext('2d'),\n          nSamples = 15,\n          random, percent, j, i,\n          blur = this.blur * 0.06 * 0.5;\n\n      // load first canvas\n      ctx1.putImageData(options.imageData, 0, 0);\n      ctx2.clearRect(0, 0, width, height);\n\n      for (i = -nSamples; i <= nSamples; i++) {\n        random = (Math.random() - 0.5) / 4;\n        percent = i / nSamples;\n        j = blur * percent * width + random;\n        ctx2.globalAlpha = 1 - Math.abs(percent);\n        ctx2.drawImage(canvas1, j, random);\n        ctx1.drawImage(canvas2, 0, 0);\n        ctx2.globalAlpha = 1;\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      }\n      for (i = -nSamples; i <= nSamples; i++) {\n        random = (Math.random() - 0.5) / 4;\n        percent = i / nSamples;\n        j = blur * percent * height + random;\n        ctx2.globalAlpha = 1 - Math.abs(percent);\n        ctx2.drawImage(canvas1, random, j);\n        ctx1.drawImage(canvas2, 0, 0);\n        ctx2.globalAlpha = 1;\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      }\n      options.ctx.drawImage(canvas1, 0, 0);\n      var newImageData = options.ctx.getImageData(0, 0, canvas1.width, canvas1.height);\n      ctx1.globalAlpha = 1;\n      ctx1.clearRect(0, 0, canvas1.width, canvas1.height);\n      return newImageData;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        delta: gl.getUniformLocation(program, 'uDelta'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      var delta = this.chooseRightDelta();\n      gl.uniform2fv(uniformLocations.delta, delta);\n    },\n\n    /**\n     * choose right value of image percentage to blur with\n     * @returns {Array} a numeric array with delta values\n     */\n    chooseRightDelta: function() {\n      var blurScale = 1, delta = [0, 0], blur;\n      if (this.horizontal) {\n        if (this.aspectRatio > 1) {\n          // image is wide, i want to shrink radius horizontal\n          blurScale = 1 / this.aspectRatio;\n        }\n      }\n      else {\n        if (this.aspectRatio < 1) {\n          // image is tall, i want to shrink radius vertical\n          blurScale = this.aspectRatio;\n        }\n      }\n      blur = blurScale * this.blur * 0.12;\n      if (this.horizontal) {\n        delta[0] = blur;\n      }\n      else {\n        delta[1] = blur;\n      }\n      return delta;\n    },\n  });\n\n  /**\n   * Deserialize a JSON definition of a BlurFilter into a concrete instance.\n   */\n  filters.Blur.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * Gamma filter class\n   * @class fabric.Image.filters.Gamma\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Gamma#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Gamma({\n   *   brightness: 200\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.Gamma = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Gamma.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Gamma',\n\n    fragmentSource: 'precision highp float;\\n' +\n      'uniform sampler2D uTexture;\\n' +\n      'uniform vec3 uGamma;\\n' +\n      'varying vec2 vTexCoord;\\n' +\n      'void main() {\\n' +\n        'vec4 color = texture2D(uTexture, vTexCoord);\\n' +\n        'vec3 correction = (1.0 / uGamma);\\n' +\n        'color.r = pow(color.r, correction.r);\\n' +\n        'color.g = pow(color.g, correction.g);\\n' +\n        'color.b = pow(color.b, correction.b);\\n' +\n        'gl_FragColor = color;\\n' +\n        'gl_FragColor.rgb *= color.a;\\n' +\n      '}',\n\n    /**\n     * Gamma array value, from 0.01 to 2.2.\n     * @param {Array} gamma\n     * @default\n     */\n    gamma: [1, 1, 1],\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'gamma',\n\n    /**\n     * Apply the Gamma operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function(options) {\n      var imageData = options.imageData, data = imageData.data,\n          gamma = this.gamma, len = data.length,\n          rInv = 1 / gamma[0], gInv = 1 / gamma[1],\n          bInv = 1 / gamma[2], i;\n\n      if (!this.rVals) {\n        // eslint-disable-next-line\n        this.rVals = new Uint8Array(256);\n        // eslint-disable-next-line\n        this.gVals = new Uint8Array(256);\n        // eslint-disable-next-line\n        this.bVals = new Uint8Array(256);\n      }\n\n      // This is an optimization - pre-compute a look-up table for each color channel\n      // instead of performing these pow calls for each pixel in the image.\n      for (i = 0, len = 256; i < len; i++) {\n        this.rVals[i] = Math.pow(i / 255, rInv) * 255;\n        this.gVals[i] = Math.pow(i / 255, gInv) * 255;\n        this.bVals[i] = Math.pow(i / 255, bInv) * 255;\n      }\n      for (i = 0, len = data.length; i < len; i += 4) {\n        data[i] = this.rVals[data[i]];\n        data[i + 1] = this.gVals[data[i + 1]];\n        data[i + 2] = this.bVals[data[i + 2]];\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function(gl, program) {\n      return {\n        uGamma: gl.getUniformLocation(program, 'uGamma'),\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function(gl, uniformLocations) {\n      gl.uniform3fv(uniformLocations.uGamma, this.gamma);\n    },\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Gamma} Instance of fabric.Image.filters.Gamma\n   */\n  fabric.Image.filters.Gamma.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * A container class that knows how to apply a sequence of filters to an input image.\n   */\n  filters.Composed = createClass(filters.BaseFilter, /** @lends fabric.Image.filters.Composed.prototype */ {\n\n    type: 'Composed',\n\n    /**\n     * A non sparse array of filters to apply\n     */\n    subFilters: [],\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function(options) {\n      this.callSuper('initialize', options);\n      // create a new array instead mutating the prototype with push\n      this.subFilters = this.subFilters.slice(0);\n    },\n\n    /**\n     * Apply this container's filters to the input image provided.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be applied.\n     */\n    applyTo: function(options) {\n      options.passes += this.subFilters.length - 1;\n      this.subFilters.forEach(function(filter) {\n        filter.applyTo(options);\n      });\n    },\n\n    /**\n     * Serialize this filter into JSON.\n     *\n     * @returns {Object} A JSON representation of this filter.\n     */\n    toObject: function() {\n      return fabric.util.object.extend(this.callSuper('toObject'), {\n        subFilters: this.subFilters.map(function(filter) { return filter.toObject(); }),\n      });\n    },\n  });\n\n  /**\n   * Deserialize a JSON definition of a ComposedFilter into a concrete instance.\n   */\n  fabric.Image.filters.Composed.fromObject = function(object, callback) {\n    var filters = object.subFilters || [],\n        subFilters = filters.map(function(filter) {\n          return new fabric.Image.filters[filter.type](filter);\n        }),\n        instance = new fabric.Image.filters.Composed({ subFilters: subFilters });\n    callback && callback(instance);\n    return instance;\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric  = global.fabric || (global.fabric = { }),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n\n  /**\n   * HueRotation filter class\n   * @class fabric.Image.filters.HueRotation\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.HueRotation#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.HueRotation({\n   *   rotation: -0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n  filters.HueRotation = createClass(filters.ColorMatrix, /** @lends fabric.Image.filters.HueRotation.prototype */ {\n\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'HueRotation',\n\n    /**\n     * HueRotation value, from -1 to 1.\n     * the unit is radians\n     * @param {Number} myParameter\n     * @default\n     */\n    rotation: 0,\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'rotation',\n\n    calculateMatrix: function() {\n      var rad = this.rotation * Math.PI, cos = fabric.util.cos(rad), sin = fabric.util.sin(rad),\n          aThird = 1 / 3, aThirdSqtSin = Math.sqrt(aThird) * sin, OneMinusCos = 1 - cos;\n      this.matrix = [\n        1, 0, 0, 0, 0,\n        0, 1, 0, 0, 0,\n        0, 0, 1, 0, 0,\n        0, 0, 0, 1, 0\n      ];\n      this.matrix[0] = cos + OneMinusCos / 3;\n      this.matrix[1] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[2] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[5] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[6] = cos + aThird * OneMinusCos;\n      this.matrix[7] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[10] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[11] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[12] = cos + aThird * OneMinusCos;\n    },\n\n    /**\n     * Apply this filter to the input image data provided.\n     *\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be executed\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    applyTo: function(options) {\n      this.calculateMatrix();\n      fabric.Image.filters.BaseFilter.prototype.applyTo.call(this, options);\n    },\n\n  });\n\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.HueRotation} Instance of fabric.Image.filters.HueRotation\n   */\n  fabric.Image.filters.HueRotation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = { }),\n      clone = fabric.util.object.clone;\n\n  if (fabric.Text) {\n    fabric.warn('fabric.Text is already defined');\n    return;\n  }\n\n  /**\n   * Text class\n   * @class fabric.Text\n   * @extends fabric.Object\n   * @return {fabric.Text} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\n   * @see {@link fabric.Text#initialize} for constructor definition\n   */\n  fabric.Text = fabric.util.createClass(fabric.Object, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Array\n     * @private\n     */\n    _dimensionAffectingProps: [\n      'fontSize',\n      'fontWeight',\n      'fontFamily',\n      'fontStyle',\n      'lineHeight',\n      'text',\n      'charSpacing',\n      'textAlign',\n      'styles',\n    ],\n\n    /**\n     * @private\n     */\n    _reNewline: /\\r?\\n/,\n\n    /**\n     * Use this regular expression to filter for whitespaces that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpacesAndTabs: /[ \\t\\r]/g,\n\n    /**\n     * Use this regular expression to filter for whitespace that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpaceAndTab: /[ \\t\\r]/,\n\n    /**\n     * Use this regular expression to filter consecutive groups of non spaces.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reWords: /\\S+/g,\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type:                 'text',\n\n    /**\n     * Font size (in pixels)\n     * @type Number\n     * @default\n     */\n    fontSize:             40,\n\n    /**\n     * Font weight (e.g. bold, normal, 400, 600, 800)\n     * @type {(Number|String)}\n     * @default\n     */\n    fontWeight:           'normal',\n\n    /**\n     * Font family\n     * @type String\n     * @default\n     */\n    fontFamily:           'Times New Roman',\n\n    /**\n     * Text decoration underline.\n     * @type String\n     * @default\n     */\n    underline:       false,\n\n    /**\n     * Text decoration overline.\n     * @type String\n     * @default\n     */\n    overline:       false,\n\n    /**\n     * Text decoration linethrough.\n     * @type String\n     * @default\n     */\n    linethrough:       false,\n\n    /**\n     * Text alignment. Possible values: \"left\", \"center\", \"right\", \"justify\",\n     * \"justify-left\", \"justify-center\" or \"justify-right\".\n     * @type String\n     * @default\n     */\n    textAlign:            'left',\n\n    /**\n     * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n     * @type String\n     * @default\n     */\n    fontStyle:            'normal',\n\n    /**\n     * Line height\n     * @type Number\n     * @default\n     */\n    lineHeight:           1.16,\n\n    /**\n     * Superscript schema object (minimum overlap)\n     * @type {Object}\n     * @default\n     */\n    superscript: {\n      size:      0.60, // fontSize factor\n      baseline: -0.35  // baseline-shift factor (upwards)\n    },\n\n    /**\n     * Subscript schema object (minimum overlap)\n     * @type {Object}\n     * @default\n     */\n    subscript: {\n      size:      0.60, // fontSize factor\n      baseline:  0.11  // baseline-shift factor (downwards)\n    },\n\n    /**\n     * Background color of text lines\n     * @type String\n     * @default\n     */\n    textBackgroundColor:  '',\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('fontFamily',\n      'fontWeight',\n      'fontSize',\n      'text',\n      'underline',\n      'overline',\n      'linethrough',\n      'textAlign',\n      'fontStyle',\n      'lineHeight',\n      'textBackgroundColor',\n      'charSpacing',\n      'styles'),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * @type Array\n     */\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('fontFamily',\n      'fontWeight',\n      'fontSize',\n      'text',\n      'underline',\n      'overline',\n      'linethrough',\n      'textAlign',\n      'fontStyle',\n      'lineHeight',\n      'textBackgroundColor',\n      'charSpacing',\n      'styles'),\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color.\n     * <b>Backwards incompatibility note:</b> This property was named \"strokeStyle\" until v1.1.6\n     * @type String\n     * @default\n     */\n    stroke:               null,\n\n    /**\n     * Shadow object representing shadow of this shape.\n     * <b>Backwards incompatibility note:</b> This property was named \"textShadow\" (String) until v1.2.11\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow:               null,\n\n    /**\n     * @private\n     */\n    _fontSizeFraction: 0.222,\n\n    /**\n     * @private\n     */\n    offsets: {\n      underline: 0.10,\n      linethrough: -0.315,\n      overline: -0.88\n    },\n\n    /**\n     * Text Line proportion to font Size (in pixels)\n     * @type Number\n     * @default\n     */\n    _fontSizeMult:             1.13,\n\n    /**\n     * additional space between characters\n     * expressed in thousands of em unit\n     * @type Number\n     * @default\n     */\n    charSpacing:             0,\n\n    /**\n     * Object containing character styles - top-level properties -> line numbers,\n     * 2nd-level properties - charater numbers\n     * @type Object\n     * @default\n     */\n    styles: null,\n\n    /**\n     * Reference to a context to measure text char or couple of chars\n     * the cacheContext of the canvas will be used or a freshly created one if the object is not on canvas\n     * once created it will be referenced on fabric._measuringContext to avoide creating a canvas for every\n     * text object created.\n     * @type {CanvasRenderingContext2D}\n     * @default\n     */\n    _measuringContext: null,\n\n    /**\n     * Baseline shift, stlyes only, keep at 0 for the main text object\n     * @type {Number}\n     * @default\n     */\n    deltaY: 0,\n\n    /**\n     * Array of properties that define a style unit (of 'styles').\n     * @type {Array}\n     * @default\n     */\n    _styleProperties: [\n      'stroke',\n      'strokeWidth',\n      'fill',\n      'fontFamily',\n      'fontSize',\n      'fontWeight',\n      'fontStyle',\n      'underline',\n      'overline',\n      'linethrough',\n      'deltaY',\n      'textBackgroundColor',\n    ],\n\n    /**\n     * contains characters bounding boxes\n     */\n    __charBounds: [],\n\n    /**\n     * use this size when measuring text. To avoid IE11 rounding errors\n     * @type {Number}\n     * @default\n     * @readonly\n     * @private\n     */\n    CACHE_FONT_SIZE: 400,\n\n    /**\n     * contains the min text width to avoid getting 0\n     * @type {Number}\n     * @default\n     */\n    MIN_TEXT_WIDTH: 2,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    initialize: function(text, options) {\n      this.styles = options ? (options.styles || { }) : { };\n      this.text = text;\n      this.__skipDimension = true;\n      this.callSuper('initialize', options);\n      this.__skipDimension = false;\n      this.initDimensions();\n      this.setCoords();\n      this.setupState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Return a contex for measurement of text string.\n     * if created it gets stored for reuse\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    getMeasuringContext: function() {\n      // if we did not return we have to measure something.\n      if (!fabric._measuringContext) {\n        fabric._measuringContext = this.canvas && this.canvas.contextCache ||\n          fabric.util.createCanvasElement().getContext('2d');\n      }\n      return fabric._measuringContext;\n    },\n\n    /**\n     * @private\n     * Divides text into lines of text and lines of graphemes.\n     */\n    _splitText: function() {\n      var newLines = this._splitTextIntoLines(this.text);\n      this.textLines = newLines.lines;\n      this._textLines = newLines.graphemeLines;\n      this._unwrappedTextLines = newLines._unwrappedLines;\n      this._text = newLines.graphemeText;\n      return newLines;\n    },\n\n    /**\n     * Initialize or update text dimensions.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     */\n    initDimensions: function() {\n      if (this.__skipDimension) {\n        return;\n      }\n      this._splitText();\n      this._clearCache();\n      this.width = this.calcTextWidth() || this.cursorWidth || this.MIN_TEXT_WIDTH;\n      if (this.textAlign.indexOf('justify') !== -1) {\n        // once text is measured we need to make space fatter to make justified text.\n        this.enlargeSpaces();\n      }\n      this.height = this.calcTextHeight();\n      this.saveState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Enlarge space boxes and shift the others\n     */\n    enlargeSpaces: function() {\n      var diffSpace, currentLineWidth, numberOfSpaces, accumulatedSpace, line, charBound, spaces;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        if (this.textAlign !== 'justify' && (i === len - 1 || this.isEndOfWrapping(i))) {\n          continue;\n        }\n        accumulatedSpace = 0;\n        line = this._textLines[i];\n        currentLineWidth = this.getLineWidth(i);\n        if (currentLineWidth < this.width && (spaces = this.textLines[i].match(this._reSpacesAndTabs))) {\n          numberOfSpaces = spaces.length;\n          diffSpace = (this.width - currentLineWidth) / numberOfSpaces;\n          for (var j = 0, jlen = line.length; j <= jlen; j++) {\n            charBound = this.__charBounds[i][j];\n            if (this._reSpaceAndTab.test(line[j])) {\n              charBound.width += diffSpace;\n              charBound.kernedWidth += diffSpace;\n              charBound.left += accumulatedSpace;\n              accumulatedSpace += diffSpace;\n            }\n            else {\n              charBound.left += accumulatedSpace;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Detect if the text line is ended with an hard break\n     * text and itext do not have wrapping, return false\n     * @return {Boolean}\n     */\n    isEndOfWrapping: function(lineIndex) {\n      return lineIndex === this._textLines.length - 1;\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of text object\n     */\n    toString: function() {\n      return '#<fabric.Text (' + this.complexity() +\n        '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @param {Object} dim.x width of object to be cached\n     * @param {Object} dim.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function() {\n      var dims = this.callSuper('_getCacheCanvasDimensions');\n      var fontSize = this.fontSize;\n      dims.width += fontSize * dims.zoomX;\n      dims.height += fontSize * dims.zoomY;\n      return dims;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this._setTextStyles(ctx);\n      this._renderTextLinesBackground(ctx);\n      this._renderTextDecoration(ctx, 'underline');\n      this._renderText(ctx);\n      this._renderTextDecoration(ctx, 'overline');\n      this._renderTextDecoration(ctx, 'linethrough');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderText: function(ctx) {\n      if (this.paintFirst === 'stroke') {\n        this._renderTextStroke(ctx);\n        this._renderTextFill(ctx);\n      }\n      else {\n        this._renderTextFill(ctx);\n        this._renderTextStroke(ctx);\n      }\n    },\n\n    /**\n     * Set the font parameter of the context with the object properties or with charStyle\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [charStyle] object with font style properties\n     * @param {String} [charStyle.fontFamily] Font Family\n     * @param {Number} [charStyle.fontSize] Font size in pixels. ( without px suffix )\n     * @param {String} [charStyle.fontWeight] Font weight\n     * @param {String} [charStyle.fontStyle] Font style (italic|normal)\n     */\n    _setTextStyles: function(ctx, charStyle, forMeasuring) {\n      ctx.textBaseline = 'alphabetic';\n      ctx.font = this._getFontDeclaration(charStyle, forMeasuring);\n    },\n\n    /**\n     * calculate and return the text Width measuring each line.\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {Number} Maximum width of fabric.Text object\n     */\n    calcTextWidth: function() {\n      var maxWidth = this.getLineWidth(0);\n\n      for (var i = 1, len = this._textLines.length; i < len; i++) {\n        var currentLineWidth = this.getLineWidth(i);\n        if (currentLineWidth > maxWidth) {\n          maxWidth = currentLineWidth;\n        }\n      }\n      return maxWidth;\n    },\n\n    /**\n     * @private\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Text to render\n     * @param {Number} left Left position of text\n     * @param {Number} top Top position of text\n     * @param {Number} lineIndex Index of a line in a text\n     */\n    _renderTextLine: function(method, ctx, line, left, top, lineIndex) {\n      this._renderChars(method, ctx, line, left, top, lineIndex);\n    },\n\n    /**\n     * Renders the text background for lines, taking care of style\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextLinesBackground: function(ctx) {\n      if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor')) {\n        return;\n      }\n      var lineTopOffset = 0, heightOfLine,\n          lineLeftOffset, originalFill = ctx.fillStyle,\n          line, lastColor,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(),\n          boxStart = 0, boxWidth = 0, charBox, currentColor;\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this.getHeightOfLine(i);\n        if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor', i)) {\n          lineTopOffset += heightOfLine;\n          continue;\n        }\n        line = this._textLines[i];\n        lineLeftOffset = this._getLineLeftOffset(i);\n        boxWidth = 0;\n        boxStart = 0;\n        lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          charBox = this.__charBounds[i][j];\n          currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n          if (currentColor !== lastColor) {\n            ctx.fillStyle = lastColor;\n            lastColor && ctx.fillRect(\n              leftOffset + lineLeftOffset + boxStart,\n              topOffset + lineTopOffset,\n              boxWidth,\n              heightOfLine / this.lineHeight\n            );\n            boxStart = charBox.left;\n            boxWidth = charBox.width;\n            lastColor = currentColor;\n          }\n          else {\n            boxWidth += charBox.kernedWidth;\n          }\n        }\n        if (currentColor) {\n          ctx.fillStyle = currentColor;\n          ctx.fillRect(\n            leftOffset + lineLeftOffset + boxStart,\n            topOffset + lineTopOffset,\n            boxWidth,\n            heightOfLine / this.lineHeight\n          );\n        }\n        lineTopOffset += heightOfLine;\n      }\n      ctx.fillStyle = originalFill;\n      // if there is text background color no\n      // other shadows should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {Object} decl style declaration for cache\n     * @param {String} decl.fontFamily fontFamily\n     * @param {String} decl.fontStyle fontStyle\n     * @param {String} decl.fontWeight fontWeight\n     * @return {Object} reference to cache\n     */\n    getFontCache: function(decl) {\n      var fontFamily = decl.fontFamily.toLowerCase();\n      if (!fabric.charWidthsCache[fontFamily]) {\n        fabric.charWidthsCache[fontFamily] = { };\n      }\n      var cache = fabric.charWidthsCache[fontFamily],\n          cacheProp = decl.fontStyle.toLowerCase() + '_' + (decl.fontWeight + '').toLowerCase();\n      if (!cache[cacheProp]) {\n        cache[cacheProp] = { };\n      }\n      return cache[cacheProp];\n    },\n\n    /**\n     * apply all the character style to canvas for rendering\n     * @private\n     * @param {String} _char\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} [decl]\n     */\n    _applyCharStyles: function(method, ctx, lineIndex, charIndex, styleDeclaration) {\n\n      this._setFillStyles(ctx, styleDeclaration);\n      this._setStrokeStyles(ctx, styleDeclaration);\n\n      ctx.font = this._getFontDeclaration(styleDeclaration);\n    },\n\n    /**\n     * measure and return the width of a single character.\n     * possibly overridden to accommodate different measure logic or\n     * to hook some external lib for character measurement\n     * @private\n     * @param {String} char to be measured\n     * @param {Object} charStyle style of char to be measured\n     * @param {String} [previousChar] previous char\n     * @param {Object} [prevCharStyle] style of previous char\n     */\n    _measureChar: function(_char, charStyle, previousChar, prevCharStyle) {\n      // first i try to return from cache\n      var fontCache = this.getFontCache(charStyle), fontDeclaration = this._getFontDeclaration(charStyle),\n          previousFontDeclaration = this._getFontDeclaration(prevCharStyle), couple = previousChar + _char,\n          stylesAreEqual = fontDeclaration === previousFontDeclaration, width, coupleWidth, previousWidth,\n          fontMultiplier = charStyle.fontSize / this.CACHE_FONT_SIZE, kernedWidth;\n\n      if (previousChar && fontCache[previousChar] !== undefined) {\n        previousWidth = fontCache[previousChar];\n      }\n      if (fontCache[_char] !== undefined) {\n        kernedWidth = width = fontCache[_char];\n      }\n      if (stylesAreEqual && fontCache[couple] !== undefined) {\n        coupleWidth = fontCache[couple];\n        kernedWidth = coupleWidth - previousWidth;\n      }\n      if (width === undefined || previousWidth === undefined || coupleWidth === undefined) {\n        var ctx = this.getMeasuringContext();\n        // send a TRUE to specify measuring font size CACHE_FONT_SIZE\n        this._setTextStyles(ctx, charStyle, true);\n      }\n      if (width === undefined) {\n        kernedWidth = width = ctx.measureText(_char).width;\n        fontCache[_char] = width;\n      }\n      if (previousWidth === undefined && stylesAreEqual && previousChar) {\n        previousWidth = ctx.measureText(previousChar).width;\n        fontCache[previousChar] = previousWidth;\n      }\n      if (stylesAreEqual && coupleWidth === undefined) {\n        // we can measure the kerning couple and subtract the width of the previous character\n        coupleWidth = ctx.measureText(couple).width;\n        fontCache[couple] = coupleWidth;\n        kernedWidth = coupleWidth - previousWidth;\n      }\n      return { width: width * fontMultiplier, kernedWidth: kernedWidth * fontMultiplier };\n    },\n\n    /**\n     * Computes height of character at given position\n     * @param {Number} line the line number\n     * @param {Number} char the character number\n     * @return {Number} fontSize of the character\n     */\n    getHeightOfChar: function(line, char) {\n      return this.getValueOfPropertyAt(line, char, 'fontSize');\n    },\n\n    /**\n     * measure a text line measuring all characters.\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    measureLine: function(lineIndex) {\n      var lineInfo = this._measureLine(lineIndex);\n      if (this.charSpacing !== 0) {\n        lineInfo.width -= this._getWidthOfCharSpacing();\n      }\n      if (lineInfo.width < 0) {\n        lineInfo.width = 0;\n      }\n      return lineInfo;\n    },\n\n    /**\n     * measure every grapheme of a line, populating __charBounds\n     * @param {Number} lineIndex\n     * @return {Object} object.width total width of characters\n     * @return {Object} object.widthOfSpaces length of chars that match this._reSpacesAndTabs\n     */\n    _measureLine: function(lineIndex) {\n      var width = 0, i, grapheme, line = this._textLines[lineIndex], prevGrapheme,\n          graphemeInfo, numOfSpaces = 0, lineBounds = new Array(line.length);\n\n      this.__charBounds[lineIndex] = lineBounds;\n      for (i = 0; i < line.length; i++) {\n        grapheme = line[i];\n        graphemeInfo = this._getGraphemeBox(grapheme, lineIndex, i, prevGrapheme);\n        lineBounds[i] = graphemeInfo;\n        width += graphemeInfo.kernedWidth;\n        prevGrapheme = grapheme;\n      }\n      // this latest bound box represent the last character of the line\n      // to simplify cursor handling in interactive mode.\n      lineBounds[i] = {\n        left: graphemeInfo ? graphemeInfo.left + graphemeInfo.width : 0,\n        width: 0,\n        kernedWidth: 0,\n        height: this.fontSize\n      };\n      return { width: width, numOfSpaces: numOfSpaces };\n    },\n\n    /**\n     * Measure and return the info of a single grapheme.\n     * needs the the info of previous graphemes already filled\n     * @private\n     * @param {String} grapheme to be measured\n     * @param {Number} lineIndex index of the line where the char is\n     * @param {Number} charIndex position in the line\n     * @param {String} [prevGrapheme] character preceding the one to be measured\n     */\n    _getGraphemeBox: function(grapheme, lineIndex, charIndex, prevGrapheme, skipLeft) {\n      var style = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n          prevStyle = prevGrapheme ? this.getCompleteStyleDeclaration(lineIndex, charIndex - 1) : { },\n          info = this._measureChar(grapheme, style, prevGrapheme, prevStyle),\n          kernedWidth = info.kernedWidth,\n          width = info.width, charSpacing;\n\n      if (this.charSpacing !== 0) {\n        charSpacing = this._getWidthOfCharSpacing();\n        width += charSpacing;\n        kernedWidth += charSpacing;\n      }\n\n      var box = {\n        width: width,\n        left: 0,\n        height: style.fontSize,\n        kernedWidth: kernedWidth,\n        deltaY: style.deltaY,\n      };\n      if (charIndex > 0 && !skipLeft) {\n        var previousBox = this.__charBounds[lineIndex][charIndex - 1];\n        box.left = previousBox.left + previousBox.width + info.kernedWidth - info.width;\n      }\n      return box;\n    },\n\n    /**\n     * Calculate height of line at 'lineIndex'\n     * @param {Number} lineIndex index of line to calculate\n     * @return {Number}\n     */\n    getHeightOfLine: function(lineIndex) {\n      if (this.__lineHeights[lineIndex]) {\n        return this.__lineHeights[lineIndex];\n      }\n\n      var line = this._textLines[lineIndex],\n          // char 0 is measured before the line cycle because it nneds to char\n          // emptylines\n          maxHeight = this.getHeightOfChar(lineIndex, 0);\n      for (var i = 1, len = line.length; i < len; i++) {\n        maxHeight = Math.max(this.getHeightOfChar(lineIndex, i), maxHeight);\n      }\n\n      return this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\n    },\n\n    /**\n     * Calculate text box height\n     */\n    calcTextHeight: function() {\n      var lineHeight, height = 0;\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineHeight = this.getHeightOfLine(i);\n        height += (i === len - 1 ? lineHeight / this.lineHeight : lineHeight);\n      }\n      return height;\n    },\n\n    /**\n     * @private\n     * @return {Number} Left offset\n     */\n    _getLeftOffset: function() {\n      return -this.width / 2;\n    },\n\n    /**\n     * @private\n     * @return {Number} Top offset\n     */\n    _getTopOffset: function() {\n      return -this.height / 2;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     */\n    _renderTextCommon: function(ctx, method) {\n      ctx.save();\n      var lineHeights = 0, left = this._getLeftOffset(), top = this._getTopOffset(),\n          offsets = this._applyPatternGradientTransform(ctx, method === 'fillText' ? this.fill : this.stroke);\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        var heightOfLine = this.getHeightOfLine(i),\n            maxHeight = heightOfLine / this.lineHeight,\n            leftOffset = this._getLineLeftOffset(i);\n        this._renderTextLine(\n          method,\n          ctx,\n          this._textLines[i],\n          left + leftOffset - offsets.offsetX,\n          top + lineHeights + maxHeight - offsets.offsetY,\n          i\n        );\n        lineHeights += heightOfLine;\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextFill: function(ctx) {\n      if (!this.fill && !this.styleHas('fill')) {\n        return;\n      }\n\n      this._renderTextCommon(ctx, 'fillText');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextStroke: function(ctx) {\n      if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n      this._setLineDash(ctx, this.strokeDashArray);\n      ctx.beginPath();\n      this._renderTextCommon(ctx, 'strokeText');\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Content of the line\n     * @param {Number} left\n     * @param {Number} top\n     * @param {Number} lineIndex\n     * @param {Number} charOffset\n     */\n    _renderChars: function(method, ctx, line, left, top, lineIndex) {\n      // set proper line offset\n      var lineHeight = this.getHeightOfLine(lineIndex),\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          actualStyle,\n          nextStyle,\n          charsToRender = '',\n          charBox,\n          boxWidth = 0,\n          timeToRender,\n          shortCut = !isJustify && this.charSpacing === 0 && this.isEmptyStyles(lineIndex);\n\n      ctx.save();\n      top -= lineHeight * this._fontSizeFraction / this.lineHeight;\n      if (shortCut) {\n        // render all the line in one pass without checking\n        this._renderChar(method, ctx, lineIndex, 0, this.textLines[lineIndex], left, top, lineHeight);\n        ctx.restore();\n        return;\n      }\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\n        timeToRender = i === len || this.charSpacing;\n        charsToRender += line[i];\n        charBox = this.__charBounds[lineIndex][i];\n        if (boxWidth === 0) {\n          left += charBox.kernedWidth - charBox.width;\n          boxWidth += charBox.width;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n        if (isJustify && !timeToRender) {\n          if (this._reSpaceAndTab.test(line[i])) {\n            timeToRender = true;\n          }\n        }\n        if (!timeToRender) {\n          // if we have charSpacing, we render char by char\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n          timeToRender = this._hasStyleChanged(actualStyle, nextStyle);\n        }\n        if (timeToRender) {\n          this._renderChar(method, ctx, lineIndex, i, charsToRender, left, top, lineHeight);\n          charsToRender = '';\n          actualStyle = nextStyle;\n          left += boxWidth;\n          boxWidth = 0;\n        }\n      }\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {String} _char\n     * @param {Number} left Left coordinate\n     * @param {Number} top Top coordinate\n     * @param {Number} lineHeight Height of the line\n     */\n    _renderChar: function(method, ctx, lineIndex, charIndex, _char, left, top) {\n      var decl = this._getStyleDeclaration(lineIndex, charIndex),\n          fullDecl = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n          shouldFill = method === 'fillText' && fullDecl.fill,\n          shouldStroke = method === 'strokeText' && fullDecl.stroke && fullDecl.strokeWidth;\n\n      if (!shouldStroke && !shouldFill) {\n        return;\n      }\n      decl && ctx.save();\n\n      this._applyCharStyles(method, ctx, lineIndex, charIndex, fullDecl);\n\n      if (decl && decl.textBackgroundColor) {\n        this._removeShadow(ctx);\n      }\n      if (decl && decl.deltaY) {\n        top += decl.deltaY;\n      }\n\n      shouldFill && ctx.fillText(_char, left, top);\n      shouldStroke && ctx.strokeText(_char, left, top);\n      decl && ctx.restore();\n    },\n\n    /**\n     * Turns the character into a 'superior figure' (i.e. 'superscript')\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    setSuperscript: function(start, end) {\n      return this._setScript(start, end, this.superscript);\n    },\n\n    /**\n     * Turns the character into an 'inferior figure' (i.e. 'subscript')\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    setSubscript: function(start, end) {\n      return this._setScript(start, end, this.subscript);\n    },\n\n    /**\n     * Applies 'schema' at given position\n     * @private\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @param {Number} schema\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    _setScript: function(start, end, schema) {\n      var loc = this.get2DCursorLocation(start, true),\n          fontSize = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'fontSize'),\n          dy = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'deltaY'),\n          style = { fontSize: fontSize * schema.size, deltaY: dy + fontSize * schema.baseline };\n      this.setSelectionStyles(style, start, end);\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChanged: function(prevStyle, thisStyle) {\n      return prevStyle.fill !== thisStyle.fill ||\n              prevStyle.stroke !== thisStyle.stroke ||\n              prevStyle.strokeWidth !== thisStyle.strokeWidth ||\n              prevStyle.fontSize !== thisStyle.fontSize ||\n              prevStyle.fontFamily !== thisStyle.fontFamily ||\n              prevStyle.fontWeight !== thisStyle.fontWeight ||\n              prevStyle.fontStyle !== thisStyle.fontStyle ||\n              prevStyle.deltaY !== thisStyle.deltaY;\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChangedForSvg: function(prevStyle, thisStyle) {\n      return this._hasStyleChanged(prevStyle, thisStyle) ||\n        prevStyle.overline !== thisStyle.overline ||\n        prevStyle.underline !== thisStyle.underline ||\n        prevStyle.linethrough !== thisStyle.linethrough;\n    },\n\n    /**\n     * @private\n     * @param {Number} lineIndex index text line\n     * @return {Number} Line left offset\n     */\n    _getLineLeftOffset: function(lineIndex) {\n      var lineWidth = this.getLineWidth(lineIndex);\n      if (this.textAlign === 'center') {\n        return (this.width - lineWidth) / 2;\n      }\n      if (this.textAlign === 'right') {\n        return this.width - lineWidth;\n      }\n      if (this.textAlign === 'justify-center' && this.isEndOfWrapping(lineIndex)) {\n        return (this.width - lineWidth) / 2;\n      }\n      if (this.textAlign === 'justify-right' && this.isEndOfWrapping(lineIndex)) {\n        return this.width - lineWidth;\n      }\n      return 0;\n    },\n\n    /**\n     * @private\n     */\n    _clearCache: function() {\n      this.__lineWidths = [];\n      this.__lineHeights = [];\n      this.__charBounds = [];\n    },\n\n    /**\n     * @private\n     */\n    _shouldClearDimensionCache: function() {\n      var shouldClear = this._forceClearCache;\n      shouldClear || (shouldClear = this.hasStateChanged('_dimensionAffectingProps'));\n      if (shouldClear) {\n        this.dirty = true;\n        this._forceClearCache = false;\n      }\n      return shouldClear;\n    },\n\n    /**\n     * Measure a single line given its index. Used to calculate the initial\n     * text bounding box. The values are calculated and stored in __lineWidths cache.\n     * @private\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    getLineWidth: function(lineIndex) {\n      if (this.__lineWidths[lineIndex]) {\n        return this.__lineWidths[lineIndex];\n      }\n\n      var width, line = this._textLines[lineIndex], lineInfo;\n\n      if (line === '') {\n        width = 0;\n      }\n      else {\n        lineInfo = this.measureLine(lineIndex);\n        width = lineInfo.width;\n      }\n      this.__lineWidths[lineIndex] = width;\n      return width;\n    },\n\n    _getWidthOfCharSpacing: function() {\n      if (this.charSpacing !== 0) {\n        return this.fontSize * this.charSpacing / 1000;\n      }\n      return 0;\n    },\n\n    /**\n     * Retrieves the value of property at given character position\n     * @param {Number} lineIndex the line number\n     * @param {Number} charIndex the charater number\n     * @param {String} property the property name\n     * @returns the value of 'property'\n     */\n    getValueOfPropertyAt: function(lineIndex, charIndex, property) {\n      var charStyle = this._getStyleDeclaration(lineIndex, charIndex);\n      if (charStyle && typeof charStyle[property] !== 'undefined') {\n        return charStyle[property];\n      }\n      return this[property];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextDecoration: function(ctx, type) {\n      if (!this[type] && !this.styleHas(type)) {\n        return;\n      }\n      var heightOfLine, size, _size,\n          lineLeftOffset, dy, _dy,\n          line, lastDecoration,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(), top,\n          boxStart, boxWidth, charBox, currentDecoration,\n          maxHeight, currentFill, lastFill,\n          charSpacing = this._getWidthOfCharSpacing();\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this.getHeightOfLine(i);\n        if (!this[type] && !this.styleHas(type, i)) {\n          topOffset += heightOfLine;\n          continue;\n        }\n        line = this._textLines[i];\n        maxHeight = heightOfLine / this.lineHeight;\n        lineLeftOffset = this._getLineLeftOffset(i);\n        boxStart = 0;\n        boxWidth = 0;\n        lastDecoration = this.getValueOfPropertyAt(i, 0, type);\n        lastFill = this.getValueOfPropertyAt(i, 0, 'fill');\n        top = topOffset + maxHeight * (1 - this._fontSizeFraction);\n        size = this.getHeightOfChar(i, 0);\n        dy = this.getValueOfPropertyAt(i, 0, 'deltaY');\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          charBox = this.__charBounds[i][j];\n          currentDecoration = this.getValueOfPropertyAt(i, j, type);\n          currentFill = this.getValueOfPropertyAt(i, j, 'fill');\n          _size = this.getHeightOfChar(i, j);\n          _dy = this.getValueOfPropertyAt(i, j, 'deltaY');\n          if ((currentDecoration !== lastDecoration || currentFill !== lastFill || _size !== size || _dy !== dy) &&\n              boxWidth > 0) {\n            ctx.fillStyle = lastFill;\n            lastDecoration && lastFill && ctx.fillRect(\n              leftOffset + lineLeftOffset + boxStart,\n              top + this.offsets[type] * size + dy,\n              boxWidth,\n              this.fontSize / 15\n            );\n            boxStart = charBox.left;\n            boxWidth = charBox.width;\n            lastDecoration = currentDecoration;\n            lastFill = currentFill;\n            size = _size;\n            dy = _dy;\n          }\n          else {\n            boxWidth += charBox.kernedWidth;\n          }\n        }\n        ctx.fillStyle = currentFill;\n        currentDecoration && currentFill && ctx.fillRect(\n          leftOffset + lineLeftOffset + boxStart,\n          top + this.offsets[type] * size + dy,\n          boxWidth - charSpacing,\n          this.fontSize / 15\n        );\n        topOffset += heightOfLine;\n      }\n      // if there is text background color no\n      // other shadows should be casted\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * return font declaration string for canvas context\n     * @param {Object} [styleObject] object\n     * @returns {String} font declaration formatted for canvas context.\n     */\n    _getFontDeclaration: function(styleObject, forMeasuring) {\n      var style = styleObject || this, family = this.fontFamily,\n          fontIsGeneric = fabric.Text.genericFonts.indexOf(family.toLowerCase()) > -1;\n      var fontFamily = family === undefined ||\n      family.indexOf('\\'') > -1 ||\n      family.indexOf('\"') > -1 || fontIsGeneric\n        ? style.fontFamily : '\"' + style.fontFamily + '\"';\n      return [\n        // node-canvas needs \"weight style\", while browsers need \"style weight\"\n        (fabric.isLikelyNode ? style.fontWeight : style.fontStyle),\n        (fabric.isLikelyNode ? style.fontStyle : style.fontWeight),\n        forMeasuring ? this.CACHE_FONT_SIZE + 'px' : style.fontSize + 'px',\n        fontFamily\n      ].join(' ');\n    },\n\n    /**\n     * Renders text instance on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      // do not render if object is not visible\n      if (!this.visible) {\n        return;\n      }\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n      }\n      this.callSuper('render', ctx);\n    },\n\n    /**\n     * Returns the text as an array of lines.\n     * @param {String} text text to split\n     * @returns {Array} Lines in the text\n     */\n    _splitTextIntoLines: function(text) {\n      var lines = text.split(this._reNewline),\n          newLines = new Array(lines.length),\n          newLine = ['\\n'],\n          newText = [];\n      for (var i = 0; i < lines.length; i++) {\n        newLines[i] = fabric.util.string.graphemeSplit(lines[i]);\n        newText = newText.concat(newLines[i], newLine);\n      }\n      newText.pop();\n      return { _unwrappedLines: newLines, lines: lines, graphemeText: newText, graphemeLines: newLines };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      var additionalProperties = [\n        'text',\n        'fontSize',\n        'fontWeight',\n        'fontFamily',\n        'fontStyle',\n        'lineHeight',\n        'underline',\n        'overline',\n        'linethrough',\n        'textAlign',\n        'textBackgroundColor',\n        'charSpacing',\n      ].concat(propertiesToInclude);\n      var obj = this.callSuper('toObject', additionalProperties);\n      obj.styles = clone(this.styles, true);\n      return obj;\n    },\n\n    /**\n     * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n     * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n     * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    set: function(key, value) {\n      this.callSuper('set', key, value);\n      var needsDims = false;\n      if (typeof key === 'object') {\n        for (var _key in key) {\n          needsDims = needsDims || this._dimensionAffectingProps.indexOf(_key) !== -1;\n        }\n      }\n      else {\n        needsDims = this._dimensionAffectingProps.indexOf(key) !== -1;\n      }\n      if (needsDims) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      return this;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function() {\n      return 1;\n    }\n  });\n\n  /* _FROM_SVG_START_ */\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})\n   * @static\n   * @memberOf fabric.Text\n   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n   */\n  fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(\n    'x y dx dy font-family font-style font-weight font-size letter-spacing text-decoration text-anchor'.split(' '));\n\n  /**\n   * Default SVG font size\n   * @static\n   * @memberOf fabric.Text\n   */\n  fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\n\n  /**\n   * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)\n   * @static\n   * @memberOf fabric.Text\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n  fabric.Text.fromElement = function(element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES),\n        parsedAnchor = parsedAttributes.textAnchor || 'left';\n    options = fabric.util.object.extend((options ? clone(options) : { }), parsedAttributes);\n\n    options.top = options.top || 0;\n    options.left = options.left || 0;\n    if (parsedAttributes.textDecoration) {\n      var textDecoration = parsedAttributes.textDecoration;\n      if (textDecoration.indexOf('underline') !== -1) {\n        options.underline = true;\n      }\n      if (textDecoration.indexOf('overline') !== -1) {\n        options.overline = true;\n      }\n      if (textDecoration.indexOf('line-through') !== -1) {\n        options.linethrough = true;\n      }\n      delete options.textDecoration;\n    }\n    if ('dx' in parsedAttributes) {\n      options.left += parsedAttributes.dx;\n    }\n    if ('dy' in parsedAttributes) {\n      options.top += parsedAttributes.dy;\n    }\n    if (!('fontSize' in options)) {\n      options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n    }\n\n    var textContent = '';\n\n    // The XML is not properly parsed in IE9 so a workaround to get\n    // textContent is through firstChild.data. Another workaround would be\n    // to convert XML loaded from a file to be converted using DOMParser (same way loadSVGFromString() does)\n    if (!('textContent' in element)) {\n      if ('firstChild' in element && element.firstChild !== null) {\n        if ('data' in element.firstChild && element.firstChild.data !== null) {\n          textContent = element.firstChild.data;\n        }\n      }\n    }\n    else {\n      textContent = element.textContent;\n    }\n\n    textContent = textContent.replace(/^\\s+|\\s+$|\\n+/g, '').replace(/\\s+/g, ' ');\n    var originalStrokeWidth = options.strokeWidth;\n    options.strokeWidth = 0;\n\n    var text = new fabric.Text(textContent, options),\n        textHeightScaleFactor = text.getScaledHeight() / text.height,\n        lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height,\n        scaledDiff = lineHeightDiff * textHeightScaleFactor,\n        textHeight = text.getScaledHeight() + scaledDiff,\n        offX = 0;\n    /*\n      Adjust positioning:\n        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n        fabric output by default at top, left.\n    */\n    if (parsedAnchor === 'center') {\n      offX = text.getScaledWidth() / 2;\n    }\n    if (parsedAnchor === 'right') {\n      offX = text.getScaledWidth();\n    }\n    text.set({\n      left: text.left - offX,\n      top: text.top - (textHeight - text.fontSize * (0.07 + text._fontSizeFraction)) / text.lineHeight,\n      strokeWidth: typeof originalStrokeWidth !== 'undefined' ? originalStrokeWidth : 1,\n    });\n    callback(text);\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Text instance from an object representation\n   * @static\n   * @memberOf fabric.Text\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Text instance is created\n   */\n  fabric.Text.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Text', object, callback, 'text');\n  };\n\n  fabric.Text.genericFonts = ['sans-serif', 'serif', 'cursive', 'fantasy', 'monospace'];\n\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Text);\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n  fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {\n    /**\n     * Returns true if object has no styling or no styling in a line\n     * @param {Number} lineIndex , lineIndex is on wrapped lines.\n     * @return {Boolean}\n     */\n    isEmptyStyles: function(lineIndex) {\n      if (!this.styles) {\n        return true;\n      }\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n        return true;\n      }\n      var obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          // eslint-disable-next-line no-unused-vars\n          for (var p3 in obj[p1][p2]) {\n            return false;\n          }\n        }\n      }\n      return true;\n    },\n\n    /**\n     * Returns true if object has a style property or has it ina specified line\n     * @param {Number} lineIndex\n     * @return {Boolean}\n     */\n    styleHas: function(property, lineIndex) {\n      if (!this.styles || !property || property === '') {\n        return false;\n      }\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n        return false;\n      }\n      var obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\n      // eslint-disable-next-line\n      for (var p1 in obj) {\n        // eslint-disable-next-line\n        for (var p2 in obj[p1]) {\n          if (typeof obj[p1][p2][property] !== 'undefined') {\n            return true;\n          }\n        }\n      }\n      return false;\n    },\n\n    /**\n     * Check if characters in a text have a value for a property\n     * whose value matches the textbox's value for that property.  If so,\n     * the character-level property is deleted.  If the character\n     * has no other properties, then it is also deleted.  Finally,\n     * if the line containing that character has no other characters\n     * then it also is deleted.\n     *\n     * @param {string} property The property to compare between characters and text.\n     */\n    cleanStyle: function(property) {\n      if (!this.styles || !property || property === '') {\n        return false;\n      }\n      var obj = this.styles, stylesCount = 0, letterCount, stylePropertyValue,\n          allStyleObjectPropertiesMatch = true, graphemeCount = 0, styleObject;\n      // eslint-disable-next-line\n      for (var p1 in obj) {\n        letterCount = 0;\n        // eslint-disable-next-line\n        for (var p2 in obj[p1]) {\n          var styleObject = obj[p1][p2],\n              stylePropertyHasBeenSet = styleObject.hasOwnProperty(property);\n\n          stylesCount++;\n\n          if (stylePropertyHasBeenSet) {\n            if (!stylePropertyValue) {\n              stylePropertyValue = styleObject[property];\n            }\n            else if (styleObject[property] !== stylePropertyValue) {\n              allStyleObjectPropertiesMatch = false;\n            }\n\n            if (styleObject[property] === this[property]) {\n              delete styleObject[property];\n            }\n          }\n          else {\n            allStyleObjectPropertiesMatch = false;\n          }\n\n          if (Object.keys(styleObject).length !== 0) {\n            letterCount++;\n          }\n          else {\n            delete obj[p1][p2];\n          }\n        }\n\n        if (letterCount === 0) {\n          delete obj[p1];\n        }\n      }\n      // if every grapheme has the same style set then\n      // delete those styles and set it on the parent\n      for (var i = 0; i < this._textLines.length; i++) {\n        graphemeCount += this._textLines[i].length;\n      }\n      if (allStyleObjectPropertiesMatch && stylesCount === graphemeCount) {\n        this[property] = stylePropertyValue;\n        this.removeStyle(property);\n      }\n    },\n\n    /**\n     * Remove a style property or properties from all individual character styles\n     * in a text object.  Deletes the character style object if it contains no other style\n     * props.  Deletes a line style object if it contains no other character styles.\n     *\n     * @param {String} props The property to remove from character styles.\n     */\n    removeStyle: function(property) {\n      if (!this.styles || !property || property === '') {\n        return;\n      }\n      var obj = this.styles, line, lineNum, charNum;\n      for (lineNum in obj) {\n        line = obj[lineNum];\n        for (charNum in line) {\n          delete line[charNum][property];\n          if (Object.keys(line[charNum]).length === 0) {\n            delete line[charNum];\n          }\n        }\n        if (Object.keys(line).length === 0) {\n          delete obj[lineNum];\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _extendStyles: function(index, styles) {\n      var loc = this.get2DCursorLocation(index);\n\n      if (!this._getLineStyle(loc.lineIndex)) {\n        this._setLineStyle(loc.lineIndex, {});\n      }\n\n      if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\n        this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\n      }\n\n      fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\n    },\n\n    /**\n     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n     * @param {Boolean} [skipWrapping] consider the location for unwrapped lines. usefull to manage styles.\n     */\n    get2DCursorLocation: function(selectionStart, skipWrapping) {\n      if (typeof selectionStart === 'undefined') {\n        selectionStart = this.selectionStart;\n      }\n      var lines = skipWrapping ? this._unwrappedTextLines : this._textLines;\n      var len = lines.length;\n      for (var i = 0; i < len; i++) {\n        if (selectionStart <= lines[i].length) {\n          return {\n            lineIndex: i,\n            charIndex: selectionStart\n          };\n        }\n        selectionStart -= lines[i].length + 1;\n      }\n      return {\n        lineIndex: i - 1,\n        charIndex: lines[i - 1].length < selectionStart ? lines[i - 1].length : selectionStart\n      };\n    },\n\n    /**\n     * Gets style of a current selection/cursor (at the start position)\n     * if startIndex or endIndex are not provided, slectionStart or selectionEnd will be used.\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n     * @param {Boolean} [complete] get full style or not\n     * @return {Array} styles an array with one, zero or more Style objects\n     */\n    getSelectionStyles: function(startIndex, endIndex, complete) {\n      if (typeof startIndex === 'undefined') {\n        startIndex = this.selectionStart || 0;\n      }\n      if (typeof endIndex === 'undefined') {\n        endIndex = this.selectionEnd || startIndex;\n      }\n      var styles = [];\n      for (var i = startIndex; i < endIndex; i++) {\n        styles.push(this.getStyleAtPosition(i, complete));\n      }\n      return styles;\n    },\n\n    /**\n     * Gets style of a current selection/cursor position\n     * @param {Number} position  to get styles at\n     * @param {Boolean} [complete] full style if true\n     * @return {Object} style Style object at a specified index\n     * @private\n     */\n    getStyleAtPosition: function(position, complete) {\n      var loc = this.get2DCursorLocation(position),\n          style = complete ? this.getCompleteStyleDeclaration(loc.lineIndex, loc.charIndex) :\n            this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\n      return style || {};\n    },\n\n    /**\n     * Sets style of a current selection, if no selection exist, do not set anything.\n     * @param {Object} [styles] Styles object\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    setSelectionStyles: function(styles, startIndex, endIndex) {\n      if (typeof startIndex === 'undefined') {\n        startIndex = this.selectionStart || 0;\n      }\n      if (typeof endIndex === 'undefined') {\n        endIndex = this.selectionEnd || startIndex;\n      }\n      for (var i = startIndex; i < endIndex; i++) {\n        this._extendStyles(i, styles);\n      }\n      /* not included in _extendStyles to avoid clearing cache more than once */\n      this._forceClearCache = true;\n      return this;\n    },\n\n    /**\n     * get the reference, not a clone, of the style object for a given character\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @return {Object} style object\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex) {\n      var lineStyle = this.styles && this.styles[lineIndex];\n      if (!lineStyle) {\n        return null;\n      }\n      return lineStyle[charIndex];\n    },\n\n    /**\n     * return a new object that contains all the style property for a character\n     * the object returned is newly created\n     * @param {Number} lineIndex of the line where the character is\n     * @param {Number} charIndex position of the character on the line\n     * @return {Object} style object\n     */\n    getCompleteStyleDeclaration: function(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex) || { },\n          styleObject = { }, prop;\n      for (var i = 0; i < this._styleProperties.length; i++) {\n        prop = this._styleProperties[i];\n        styleObject[prop] = typeof style[prop] === 'undefined' ? this[prop] : style[prop];\n      }\n      return styleObject;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     *\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      return this.styles[lineIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex, style) {\n      this.styles[lineIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      delete this.styles[lineIndex];\n    }\n  });\n})();\n\n\n(function() {\n\n  function parseDecoration(object) {\n    if (object.textDecoration) {\n      object.textDecoration.indexOf('underline') > -1 && (object.underline = true);\n      object.textDecoration.indexOf('line-through') > -1 && (object.linethrough = true);\n      object.textDecoration.indexOf('overline') > -1 && (object.overline = true);\n      delete object.textDecoration;\n    }\n  }\n\n  /**\n   * IText class (introduced in <b>v1.4</b>) Events are also fired with \"text:\"\n   * prefix when observing canvas.\n   * @class fabric.IText\n   * @extends fabric.Text\n   * @mixes fabric.Observable\n   *\n   * @fires changed\n   * @fires selection:changed\n   * @fires editing:entered\n   * @fires editing:exited\n   *\n   * @return {fabric.IText} thisArg\n   * @see {@link fabric.IText#initialize} for constructor definition\n   *\n   * <p>Supported key combinations:</p>\n   * <pre>\n   *   Move cursor:                    left, right, up, down\n   *   Select character:               shift + left, shift + right\n   *   Select text vertically:         shift + up, shift + down\n   *   Move cursor by word:            alt + left, alt + right\n   *   Select words:                   shift + alt + left, shift + alt + right\n   *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n   *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n   *   Jump to start/end of text:      cmd + up, cmd + down\n   *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n   *   Delete character:               backspace\n   *   Delete word:                    alt + backspace\n   *   Delete line:                    cmd + backspace\n   *   Forward delete:                 delete\n   *   Copy text:                      ctrl/cmd + c\n   *   Paste text:                     ctrl/cmd + v\n   *   Cut text:                       ctrl/cmd + x\n   *   Select entire text:             ctrl/cmd + a\n   *   Quit editing                    tab or esc\n   * </pre>\n   *\n   * <p>Supported mouse/touch combination</p>\n   * <pre>\n   *   Position cursor:                click/touch\n   *   Create selection:               click/touch & drag\n   *   Create selection:               click & shift + click\n   *   Select word:                    double click\n   *   Select line:                    triple click\n   * </pre>\n   */\n  fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'i-text',\n\n    /**\n     * Index where text selection starts (or where cursor is when there is no selection)\n     * @type Number\n     * @default\n     */\n    selectionStart: 0,\n\n    /**\n     * Index where text selection ends\n     * @type Number\n     * @default\n     */\n    selectionEnd: 0,\n\n    /**\n     * Color of text selection\n     * @type String\n     * @default\n     */\n    selectionColor: 'rgba(17,119,255,0.3)',\n\n    /**\n     * Indicates whether text is in editing mode\n     * @type Boolean\n     * @default\n     */\n    isEditing: false,\n\n    /**\n     * Indicates whether a text can be edited\n     * @type Boolean\n     * @default\n     */\n    editable: true,\n\n    /**\n     * Border color of text object while it's in editing mode\n     * @type String\n     * @default\n     */\n    editingBorderColor: 'rgba(102,153,255,0.25)',\n\n    /**\n     * Width of cursor (in px)\n     * @type Number\n     * @default\n     */\n    cursorWidth: 2,\n\n    /**\n     * Color of default cursor (when not overwritten by character style)\n     * @type String\n     * @default\n     */\n    cursorColor: '#333',\n\n    /**\n     * Delay between cursor blink (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDelay: 1000,\n\n    /**\n     * Duration of cursor fadein (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDuration: 600,\n\n    /**\n     * Indicates whether internal text char widths can be cached\n     * @type Boolean\n     * @default\n     */\n    caching: true,\n\n    /**\n     * @private\n     */\n    _reSpace: /\\s|\\n/,\n\n    /**\n     * @private\n     */\n    _currentCursorOpacity: 0,\n\n    /**\n     * @private\n     */\n    _selectionDirection: null,\n\n    /**\n     * @private\n     */\n    _abortCursorAnimation: false,\n\n    /**\n     * @private\n     */\n    __widthOfSpace: [],\n\n    /**\n     * Helps determining when the text is in composition, so that the cursor\n     * rendering is altered.\n     */\n    inCompositionMode: false,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.IText} thisArg\n     */\n    initialize: function(text, options) {\n      this.callSuper('initialize', text, options);\n      this.initBehavior();\n    },\n\n    /**\n     * Sets selection start (left boundary of a selection)\n     * @param {Number} index Index to set selection start to\n     */\n    setSelectionStart: function(index) {\n      index = Math.max(index, 0);\n      this._updateAndFire('selectionStart', index);\n    },\n\n    /**\n     * Sets selection end (right boundary of a selection)\n     * @param {Number} index Index to set selection end to\n     */\n    setSelectionEnd: function(index) {\n      index = Math.min(index, this.text.length);\n      this._updateAndFire('selectionEnd', index);\n    },\n\n    /**\n     * @private\n     * @param {String} property 'selectionStart' or 'selectionEnd'\n     * @param {Number} index new position of property\n     */\n    _updateAndFire: function(property, index) {\n      if (this[property] !== index) {\n        this._fireSelectionChanged();\n        this[property] = index;\n      }\n      this._updateTextarea();\n    },\n\n    /**\n     * Fires the even of selection changed\n     * @private\n     */\n    _fireSelectionChanged: function() {\n      this.fire('selection:changed');\n      this.canvas && this.canvas.fire('text:selection:changed', { target: this });\n    },\n\n    /**\n     * Initialize text dimensions. Render all text on given context\n     * or on a offscreen canvas to get the text width with measureText.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     * @private\n     */\n    initDimensions: function() {\n      this.isEditing && this.initDelayedCursor();\n      this.clearContextTop();\n      this.callSuper('initDimensions');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function(ctx) {\n      this.clearContextTop();\n      this.callSuper('render', ctx);\n      // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\n      // the correct position but not at every cursor animation.\n      this.cursorOffsetCache = { };\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function(ctx) {\n      this.callSuper('_render', ctx);\n    },\n\n    /**\n     * Prepare and clean the contextTop\n     */\n    clearContextTop: function(skipRestore) {\n      if (!this.isEditing) {\n        return;\n      }\n      if (this.canvas && this.canvas.contextTop) {\n        var ctx = this.canvas.contextTop, v = this.canvas.viewportTransform;\n        ctx.save();\n        ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n        this.transform(ctx);\n        this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n        this._clearTextArea(ctx);\n        skipRestore || ctx.restore();\n      }\n    },\n\n    /**\n     * Renders cursor or selection (depending on what exists)\n     */\n    renderCursorOrSelection: function() {\n      if (!this.isEditing || !this.canvas) {\n        return;\n      }\n      var boundaries = this._getCursorBoundaries(), ctx;\n      if (this.canvas && this.canvas.contextTop) {\n        ctx = this.canvas.contextTop;\n        this.clearContextTop(true);\n      }\n      else {\n        ctx = this.canvas.contextContainer;\n        ctx.save();\n      }\n      if (this.selectionStart === this.selectionEnd) {\n        this.renderCursor(boundaries, ctx);\n      }\n      else {\n        this.renderSelection(boundaries, ctx);\n      }\n      ctx.restore();\n    },\n\n    _clearTextArea: function(ctx) {\n      // we add 4 pixel, to be sure to do not leave any pixel out\n      var width = this.width + 4, height = this.height + 4;\n      ctx.clearRect(-width / 2, -height / 2, width, height);\n    },\n\n    /**\n     * Returns cursor boundaries (left, top, leftOffset, topOffset)\n     * @private\n     * @param {Array} chars Array of characters\n     * @param {String} typeOfBoundaries\n     */\n    _getCursorBoundaries: function(position) {\n\n      // left/top are left/top of entire text box\n      // leftOffset/topOffset are offset from that left/top point of a text box\n\n      if (typeof position === 'undefined') {\n        position = this.selectionStart;\n      }\n\n      var left = this._getLeftOffset(),\n          top = this._getTopOffset(),\n          offsets = this._getCursorBoundariesOffsets(position);\n\n      return {\n        left: left,\n        top: top,\n        leftOffset: offsets.left,\n        topOffset: offsets.top\n      };\n    },\n\n    /**\n     * @private\n     */\n    _getCursorBoundariesOffsets: function(position) {\n      if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\n        return this.cursorOffsetCache;\n      }\n      var lineLeftOffset,\n          lineIndex,\n          charIndex,\n          topOffset = 0,\n          leftOffset = 0,\n          boundaries,\n          cursorPosition = this.get2DCursorLocation(position);\n      charIndex = cursorPosition.charIndex;\n      lineIndex = cursorPosition.lineIndex;\n      for (var i = 0; i < lineIndex; i++) {\n        topOffset += this.getHeightOfLine(i);\n      }\n      lineLeftOffset = this._getLineLeftOffset(lineIndex);\n      var bound = this.__charBounds[lineIndex][charIndex];\n      bound && (leftOffset = bound.left);\n      if (this.charSpacing !== 0 && charIndex === this._textLines[lineIndex].length) {\n        leftOffset -= this._getWidthOfCharSpacing();\n      }\n      boundaries = {\n        top: topOffset,\n        left: lineLeftOffset + (leftOffset > 0 ? leftOffset : 0),\n      };\n      this.cursorOffsetCache = boundaries;\n      return this.cursorOffsetCache;\n    },\n\n    /**\n     * Renders cursor\n     * @param {Object} boundaries\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderCursor: function(boundaries, ctx) {\n      var cursorLocation = this.get2DCursorLocation(),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex > 0 ? cursorLocation.charIndex - 1 : 0,\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize'),\n          multiplier = this.scaleX * this.canvas.getZoom(),\n          cursorWidth = this.cursorWidth / multiplier,\n          topOffset = boundaries.topOffset,\n          dy = this.getValueOfPropertyAt(lineIndex, charIndex, 'deltaY');\n\n      topOffset += (1 - this._fontSizeFraction) * this.getHeightOfLine(lineIndex) / this.lineHeight\n        - charHeight * (1 - this._fontSizeFraction);\n\n      if (this.inCompositionMode) {\n        this.renderSelection(boundaries, ctx);\n      }\n\n      ctx.fillStyle = this.getValueOfPropertyAt(lineIndex, charIndex, 'fill');\n      ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\n      ctx.fillRect(\n        boundaries.left + boundaries.leftOffset - cursorWidth / 2,\n        topOffset + boundaries.top + dy,\n        cursorWidth,\n        charHeight);\n    },\n\n    /**\n     * Renders text selection\n     * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderSelection: function(boundaries, ctx) {\n\n      var selectionStart = this.inCompositionMode ? this.hiddenTextarea.selectionStart : this.selectionStart,\n          selectionEnd = this.inCompositionMode ? this.hiddenTextarea.selectionEnd : this.selectionEnd,\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          start = this.get2DCursorLocation(selectionStart),\n          end = this.get2DCursorLocation(selectionEnd),\n          startLine = start.lineIndex,\n          endLine = end.lineIndex,\n          startChar = start.charIndex < 0 ? 0 : start.charIndex,\n          endChar = end.charIndex < 0 ? 0 : end.charIndex;\n\n      for (var i = startLine; i <= endLine; i++) {\n        var lineOffset = this._getLineLeftOffset(i) || 0,\n            lineHeight = this.getHeightOfLine(i),\n            realLineHeight = 0, boxStart = 0, boxEnd = 0;\n\n        if (i === startLine) {\n          boxStart = this.__charBounds[startLine][startChar].left;\n        }\n        if (i >= startLine && i < endLine) {\n          boxEnd = isJustify && !this.isEndOfWrapping(i) ? this.width : this.getLineWidth(i) || 5; // WTF is this 5?\n        }\n        else if (i === endLine) {\n          if (endChar === 0) {\n            boxEnd = this.__charBounds[endLine][endChar].left;\n          }\n          else {\n            var charSpacing = this._getWidthOfCharSpacing();\n            boxEnd = this.__charBounds[endLine][endChar - 1].left\n              + this.__charBounds[endLine][endChar - 1].width - charSpacing;\n          }\n        }\n        realLineHeight = lineHeight;\n        if (this.lineHeight < 1 || (i === endLine && this.lineHeight > 1)) {\n          lineHeight /= this.lineHeight;\n        }\n        if (this.inCompositionMode) {\n          ctx.fillStyle = this.compositionColor || 'black';\n          ctx.fillRect(\n            boundaries.left + lineOffset + boxStart,\n            boundaries.top + boundaries.topOffset + lineHeight,\n            boxEnd - boxStart,\n            1);\n        }\n        else {\n          ctx.fillStyle = this.selectionColor;\n          ctx.fillRect(\n            boundaries.left + lineOffset + boxStart,\n            boundaries.top + boundaries.topOffset,\n            boxEnd - boxStart,\n            lineHeight);\n        }\n\n\n        boundaries.topOffset += realLineHeight;\n      }\n    },\n\n    /**\n     * High level function to know the height of the cursor.\n     * the currentChar is the one that precedes the cursor\n     * Returns fontSize of char at the current cursor\n     * @return {Number} Character font size\n     */\n    getCurrentCharFontSize: function() {\n      var cp = this._getCurrentCharIndex();\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fontSize');\n    },\n\n    /**\n     * High level function to know the color of the cursor.\n     * the currentChar is the one that precedes the cursor\n     * Returns color (fill) of char at the current cursor\n     * @return {String} Character color (fill)\n     */\n    getCurrentCharColor: function() {\n      var cp = this._getCurrentCharIndex();\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fill');\n    },\n\n    /**\n     * Returns the cursor position for the getCurrent.. functions\n     * @private\n     */\n    _getCurrentCharIndex: function() {\n      var cursorPosition = this.get2DCursorLocation(this.selectionStart, true),\n          charIndex = cursorPosition.charIndex > 0 ? cursorPosition.charIndex - 1 : 0;\n      return { l: cursorPosition.lineIndex, c: charIndex };\n    }\n  });\n\n  /**\n   * Returns fabric.IText instance from an object representation\n   * @static\n   * @memberOf fabric.IText\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as argument\n   */\n  fabric.IText.fromObject = function(object, callback) {\n    parseDecoration(object);\n    if (object.styles) {\n      for (var i in object.styles) {\n        for (var j in object.styles[i]) {\n          parseDecoration(object.styles[i][j]);\n        }\n      }\n    }\n    fabric.Object._fromObject('IText', object, callback, 'text');\n  };\n})();\n\n\n(function() {\n\n  var clone = fabric.util.object.clone;\n\n  fabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n    /**\n     * Initializes all the interactive behavior of IText\n     */\n    initBehavior: function() {\n      this.initAddedHandler();\n      this.initRemovedHandler();\n      this.initCursorSelectionHandlers();\n      this.initDoubleClickSimulation();\n      this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\n    },\n\n    onDeselect: function() {\n      this.isEditing && this.exitEditing();\n      this.selected = false;\n    },\n\n    /**\n     * Initializes \"added\" event handler\n     */\n    initAddedHandler: function() {\n      var _this = this;\n      this.on('added', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          if (!canvas._hasITextHandlers) {\n            canvas._hasITextHandlers = true;\n            _this._initCanvasHandlers(canvas);\n          }\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          canvas._iTextInstances.push(_this);\n        }\n      });\n    },\n\n    initRemovedHandler: function() {\n      var _this = this;\n      this.on('removed', function() {\n        var canvas = _this.canvas;\n        if (canvas) {\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          fabric.util.removeFromArray(canvas._iTextInstances, _this);\n          if (canvas._iTextInstances.length === 0) {\n            canvas._hasITextHandlers = false;\n            _this._removeCanvasHandlers(canvas);\n          }\n        }\n      });\n    },\n\n    /**\n     * register canvas event to manage exiting on other instances\n     * @private\n     */\n    _initCanvasHandlers: function(canvas) {\n      canvas._mouseUpITextHandler = function() {\n        if (canvas._iTextInstances) {\n          canvas._iTextInstances.forEach(function(obj) {\n            obj.__isMousedown = false;\n          });\n        }\n      };\n      canvas.on('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * remove canvas event to manage exiting on other instances\n     * @private\n     */\n    _removeCanvasHandlers: function(canvas) {\n      canvas.off('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * @private\n     */\n    _tick: function() {\n      this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');\n    },\n\n    /**\n     * @private\n     */\n    _animateCursor: function(obj, targetOpacity, duration, completeMethod) {\n\n      var tickState;\n\n      tickState = {\n        isAborted: false,\n        abort: function() {\n          this.isAborted = true;\n        },\n      };\n\n      obj.animate('_currentCursorOpacity', targetOpacity, {\n        duration: duration,\n        onComplete: function() {\n          if (!tickState.isAborted) {\n            obj[completeMethod]();\n          }\n        },\n        onChange: function() {\n          // we do not want to animate a selection, only cursor\n          if (obj.canvas && obj.selectionStart === obj.selectionEnd) {\n            obj.renderCursorOrSelection();\n          }\n        },\n        abort: function() {\n          return tickState.isAborted;\n        }\n      });\n      return tickState;\n    },\n\n    /**\n     * @private\n     */\n    _onTickComplete: function() {\n\n      var _this = this;\n\n      if (this._cursorTimeout1) {\n        clearTimeout(this._cursorTimeout1);\n      }\n      this._cursorTimeout1 = setTimeout(function() {\n        _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');\n      }, 100);\n    },\n\n    /**\n     * Initializes delayed cursor\n     */\n    initDelayedCursor: function(restart) {\n      var _this = this,\n          delay = restart ? 0 : this.cursorDelay;\n\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this._cursorTimeout2 = setTimeout(function() {\n        _this._tick();\n      }, delay);\n    },\n\n    /**\n     * Aborts cursor animation and clears all timeouts\n     */\n    abortCursorAnimation: function() {\n      var shouldClear = this._currentTickState || this._currentTickCompleteState,\n          canvas = this.canvas;\n      this._currentTickState && this._currentTickState.abort();\n      this._currentTickCompleteState && this._currentTickCompleteState.abort();\n\n      clearTimeout(this._cursorTimeout1);\n      clearTimeout(this._cursorTimeout2);\n\n      this._currentCursorOpacity = 0;\n      // to clear just itext area we need to transform the context\n      // it may not be worth it\n      if (shouldClear && canvas) {\n        canvas.clearContext(canvas.contextTop || canvas.contextContainer);\n      }\n\n    },\n\n    /**\n     * Selects entire text\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    selectAll: function() {\n      this.selectionStart = 0;\n      this.selectionEnd = this._text.length;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      return this;\n    },\n\n    /**\n     * Returns selected text\n     * @return {String}\n     */\n    getSelectedText: function() {\n      return this._text.slice(this.selectionStart, this.selectionEnd).join('');\n    },\n\n    /**\n     * Find new selection index representing start of current word according to current selection index\n     * @param {Number} startFrom Surrent selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      // remove space before cursor first\n      if (this._reSpace.test(this._text[index])) {\n        while (this._reSpace.test(this._text[index])) {\n          offset++;\n          index--;\n        }\n      }\n      while (/\\S/.test(this._text[index]) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current word according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      // remove space after cursor first\n      if (this._reSpace.test(this._text[index])) {\n        while (this._reSpace.test(this._text[index])) {\n          offset++;\n          index++;\n        }\n      }\n      while (/\\S/.test(this._text[index]) && index < this.text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Find new selection index representing start of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryLeft: function(startFrom) {\n      var offset = 0, index = startFrom - 1;\n\n      while (!/\\n/.test(this._text[index]) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryRight: function(startFrom) {\n      var offset = 0, index = startFrom;\n\n      while (!/\\n/.test(this._text[index]) && index < this.text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Finds index corresponding to beginning or end of a word\n     * @param {Number} selectionStart Index of a character\n     * @param {Number} direction 1 or -1\n     * @return {Number} Index of the beginning or end of a word\n     */\n    searchWordBoundary: function(selectionStart, direction) {\n      var index     = this._reSpace.test(this.text.charAt(selectionStart)) ? selectionStart - 1 : selectionStart,\n          _char     = this.text.charAt(index),\n          reNonWord = /[ \\n\\.,;!\\?\\-]/;\n\n      while (!reNonWord.test(_char) && index > 0 && index < this.text.length) {\n        index += direction;\n        _char = this.text.charAt(index);\n      }\n      if (reNonWord.test(_char) && _char !== '\\n') {\n        index += direction === 1 ? 0 : 1;\n      }\n      return index;\n    },\n\n    /**\n     * Selects a word based on the index\n     * @param {Number} selectionStart Index of a character\n     */\n    selectWord: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.searchWordBoundary(selectionStart, -1), /* search backwards */\n          newSelectionEnd = this.searchWordBoundary(selectionStart, 1); /* search forward */\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * Selects a line based on the index\n     * @param {Number} selectionStart Index of a character\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    selectLine: function(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n          newSelectionEnd = this.findLineBoundaryRight(selectionStart);\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n      this._fireSelectionChanged();\n      this._updateTextarea();\n      return this;\n    },\n\n    /**\n     * Enters editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    enterEditing: function(e) {\n      if (this.isEditing || !this.editable) {\n        return;\n      }\n\n      if (this.canvas) {\n        this.canvas.calcOffset();\n        this.exitEditingOnOthers(this.canvas);\n      }\n\n      this.isEditing = true;\n\n      this.initHiddenTextarea(e);\n      this.hiddenTextarea.focus();\n      this.hiddenTextarea.value = this.text;\n      this._updateTextarea();\n      this._saveEditingProps();\n      this._setEditingProps();\n      this._textBeforeEdit = this.text;\n\n      this._tick();\n      this.fire('editing:entered');\n      this._fireSelectionChanged();\n      if (!this.canvas) {\n        return this;\n      }\n      this.canvas.fire('text:editing:entered', { target: this });\n      this.initMouseMoveHandler();\n      this.canvas.requestRenderAll();\n      return this;\n    },\n\n    exitEditingOnOthers: function(canvas) {\n      if (canvas._iTextInstances) {\n        canvas._iTextInstances.forEach(function(obj) {\n          obj.selected = false;\n          if (obj.isEditing) {\n            obj.exitEditing();\n          }\n        });\n      }\n    },\n\n    /**\n     * Initializes \"mousemove\" event handler\n     */\n    initMouseMoveHandler: function() {\n      this.canvas.on('mouse:move', this.mouseMoveHandler);\n    },\n\n    /**\n     * @private\n     */\n    mouseMoveHandler: function(options) {\n      if (!this.__isMousedown || !this.isEditing) {\n        return;\n      }\n\n      var newSelectionStart = this.getSelectionStartFromPointer(options.e),\n          currentStart = this.selectionStart,\n          currentEnd = this.selectionEnd;\n      if (\n        (newSelectionStart !== this.__selectionStartOnMouseDown || currentStart === currentEnd)\n        &&\n        (currentStart === newSelectionStart || currentEnd === newSelectionStart)\n      ) {\n        return;\n      }\n      if (newSelectionStart > this.__selectionStartOnMouseDown) {\n        this.selectionStart = this.__selectionStartOnMouseDown;\n        this.selectionEnd = newSelectionStart;\n      }\n      else {\n        this.selectionStart = newSelectionStart;\n        this.selectionEnd = this.__selectionStartOnMouseDown;\n      }\n      if (this.selectionStart !== currentStart || this.selectionEnd !== currentEnd) {\n        this.restartCursorIfNeeded();\n        this._fireSelectionChanged();\n        this._updateTextarea();\n        this.renderCursorOrSelection();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setEditingProps: function() {\n      this.hoverCursor = 'text';\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n      }\n\n      this.borderColor = this.editingBorderColor;\n\n      this.hasControls = this.selectable = false;\n      this.lockMovementX = this.lockMovementY = true;\n    },\n\n    /**\n     * convert from textarea to grapheme indexes\n     */\n    fromStringToGraphemeSelection: function(start, end, text) {\n      var smallerTextStart = text.slice(0, start),\n          graphemeStart = fabric.util.string.graphemeSplit(smallerTextStart).length;\n      if (start === end) {\n        return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n      }\n      var smallerTextEnd = text.slice(start, end),\n          graphemeEnd = fabric.util.string.graphemeSplit(smallerTextEnd).length;\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };\n    },\n\n    /**\n     * convert from fabric to textarea values\n     */\n    fromGraphemeToStringSelection: function(start, end, _text) {\n      var smallerTextStart = _text.slice(0, start),\n          graphemeStart = smallerTextStart.join('').length;\n      if (start === end) {\n        return { selectionStart: graphemeStart, selectionEnd: graphemeStart };\n      }\n      var smallerTextEnd = _text.slice(start, end),\n          graphemeEnd = smallerTextEnd.join('').length;\n      return { selectionStart: graphemeStart, selectionEnd: graphemeStart + graphemeEnd };\n    },\n\n    /**\n     * @private\n     */\n    _updateTextarea: function() {\n      this.cursorOffsetCache = { };\n      if (!this.hiddenTextarea) {\n        return;\n      }\n      if (!this.inCompositionMode) {\n        var newSelection = this.fromGraphemeToStringSelection(this.selectionStart, this.selectionEnd, this._text);\n        this.hiddenTextarea.selectionStart = newSelection.selectionStart;\n        this.hiddenTextarea.selectionEnd = newSelection.selectionEnd;\n      }\n      this.updateTextareaPosition();\n    },\n\n    /**\n     * @private\n     */\n    updateFromTextArea: function() {\n      if (!this.hiddenTextarea) {\n        return;\n      }\n      this.cursorOffsetCache = { };\n      this.text = this.hiddenTextarea.value;\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      var newSelection = this.fromStringToGraphemeSelection(\n        this.hiddenTextarea.selectionStart, this.hiddenTextarea.selectionEnd, this.hiddenTextarea.value);\n      this.selectionEnd = this.selectionStart = newSelection.selectionEnd;\n      if (!this.inCompositionMode) {\n        this.selectionStart = newSelection.selectionStart;\n      }\n      this.updateTextareaPosition();\n    },\n\n    /**\n     * @private\n     */\n    updateTextareaPosition: function() {\n      if (this.selectionStart === this.selectionEnd) {\n        var style = this._calcTextareaPosition();\n        this.hiddenTextarea.style.left = style.left;\n        this.hiddenTextarea.style.top = style.top;\n      }\n    },\n\n    /**\n     * @private\n     * @return {Object} style contains style for hiddenTextarea\n     */\n    _calcTextareaPosition: function() {\n      if (!this.canvas) {\n        return { x: 1, y: 1 };\n      }\n      var desiredPostion = this.inCompositionMode ? this.compositionStart : this.selectionStart,\n          boundaries = this._getCursorBoundaries(desiredPostion),\n          cursorLocation = this.get2DCursorLocation(desiredPostion),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex,\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize') * this.lineHeight,\n          leftOffset = boundaries.leftOffset,\n          m = this.calcTransformMatrix(),\n          p = {\n            x: boundaries.left + leftOffset,\n            y: boundaries.top + boundaries.topOffset + charHeight\n          },\n          upperCanvas = this.canvas.upperCanvasEl,\n          upperCanvasWidth = upperCanvas.width,\n          upperCanvasHeight = upperCanvas.height,\n          maxWidth = upperCanvasWidth - charHeight,\n          maxHeight = upperCanvasHeight - charHeight,\n          scaleX = upperCanvas.clientWidth / upperCanvasWidth,\n          scaleY = upperCanvas.clientHeight / upperCanvasHeight;\n\n      p = fabric.util.transformPoint(p, m);\n      p = fabric.util.transformPoint(p, this.canvas.viewportTransform);\n      p.x *= scaleX;\n      p.y *= scaleY;\n      if (p.x < 0) {\n        p.x = 0;\n      }\n      if (p.x > maxWidth) {\n        p.x = maxWidth;\n      }\n      if (p.y < 0) {\n        p.y = 0;\n      }\n      if (p.y > maxHeight) {\n        p.y = maxHeight;\n      }\n\n      // add canvas offset on document\n      p.x += this.canvas._offset.left;\n      p.y += this.canvas._offset.top;\n\n      return { left: p.x + 'px', top: p.y + 'px', fontSize: charHeight + 'px', charHeight: charHeight };\n    },\n\n    /**\n     * @private\n     */\n    _saveEditingProps: function() {\n      this._savedProps = {\n        hasControls: this.hasControls,\n        borderColor: this.borderColor,\n        lockMovementX: this.lockMovementX,\n        lockMovementY: this.lockMovementY,\n        hoverCursor: this.hoverCursor,\n        defaultCursor: this.canvas && this.canvas.defaultCursor,\n        moveCursor: this.canvas && this.canvas.moveCursor\n      };\n    },\n\n    /**\n     * @private\n     */\n    _restoreEditingProps: function() {\n      if (!this._savedProps) {\n        return;\n      }\n\n      this.hoverCursor = this._savedProps.hoverCursor;\n      this.hasControls = this._savedProps.hasControls;\n      this.borderColor = this._savedProps.borderColor;\n      this.lockMovementX = this._savedProps.lockMovementX;\n      this.lockMovementY = this._savedProps.lockMovementY;\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this._savedProps.defaultCursor;\n        this.canvas.moveCursor = this._savedProps.moveCursor;\n      }\n    },\n\n    /**\n     * Exits from editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    exitEditing: function() {\n      var isTextChanged = (this._textBeforeEdit !== this.text);\n      this.selected = false;\n      this.isEditing = false;\n      this.selectable = true;\n\n      this.selectionEnd = this.selectionStart;\n\n      if (this.hiddenTextarea) {\n        this.hiddenTextarea.blur && this.hiddenTextarea.blur();\n        this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea);\n        this.hiddenTextarea = null;\n      }\n\n      this.abortCursorAnimation();\n      this._restoreEditingProps();\n      this._currentCursorOpacity = 0;\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n        this.setCoords();\n      }\n      this.fire('editing:exited');\n      isTextChanged && this.fire('modified');\n      if (this.canvas) {\n        this.canvas.off('mouse:move', this.mouseMoveHandler);\n        this.canvas.fire('text:editing:exited', { target: this });\n        isTextChanged && this.canvas.fire('object:modified', { target: this });\n      }\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this.styles) {\n        if (!this._textLines[prop]) {\n          delete this.styles[prop];\n        }\n      }\n    },\n\n    /**\n     * remove and reflow a style block from start to end.\n     * @param {Number} start linear start position for removal (included in removal)\n     * @param {Number} end linear end position for removal ( excluded from removal )\n     */\n    removeStyleFromTo: function(start, end) {\n      var cursorStart = this.get2DCursorLocation(start, true),\n          cursorEnd = this.get2DCursorLocation(end, true),\n          lineStart = cursorStart.lineIndex,\n          charStart = cursorStart.charIndex,\n          lineEnd = cursorEnd.lineIndex,\n          charEnd = cursorEnd.charIndex,\n          i, styleObj;\n      if (lineStart !== lineEnd) {\n        // step1 remove the trailing of lineStart\n        if (this.styles[lineStart]) {\n          for (i = charStart; i < this._unwrappedTextLines[lineStart].length; i++) {\n            delete this.styles[lineStart][i];\n          }\n        }\n        // step2 move the trailing of lineEnd to lineStart if needed\n        if (this.styles[lineEnd]) {\n          for (i = charEnd; i < this._unwrappedTextLines[lineEnd].length; i++) {\n            styleObj = this.styles[lineEnd][i];\n            if (styleObj) {\n              this.styles[lineStart] || (this.styles[lineStart] = { });\n              this.styles[lineStart][charStart + i - charEnd] = styleObj;\n            }\n          }\n        }\n        // step3 detects lines will be completely removed.\n        for (i = lineStart + 1; i <= lineEnd; i++) {\n          delete this.styles[i];\n        }\n        // step4 shift remaining lines.\n        this.shiftLineStyles(lineEnd, lineStart - lineEnd);\n      }\n      else {\n        // remove and shift left on the same line\n        if (this.styles[lineStart]) {\n          styleObj = this.styles[lineStart];\n          var diff = charEnd - charStart, numericChar, _char;\n          for (i = charStart; i < charEnd; i++) {\n            delete styleObj[i];\n          }\n          for (_char in this.styles[lineStart]) {\n            numericChar = parseInt(_char, 10);\n            if (numericChar >= charEnd) {\n              styleObj[numericChar - diff] = styleObj[_char];\n              delete styleObj[_char];\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Shifts line styles up or down\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} offset Can any number?\n     */\n    shiftLineStyles: function(lineIndex, offset) {\n      // shift all line styles by offset upward or downward\n      // do not clone deep. we need new array, not new style objects\n      var clonedStyles = clone(this.styles);\n      for (var line in this.styles) {\n        var numericLine = parseInt(line, 10);\n        if (numericLine > lineIndex) {\n          this.styles[numericLine + offset] = clonedStyles[numericLine];\n          if (!clonedStyles[numericLine - offset]) {\n            delete this.styles[numericLine];\n          }\n        }\n      }\n    },\n\n    restartCursorIfNeeded: function() {\n      if (!this._currentTickState || this._currentTickState.isAborted\n        || !this._currentTickCompleteState || this._currentTickCompleteState.isAborted\n      ) {\n        this.initDelayedCursor();\n      }\n    },\n\n    /**\n     * Inserts new style object\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Number} qty number of lines to add\n     * @param {Array} copiedStyle Array of objects styles\n     */\n    insertNewlineStyleObject: function(lineIndex, charIndex, qty, copiedStyle) {\n      var currentCharStyle,\n          newLineStyles = {},\n          somethingAdded = false;\n\n      qty || (qty = 1);\n      this.shiftLineStyles(lineIndex, qty);\n      if (this.styles[lineIndex]) {\n        currentCharStyle = this.styles[lineIndex][charIndex === 0 ? charIndex : charIndex - 1];\n      }\n\n      // we clone styles of all chars\n      // after cursor onto the current line\n      for (var index in this.styles[lineIndex]) {\n        var numIndex = parseInt(index, 10);\n        if (numIndex >= charIndex) {\n          somethingAdded = true;\n          newLineStyles[numIndex - charIndex] = this.styles[lineIndex][index];\n          // remove lines from the previous line since they're on a new line now\n          delete this.styles[lineIndex][index];\n        }\n      }\n      if (somethingAdded) {\n        this.styles[lineIndex + qty] = newLineStyles;\n      }\n      else {\n        delete this.styles[lineIndex + qty];\n      }\n      // for the other lines\n      // we clone current char style onto the next (otherwise empty) line\n      while (qty > 1) {\n        qty--;\n        if (copiedStyle && copiedStyle[qty]) {\n          this.styles[lineIndex + qty] = { 0: clone(copiedStyle[qty]) };\n        }\n        else if (currentCharStyle) {\n          this.styles[lineIndex + qty] = { 0: clone(currentCharStyle) };\n        }\n        else {\n          delete this.styles[lineIndex + qty];\n        }\n      }\n      this._forceClearCache = true;\n    },\n\n    /**\n     * Inserts style object for a given line/char index\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Number} quantity number Style object to insert, if given\n     * @param {Array} copiedStyle array of style objecs\n     */\n    insertCharStyleObject: function(lineIndex, charIndex, quantity, copiedStyle) {\n      if (!this.styles) {\n        this.styles = {};\n      }\n      var currentLineStyles       = this.styles[lineIndex],\n          currentLineStylesCloned = currentLineStyles ? clone(currentLineStyles) : {};\n\n      quantity || (quantity = 1);\n      // shift all char styles by quantity forward\n      // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n      for (var index in currentLineStylesCloned) {\n        var numericIndex = parseInt(index, 10);\n        if (numericIndex >= charIndex) {\n          currentLineStyles[numericIndex + quantity] = currentLineStylesCloned[numericIndex];\n          // only delete the style if there was nothing moved there\n          if (!currentLineStylesCloned[numericIndex - quantity]) {\n            delete currentLineStyles[numericIndex];\n          }\n        }\n      }\n      this._forceClearCache = true;\n      if (copiedStyle) {\n        while (quantity--) {\n          if (!Object.keys(copiedStyle[quantity]).length) {\n            continue;\n          }\n          if (!this.styles[lineIndex]) {\n            this.styles[lineIndex] = {};\n          }\n          this.styles[lineIndex][charIndex + quantity] = clone(copiedStyle[quantity]);\n        }\n        return;\n      }\n      if (!currentLineStyles) {\n        return;\n      }\n      var newStyle = currentLineStyles[charIndex ? charIndex - 1 : 1];\n      while (newStyle && quantity--) {\n        this.styles[lineIndex][charIndex + quantity] = clone(newStyle);\n      }\n    },\n\n    /**\n     * Inserts style object(s)\n     * @param {Array} insertedText Characters at the location where style is inserted\n     * @param {Number} start cursor index for inserting style\n     * @param {Array} [copiedStyle] array of style objects to insert.\n     */\n    insertNewStyleBlock: function(insertedText, start, copiedStyle) {\n      var cursorLoc = this.get2DCursorLocation(start, true),\n          addedLines = [0], linesLenght = 0;\n      for (var i = 0; i < insertedText.length; i++) {\n        if (insertedText[i] === '\\n') {\n          linesLenght++;\n          addedLines[linesLenght] = 0;\n        }\n        else {\n          addedLines[linesLenght]++;\n        }\n      }\n      if (addedLines[0] > 0) {\n        this.insertCharStyleObject(cursorLoc.lineIndex, cursorLoc.charIndex, addedLines[0], copiedStyle);\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[0] + 1);\n      }\n      linesLenght && this.insertNewlineStyleObject(\n        cursorLoc.lineIndex, cursorLoc.charIndex + addedLines[0], linesLenght);\n      for (var i = 1; i < linesLenght; i++) {\n        if (addedLines[i] > 0) {\n          this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n        }\n        else if (copiedStyle) {\n          this.styles[cursorLoc.lineIndex + i][0] = copiedStyle[0];\n        }\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[i] + 1);\n      }\n      // we use i outside the loop to get it like linesLength\n      if (addedLines[i] > 0) {\n        this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n      }\n    },\n\n    /**\n     * Set the selectionStart and selectionEnd according to the ne postion of cursor\n     * mimic the key - mouse navigation when shift is pressed.\n     */\n    setSelectionStartEndWithShift: function(start, end, newSelection) {\n      if (newSelection <= start) {\n        if (end === start) {\n          this._selectionDirection = 'left';\n        }\n        else if (this._selectionDirection === 'right') {\n          this._selectionDirection = 'left';\n          this.selectionEnd = start;\n        }\n        this.selectionStart = newSelection;\n      }\n      else if (newSelection > start && newSelection < end) {\n        if (this._selectionDirection === 'right') {\n          this.selectionEnd = newSelection;\n        }\n        else {\n          this.selectionStart = newSelection;\n        }\n      }\n      else {\n        // newSelection is > selection start and end\n        if (end === start) {\n          this._selectionDirection = 'right';\n        }\n        else if (this._selectionDirection === 'left') {\n          this._selectionDirection = 'right';\n          this.selectionStart = end;\n        }\n        this.selectionEnd = newSelection;\n      }\n    },\n\n    setSelectionInBoundaries: function() {\n      var length = this.text.length;\n      if (this.selectionStart > length) {\n        this.selectionStart = length;\n      }\n      else if (this.selectionStart < 0) {\n        this.selectionStart = 0;\n      }\n      if (this.selectionEnd > length) {\n        this.selectionEnd = length;\n      }\n      else if (this.selectionEnd < 0) {\n        this.selectionEnd = 0;\n      }\n    }\n  });\n})();\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n  /**\n   * Initializes \"dbclick\" event handler\n   */\n  initDoubleClickSimulation: function() {\n\n    // for double click\n    this.__lastClickTime = +new Date();\n\n    // for triple click\n    this.__lastLastClickTime = +new Date();\n\n    this.__lastPointer = { };\n\n    this.on('mousedown', this.onMouseDown);\n  },\n\n  /**\n   * Default event handler to simulate triple click\n   * @private\n   */\n  onMouseDown: function(options) {\n    if (!this.canvas) {\n      return;\n    }\n    this.__newClickTime = +new Date();\n    var newPointer = options.pointer;\n    if (this.isTripleClick(newPointer)) {\n      this.fire('tripleclick', options);\n      this._stopEvent(options.e);\n    }\n    this.__lastLastClickTime = this.__lastClickTime;\n    this.__lastClickTime = this.__newClickTime;\n    this.__lastPointer = newPointer;\n    this.__lastIsEditing = this.isEditing;\n    this.__lastSelected = this.selected;\n  },\n\n  isTripleClick: function(newPointer) {\n    return this.__newClickTime - this.__lastClickTime < 500 &&\n        this.__lastClickTime - this.__lastLastClickTime < 500 &&\n        this.__lastPointer.x === newPointer.x &&\n        this.__lastPointer.y === newPointer.y;\n  },\n\n  /**\n   * @private\n   */\n  _stopEvent: function(e) {\n    e.preventDefault && e.preventDefault();\n    e.stopPropagation && e.stopPropagation();\n  },\n\n  /**\n   * Initializes event handlers related to cursor or selection\n   */\n  initCursorSelectionHandlers: function() {\n    this.initMousedownHandler();\n    this.initMouseupHandler();\n    this.initClicks();\n  },\n\n  /**\n   * Initializes double and triple click event handlers\n   */\n  initClicks: function() {\n    this.on('mousedblclick', function(options) {\n      this.selectWord(this.getSelectionStartFromPointer(options.e));\n    });\n    this.on('tripleclick', function(options) {\n      this.selectLine(this.getSelectionStartFromPointer(options.e));\n    });\n  },\n\n  /**\n   * Default event handler for the basic functionalities needed on _mouseDown\n   * can be overridden to do something different.\n   * Scope of this implementation is: find the click position, set selectionStart\n   * find selectionEnd, initialize the drawing of either cursor or selection area\n   */\n  _mouseDownHandler: function(options) {\n    if (!this.canvas || !this.editable || (options.e.button && options.e.button !== 1)) {\n      return;\n    }\n\n    this.__isMousedown = true;\n\n    if (this.selected) {\n      this.setCursorByClick(options.e);\n    }\n\n    if (this.isEditing) {\n      this.__selectionStartOnMouseDown = this.selectionStart;\n      if (this.selectionStart === this.selectionEnd) {\n        this.abortCursorAnimation();\n      }\n      this.renderCursorOrSelection();\n    }\n  },\n\n  /**\n   * Default event handler for the basic functionalities needed on mousedown:before\n   * can be overridden to do something different.\n   * Scope of this implementation is: verify the object is already selected when mousing down\n   */\n  _mouseDownHandlerBefore: function(options) {\n    if (!this.canvas || !this.editable || (options.e.button && options.e.button !== 1)) {\n      return;\n    }\n    if (this === this.canvas._activeObject) {\n      this.selected = true;\n    }\n  },\n\n  /**\n   * Initializes \"mousedown\" event handler\n   */\n  initMousedownHandler: function() {\n    this.on('mousedown', this._mouseDownHandler);\n    this.on('mousedown:before', this._mouseDownHandlerBefore);\n  },\n\n  /**\n   * Initializes \"mouseup\" event handler\n   */\n  initMouseupHandler: function() {\n    this.on('mouseup', this.mouseUpHandler);\n  },\n\n  /**\n   * standard hander for mouse up, overridable\n   * @private\n   */\n  mouseUpHandler: function(options) {\n    this.__isMousedown = false;\n    if (!this.editable ||\n      (options.transform && options.transform.actionPerformed) ||\n      (options.e.button && options.e.button !== 1)) {\n      return;\n    }\n\n    if (this.__lastSelected && !this.__corner) {\n      this.enterEditing(options.e);\n      if (this.selectionStart === this.selectionEnd) {\n        this.initDelayedCursor(true);\n      }\n      else {\n        this.renderCursorOrSelection();\n      }\n    }\n    this.selected = true;\n  },\n\n  /**\n   * Changes cursor location in a text depending on passed pointer (x/y) object\n   * @param {Event} e Event object\n   */\n  setCursorByClick: function(e) {\n    var newSelection = this.getSelectionStartFromPointer(e),\n        start = this.selectionStart, end = this.selectionEnd;\n    if (e.shiftKey) {\n      this.setSelectionStartEndWithShift(start, end, newSelection);\n    }\n    else {\n      this.selectionStart = newSelection;\n      this.selectionEnd = newSelection;\n    }\n    if (this.isEditing) {\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Returns index of a character corresponding to where an object was clicked\n   * @param {Event} e Event object\n   * @return {Number} Index of a character\n   */\n  getSelectionStartFromPointer: function(e) {\n    var mouseOffset = this.getLocalPointer(e),\n        prevWidth = 0,\n        width = 0,\n        height = 0,\n        charIndex = 0,\n        lineIndex = 0,\n        lineLeftOffset,\n        line;\n\n    for (var i = 0, len = this._textLines.length; i < len; i++) {\n      if (height <= mouseOffset.y) {\n        height += this.getHeightOfLine(i) * this.scaleY;\n        lineIndex = i;\n        if (i > 0) {\n          charIndex += this._textLines[i - 1].length + 1;\n        }\n      }\n      else {\n        break;\n      }\n    }\n    lineLeftOffset = this._getLineLeftOffset(lineIndex);\n    width = lineLeftOffset * this.scaleX;\n    line = this._textLines[lineIndex];\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\n      prevWidth = width;\n      // i removed something about flipX here, check.\n      width += this.__charBounds[lineIndex][j].kernedWidth * this.scaleX;\n      if (width <= mouseOffset.x) {\n        charIndex++;\n      }\n      else {\n        break;\n      }\n    }\n    return this._getNewSelectionStartFromOffset(mouseOffset, prevWidth, width, charIndex, jlen);\n  },\n\n  /**\n   * @private\n   */\n  _getNewSelectionStartFromOffset: function(mouseOffset, prevWidth, width, index, jlen) {\n    // we need Math.abs because when width is after the last char, the offset is given as 1, while is 0\n    var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,\n        distanceBtwNextCharAndCursor = width - mouseOffset.x,\n        offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor ||\n          distanceBtwNextCharAndCursor < 0 ? 0 : 1,\n        newSelectionStart = index + offset;\n    // if object is horizontally flipped, mirror cursor location from the end\n    if (this.flipX) {\n      newSelectionStart = jlen - newSelectionStart;\n    }\n\n    if (newSelectionStart > this._text.length) {\n      newSelectionStart = this._text.length;\n    }\n\n    return newSelectionStart;\n  }\n});\n\n\nfabric.util.object.extend(fabric.IText.prototype, /** @lends fabric.IText.prototype */ {\n\n  /**\n   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n   */\n  initHiddenTextarea: function() {\n    this.hiddenTextarea = fabric.document.createElement('textarea');\n    this.hiddenTextarea.setAttribute('autocapitalize', 'off');\n    this.hiddenTextarea.setAttribute('autocorrect', 'off');\n    this.hiddenTextarea.setAttribute('autocomplete', 'off');\n    this.hiddenTextarea.setAttribute('spellcheck', 'false');\n    this.hiddenTextarea.setAttribute('data-fabric-hiddentextarea', '');\n    this.hiddenTextarea.setAttribute('wrap', 'off');\n    var style = this._calcTextareaPosition();\n    this.hiddenTextarea.style.cssText = 'position: absolute; top: ' + style.top +\n    '; left: ' + style.left + '; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px;' +\n    ' line-height: 1px; paddingｰtop: ' + style.fontSize + ';';\n    fabric.document.body.appendChild(this.hiddenTextarea);\n\n    fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'keyup', this.onKeyUp.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'cut', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionstart', this.onCompositionStart.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionupdate', this.onCompositionUpdate.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionend', this.onCompositionEnd.bind(this));\n\n    if (!this._clickHandlerInitialized && this.canvas) {\n      fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));\n      this._clickHandlerInitialized = true;\n    }\n  },\n\n  /**\n   * For functionalities on keyDown\n   * Map a special key to a function of the instance/prototype\n   * If you need different behaviour for ESC or TAB or arrows, you have to change\n   * this map setting the name of a function that you build on the fabric.Itext or\n   * your prototype.\n   * the map change will affect all Instances unless you need for only some text Instances\n   * in that case you have to clone this object and assign your Instance.\n   * this.keysMap = fabric.util.object.clone(this.keysMap);\n   * The function must be in fabric.Itext.prototype.myFunction And will receive event as args[0]\n   */\n  keysMap: {\n    9:  'exitEditing',\n    27: 'exitEditing',\n    33: 'moveCursorUp',\n    34: 'moveCursorDown',\n    35: 'moveCursorRight',\n    36: 'moveCursorLeft',\n    37: 'moveCursorLeft',\n    38: 'moveCursorUp',\n    39: 'moveCursorRight',\n    40: 'moveCursorDown',\n  },\n\n  /**\n   * For functionalities on keyUp + ctrl || cmd\n   */\n  ctrlKeysMapUp: {\n    67: 'copy',\n    88: 'cut'\n  },\n\n  /**\n   * For functionalities on keyDown + ctrl || cmd\n   */\n  ctrlKeysMapDown: {\n    65: 'selectAll'\n  },\n\n  onClick: function() {\n    // No need to trigger click event here, focus is enough to have the keyboard appear on Android\n    this.hiddenTextarea && this.hiddenTextarea.focus();\n  },\n\n  /**\n   * Handles keyup event\n   * @param {Event} e Event object\n   */\n  onKeyDown: function(e) {\n    if (!this.isEditing || this.inCompositionMode) {\n      return;\n    }\n    if (e.keyCode in this.keysMap) {\n      this[this.keysMap[e.keyCode]](e);\n    }\n    else if ((e.keyCode in this.ctrlKeysMapDown) && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapDown[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    if (e.keyCode >= 33 && e.keyCode <= 40) {\n      // if i press an arrow key just update selection\n      this.clearContextTop();\n      this.renderCursorOrSelection();\n    }\n    else {\n      this.canvas && this.canvas.requestRenderAll();\n    }\n  },\n\n  /**\n   * Handles keyup event\n   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\n   * if a copy/cut event fired, keyup is dismissed\n   * @param {Event} e Event object\n   */\n  onKeyUp: function(e) {\n    if (!this.isEditing || this._copyDone || this.inCompositionMode) {\n      this._copyDone = false;\n      return;\n    }\n    if ((e.keyCode in this.ctrlKeysMapUp) && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapUp[e.keyCode]](e);\n    }\n    else {\n      return;\n    }\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this.canvas && this.canvas.requestRenderAll();\n  },\n\n  /**\n   * Handles onInput event\n   * @param {Event} e Event object\n   */\n  onInput: function(e) {\n    var fromPaste = this.fromPaste;\n    this.fromPaste = false;\n    e && e.stopPropagation();\n    if (!this.isEditing) {\n      return;\n    }\n    // decisions about style changes.\n    var nextText = this._splitTextIntoLines(this.hiddenTextarea.value).graphemeText,\n        charCount = this._text.length,\n        nextCharCount = nextText.length,\n        removedText, insertedText,\n        charDiff = nextCharCount - charCount;\n    if (this.hiddenTextarea.value === '') {\n      this.styles = { };\n      this.updateFromTextArea();\n      this.fire('changed');\n      if (this.canvas) {\n        this.canvas.fire('text:changed', { target: this });\n        this.canvas.requestRenderAll();\n      }\n      return;\n    }\n\n    var textareaSelection = this.fromStringToGraphemeSelection(\n      this.hiddenTextarea.selectionStart,\n      this.hiddenTextarea.selectionEnd,\n      this.hiddenTextarea.value\n    );\n    var backDelete = this.selectionStart > textareaSelection.selectionStart;\n\n    if (this.selectionStart !== this.selectionEnd) {\n      removedText = this._text.slice(this.selectionStart, this.selectionEnd);\n      charDiff += this.selectionEnd - this.selectionStart;\n    }\n    else if (nextCharCount < charCount) {\n      if (backDelete) {\n        removedText = this._text.slice(this.selectionEnd + charDiff, this.selectionEnd);\n      }\n      else {\n        removedText = this._text.slice(this.selectionStart, this.selectionStart - charDiff);\n      }\n    }\n    insertedText = nextText.slice(textareaSelection.selectionEnd - charDiff, textareaSelection.selectionEnd);\n    if (removedText && removedText.length) {\n      if (this.selectionStart !== this.selectionEnd) {\n        this.removeStyleFromTo(this.selectionStart, this.selectionEnd);\n      }\n      else if (backDelete) {\n        // detect differencies between forwardDelete and backDelete\n        this.removeStyleFromTo(this.selectionEnd - removedText.length, this.selectionEnd);\n      }\n      else {\n        this.removeStyleFromTo(this.selectionEnd, this.selectionEnd + removedText.length);\n      }\n    }\n    if (insertedText.length) {\n      if (fromPaste && insertedText.join('') === fabric.copiedText) {\n        this.insertNewStyleBlock(insertedText, this.selectionStart, fabric.copiedTextStyle);\n      }\n      else {\n        this.insertNewStyleBlock(insertedText, this.selectionStart);\n      }\n    }\n    this.updateFromTextArea();\n    this.fire('changed');\n    if (this.canvas) {\n      this.canvas.fire('text:changed', { target: this });\n      this.canvas.requestRenderAll();\n    }\n  },\n  /**\n   * Composition start\n   */\n  onCompositionStart: function() {\n    this.inCompositionMode = true;\n  },\n\n  /**\n   * Composition end\n   */\n  onCompositionEnd: function() {\n    this.inCompositionMode = false;\n  },\n\n  // /**\n  //  * Composition update\n  //  */\n  onCompositionUpdate: function(e) {\n    this.compositionStart = e.target.selectionStart;\n    this.compositionEnd = e.target.selectionEnd;\n    this.updateTextareaPosition();\n  },\n\n  /**\n   * Copies selected text\n   * @param {Event} e Event object\n   */\n  copy: function() {\n    if (this.selectionStart === this.selectionEnd) {\n      //do not cut-copy if no selection\n      return;\n    }\n\n    fabric.copiedText = this.getSelectedText();\n    fabric.copiedTextStyle = this.getSelectionStyles(this.selectionStart, this.selectionEnd, true);\n    this._copyDone = true;\n  },\n\n  /**\n   * Pastes text\n   * @param {Event} e Event object\n   */\n  paste: function() {\n    this.fromPaste = true;\n  },\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   * @return {Object} Clipboard data object\n   */\n  _getClipboardData: function(e) {\n    return (e && e.clipboardData) || fabric.window.clipboardData;\n  },\n\n  /**\n   * Finds the width in pixels before the cursor on the same line\n   * @private\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {Number} widthBeforeCursor width before cursor\n   */\n  _getWidthBeforeCursor: function(lineIndex, charIndex) {\n    var widthBeforeCursor = this._getLineLeftOffset(lineIndex), bound;\n\n    if (charIndex > 0) {\n      bound = this.__charBounds[lineIndex][charIndex - 1];\n      widthBeforeCursor += bound.left + bound.width;\n    }\n    return widthBeforeCursor;\n  },\n\n  /**\n   * Gets start offset of a selection\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getDownCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    // if on last line, down cursor goes to end of line\n    if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\n      // move to the end of a text\n      return this._text.length - selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\n        textAfterCursor = this._textLines[lineIndex].slice(charIndex);\n    return textAfterCursor.length + indexOnOtherLine + 2;\n  },\n\n  /**\n   * private\n   * Helps finding if the offset should be counted from Start or End\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  _getSelectionForOffset: function(e, isRight) {\n    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\n      return this.selectionEnd;\n    }\n    else {\n      return this.selectionStart;\n    }\n  },\n\n  /**\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getUpCursorOffset: function(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n      // if on first line, up cursor goes to start of line\n      return -selectionProp;\n    }\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\n        textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex);\n    // return a negative offset\n    return -this._textLines[lineIndex - 1].length + indexOnOtherLine - textBeforeCursor.length;\n  },\n\n  /**\n   * for a given width it founds the matching character.\n   * @private\n   */\n  _getIndexOnLine: function(lineIndex, width) {\n\n    var line = this._textLines[lineIndex],\n        lineLeftOffset = this._getLineLeftOffset(lineIndex),\n        widthOfCharsOnLine = lineLeftOffset,\n        indexOnLine = 0, charWidth, foundMatch;\n\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\n      charWidth = this.__charBounds[lineIndex][j].width;\n      widthOfCharsOnLine += charWidth;\n      if (widthOfCharsOnLine > width) {\n        foundMatch = true;\n        var leftEdge = widthOfCharsOnLine - charWidth,\n            rightEdge = widthOfCharsOnLine,\n            offsetFromLeftEdge = Math.abs(leftEdge - width),\n            offsetFromRightEdge = Math.abs(rightEdge - width);\n\n        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : (j - 1);\n        break;\n      }\n    }\n\n    // reached end\n    if (!foundMatch) {\n      indexOnLine = line.length - 1;\n    }\n\n    return indexOnLine;\n  },\n\n\n  /**\n   * Moves cursor down\n   * @param {Event} e Event object\n   */\n  moveCursorDown: function(e) {\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n      return;\n    }\n    this._moveCursorUpOrDown('Down', e);\n  },\n\n  /**\n   * Moves cursor up\n   * @param {Event} e Event object\n   */\n  moveCursorUp: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorUpOrDown('Up', e);\n  },\n\n  /**\n   * Moves cursor up or down, fires the events\n   * @param {String} direction 'Up' or 'Down'\n   * @param {Event} e Event object\n   */\n  _moveCursorUpOrDown: function(direction, e) {\n    // getUpCursorOffset\n    // getDownCursorOffset\n    var action = 'get' + direction + 'CursorOffset',\n        offset = this[action](e, this._selectionDirection === 'right');\n    if (e.shiftKey) {\n      this.moveCursorWithShift(offset);\n    }\n    else {\n      this.moveCursorWithoutShift(offset);\n    }\n    if (offset !== 0) {\n      this.setSelectionInBoundaries();\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor with shift\n   * @param {Number} offset\n   */\n  moveCursorWithShift: function(offset) {\n    var newSelection = this._selectionDirection === 'left'\n      ? this.selectionStart + offset\n      : this.selectionEnd + offset;\n    this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, newSelection);\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor up without shift\n   * @param {Number} offset\n   */\n  moveCursorWithoutShift: function(offset) {\n    if (offset < 0) {\n      this.selectionStart += offset;\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionEnd += offset;\n      this.selectionStart = this.selectionEnd;\n    }\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor left\n   * @param {Event} e Event object\n   */\n  moveCursorLeft: function(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Left', e);\n  },\n\n  /**\n   * @private\n   * @return {Boolean} true if a change happened\n   */\n  _move: function(e, prop, direction) {\n    var newValue;\n    if (e.altKey) {\n      newValue = this['findWordBoundary' + direction](this[prop]);\n    }\n    else if (e.metaKey || e.keyCode === 35 ||  e.keyCode === 36 ) {\n      newValue = this['findLineBoundary' + direction](this[prop]);\n    }\n    else {\n      this[prop] += direction === 'Left' ? -1 : 1;\n      return true;\n    }\n    if (typeof newValue !== undefined && this[prop] !== newValue) {\n      this[prop] = newValue;\n      return true;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _moveLeft: function(e, prop) {\n    return this._move(e, prop, 'Left');\n  },\n\n  /**\n   * @private\n   */\n  _moveRight: function(e, prop) {\n    return this._move(e, prop, 'Right');\n  },\n\n  /**\n   * Moves cursor left without keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithoutShift: function(e) {\n    var change = true;\n    this._selectionDirection = 'left';\n\n    // only move cursor when there is no selection,\n    // otherwise we discard it, and leave cursor on same place\n    if (this.selectionEnd === this.selectionStart && this.selectionStart !== 0) {\n      change = this._moveLeft(e, 'selectionStart');\n\n    }\n    this.selectionEnd = this.selectionStart;\n    return change;\n  },\n\n  /**\n   * Moves cursor left while keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithShift: function(e) {\n    if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {\n      return this._moveLeft(e, 'selectionEnd');\n    }\n    else if (this.selectionStart !== 0){\n      this._selectionDirection = 'left';\n      return this._moveLeft(e, 'selectionStart');\n    }\n  },\n\n  /**\n   * Moves cursor right\n   * @param {Event} e Event object\n   */\n  moveCursorRight: function(e) {\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n      return;\n    }\n    this._moveCursorLeftOrRight('Right', e);\n  },\n\n  /**\n   * Moves cursor right or Left, fires event\n   * @param {String} direction 'Left', 'Right'\n   * @param {Event} e Event object\n   */\n  _moveCursorLeftOrRight: function(direction, e) {\n    var actionName = 'moveCursor' + direction + 'With';\n    this._currentCursorOpacity = 1;\n\n    if (e.shiftKey) {\n      actionName += 'Shift';\n    }\n    else {\n      actionName += 'outShift';\n    }\n    if (this[actionName](e)) {\n      this.abortCursorAnimation();\n      this.initDelayedCursor();\n      this._fireSelectionChanged();\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor right while keeping selection\n   * @param {Event} e\n   */\n  moveCursorRightWithShift: function(e) {\n    if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {\n      return this._moveRight(e, 'selectionStart');\n    }\n    else if (this.selectionEnd !== this._text.length) {\n      this._selectionDirection = 'right';\n      return this._moveRight(e, 'selectionEnd');\n    }\n  },\n\n  /**\n   * Moves cursor right without keeping selection\n   * @param {Event} e Event object\n   */\n  moveCursorRightWithoutShift: function(e) {\n    var changed = true;\n    this._selectionDirection = 'right';\n\n    if (this.selectionStart === this.selectionEnd) {\n      changed = this._moveRight(e, 'selectionStart');\n      this.selectionEnd = this.selectionStart;\n    }\n    else {\n      this.selectionStart = this.selectionEnd;\n    }\n    return changed;\n  },\n\n  /**\n   * Removes characters from start/end\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  removeChars: function(start, end) {\n    if (typeof end === 'undefined') {\n      end = start + 1;\n    }\n    this.removeStyleFromTo(start, end);\n    this._text.splice(start, end - start);\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    if (this._shouldClearDimensionCache()) {\n      this.initDimensions();\n      this.setCoords();\n    }\n    this._removeExtraneousStyles();\n  },\n\n  /**\n   * insert characters at start position, before start position.\n   * start  equal 1 it means the text get inserted between actual grapheme 0 and 1\n   * if style array is provided, it must be as the same length of text in graphemes\n   * if end is provided and is bigger than start, old text is replaced.\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {String} text text to insert\n   * @param {Array} style array of style objects\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  insertChars: function(text, style, start, end) {\n    if (typeof end === 'undefined') {\n      end = start;\n    }\n    if (end > start) {\n      this.removeStyleFromTo(start, end);\n    }\n    var graphemes = fabric.util.string.graphemeSplit(text);\n    this.insertNewStyleBlock(graphemes, start, style);\n    this._text = [].concat(this._text.slice(0, start), graphemes, this._text.slice(end));\n    this.text = this._text.join('');\n    this.set('dirty', true);\n    if (this._shouldClearDimensionCache()) {\n      this.initDimensions();\n      this.setCoords();\n    }\n    this._removeExtraneousStyles();\n  },\n\n});\n\n\n/* _TO_SVG_START_ */\n(function() {\n  var toFixed = fabric.util.toFixed,\n      multipleSpacesRegex = /  +/g;\n\n  fabric.util.object.extend(fabric.Text.prototype, /** @lends fabric.Text.prototype */ {\n\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function(reviver) {\n      var markup = this._createBaseSVGMarkup(),\n          offsets = this._getSVGLeftTopOffsets(),\n          textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\n      this._wrapSVGTextAndBg(markup, textAndBg);\n\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLeftTopOffsets: function() {\n      return {\n        textLeft: -this.width / 2,\n        textTop: -this.height / 2,\n        lineTop: this.getHeightOfLine(0)\n      };\n    },\n\n    /**\n     * @private\n     */\n    _wrapSVGTextAndBg: function(markup, textAndBg) {\n      var noShadow = true, filter = this.getSvgFilter(),\n          style = filter === '' ? '' : ' style=\"' + filter + '\"',\n          textDecoration = this.getSvgTextDecoration(this);\n      markup.push(\n        '\\t<g ', this.getSvgId(), 'transform=\"', this.getSvgTransform(), this.getSvgTransformMatrix(), '\"',\n        style, '>\\n',\n        textAndBg.textBgRects.join(''),\n        '\\t\\t<text xml:space=\"preserve\" ',\n        (this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, '\\'') + '\" ' : ''),\n        (this.fontSize ? 'font-size=\"' + this.fontSize + '\" ' : ''),\n        (this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ' : ''),\n        (this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ' : ''),\n        (textDecoration ? 'text-decoration=\"' + textDecoration + '\" ' : ''),\n        'style=\"', this.getSvgStyles(noShadow), '\"', this.addPaintOrder(), ' >',\n        textAndBg.textSpans.join(''),\n        '</text>\\n',\n        '\\t</g>\\n'\n      );\n    },\n\n    /**\n     * @private\n     * @param {Number} textTopOffset Text top offset\n     * @param {Number} textLeftOffset Text left offset\n     * @return {Object}\n     */\n    _getSVGTextAndBg: function(textTopOffset, textLeftOffset) {\n      var textSpans = [],\n          textBgRects = [],\n          height = textTopOffset, lineOffset;\n      // bounding-box background\n      this._setSVGBg(textBgRects);\n\n      // text and text-background\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineOffset = this._getLineLeftOffset(i);\n        if (this.textBackgroundColor || this.styleHas('textBackgroundColor', i)) {\n          this._setSVGTextLineBg(textBgRects, i, textLeftOffset + lineOffset, height);\n        }\n        this._setSVGTextLineText(textSpans, i, textLeftOffset + lineOffset, height);\n        height += this.getHeightOfLine(i);\n      }\n\n      return {\n        textSpans: textSpans,\n        textBgRects: textBgRects\n      };\n    },\n\n    /**\n     * @private\n     */\n    _createTextCharSpan: function(_char, styleDecl, left, top) {\n      var shouldUseWhitespace = _char !== _char.trim() || _char.match(multipleSpacesRegex),\n          styleProps = this.getSvgSpanStyles(styleDecl, shouldUseWhitespace),\n          fillStyles = styleProps ? 'style=\"' + styleProps + '\"' : '',\n          dy = styleDecl.deltaY, dySpan = '',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n      if (dy) {\n        dySpan = ' dy=\"' + toFixed(dy, NUM_FRACTION_DIGITS) + '\" ';\n      }\n      return [\n        '<tspan x=\"', toFixed(left, NUM_FRACTION_DIGITS), '\" y=\"',\n        toFixed(top, NUM_FRACTION_DIGITS), '\" ', dySpan,\n        fillStyles, '>',\n        fabric.util.string.escapeXml(_char),\n        '</tspan>'\n      ].join('');\n    },\n\n    _setSVGTextLineText: function(textSpans, lineIndex, textLeftOffset, textTopOffset) {\n      // set proper line offset\n      var lineHeight = this.getHeightOfLine(lineIndex),\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          actualStyle,\n          nextStyle,\n          charsToRender = '',\n          charBox, style,\n          boxWidth = 0,\n          line = this._textLines[lineIndex],\n          timeToRender;\n\n      textTopOffset += lineHeight * (1 - this._fontSizeFraction) / this.lineHeight;\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\n        timeToRender = i === len || this.charSpacing;\n        charsToRender += line[i];\n        charBox = this.__charBounds[lineIndex][i];\n        if (boxWidth === 0) {\n          textLeftOffset += charBox.kernedWidth - charBox.width;\n          boxWidth += charBox.width;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n        if (isJustify && !timeToRender) {\n          if (this._reSpaceAndTab.test(line[i])) {\n            timeToRender = true;\n          }\n        }\n        if (!timeToRender) {\n          // if we have charSpacing, we render char by char\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n          timeToRender = this._hasStyleChangedForSvg(actualStyle, nextStyle);\n        }\n        if (timeToRender) {\n          style = this._getStyleDeclaration(lineIndex, i) || { };\n          textSpans.push(this._createTextCharSpan(charsToRender, style, textLeftOffset, textTopOffset));\n          charsToRender = '';\n          actualStyle = nextStyle;\n          textLeftOffset += boxWidth;\n          boxWidth = 0;\n        }\n      }\n    },\n\n    _pushTextBgRect: function(textBgRects, color, left, top, width, height) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n      textBgRects.push(\n        '\\t\\t<rect ',\n        this._getFillAttributes(color),\n        ' x=\"',\n        toFixed(left, NUM_FRACTION_DIGITS),\n        '\" y=\"',\n        toFixed(top, NUM_FRACTION_DIGITS),\n        '\" width=\"',\n        toFixed(width, NUM_FRACTION_DIGITS),\n        '\" height=\"',\n        toFixed(height, NUM_FRACTION_DIGITS),\n        '\"></rect>\\n');\n    },\n\n    _setSVGTextLineBg: function(textBgRects, i, leftOffset, textTopOffset) {\n      var line = this._textLines[i],\n          heightOfLine = this.getHeightOfLine(i) / this.lineHeight,\n          boxWidth = 0,\n          boxStart = 0,\n          charBox, currentColor,\n          lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n      for (var j = 0, jlen = line.length; j < jlen; j++) {\n        charBox = this.__charBounds[i][j];\n        currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n        if (currentColor !== lastColor) {\n          lastColor && this._pushTextBgRect(textBgRects, lastColor, leftOffset + boxStart,\n            textTopOffset, boxWidth, heightOfLine);\n          boxStart = charBox.left;\n          boxWidth = charBox.width;\n          lastColor = currentColor;\n        }\n        else {\n          boxWidth += charBox.kernedWidth;\n        }\n      }\n      currentColor && this._pushTextBgRect(textBgRects, currentColor, leftOffset + boxStart,\n        textTopOffset, boxWidth, heightOfLine);\n    },\n\n    /**\n     * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n     * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n     *\n     * @private\n     * @param {*} value\n     * @return {String}\n     */\n    _getFillAttributes: function(value) {\n      var fillColor = (value && typeof value === 'string') ? new fabric.Color(value) : '';\n      if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\n        return 'fill=\"' + value + '\"';\n      }\n      return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLineTopOffset: function(lineIndex) {\n      var lineTopOffset = 0, lastHeight = 0;\n      for (var j = 0; j < lineIndex; j++) {\n        lineTopOffset += this.getHeightOfLine(j);\n      }\n      lastHeight = this.getHeightOfLine(j);\n      return {\n        lineTop: lineTopOffset,\n        offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\n      };\n    },\n\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function(skipShadow) {\n      var svgStyle = fabric.Object.prototype.getSvgStyles.call(this, skipShadow);\n      return svgStyle + ' white-space: pre;';\n    },\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function(global) {\n\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  /**\n   * Textbox class, based on IText, allows the user to resize the text rectangle\n   * and wraps lines automatically. Textboxes have their Y scaling locked, the\n   * user can only change width. Height is adjusted automatically based on the\n   * wrapping of lines.\n   * @class fabric.Textbox\n   * @extends fabric.IText\n   * @mixes fabric.Observable\n   * @return {fabric.Textbox} thisArg\n   * @see {@link fabric.Textbox#initialize} for constructor definition\n   */\n  fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'textbox',\n\n    /**\n     * Minimum width of textbox, in pixels.\n     * @type Number\n     * @default\n     */\n    minWidth: 20,\n\n    /**\n     * Minimum calculated width of a textbox, in pixels.\n     * fixed to 2 so that an empty textbox cannot go to 0\n     * and is still selectable without text.\n     * @type Number\n     * @default\n     */\n    dynamicMinWidth: 2,\n\n    /**\n     * Cached array of text wrapping.\n     * @type Array\n     */\n    __cachedLines: null,\n\n    /**\n     * Override standard Object class values\n     */\n    lockScalingFlip: true,\n\n    /**\n     * Override standard Object class values\n     * Textbox needs this on false\n     */\n    noScaleCache: false,\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Object\n     * @private\n     */\n    _dimensionAffectingProps: fabric.Text.prototype._dimensionAffectingProps.concat('width'),\n\n    /**\n     * Unlike superclass's version of this function, Textbox does not update\n     * its width.\n     * @private\n     * @override\n     */\n    initDimensions: function() {\n      if (this.__skipDimension) {\n        return;\n      }\n      this.isEditing && this.initDelayedCursor();\n      this.clearContextTop();\n      this._clearCache();\n      // clear dynamicMinWidth as it will be different after we re-wrap line\n      this.dynamicMinWidth = 0;\n      // wrap lines\n      this._styleMap = this._generateStyleMap(this._splitText());\n      // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n      if (this.dynamicMinWidth > this.width) {\n        this._set('width', this.dynamicMinWidth);\n      }\n      if (this.textAlign.indexOf('justify') !== -1) {\n        // once text is measured we need to make space fatter to make justified text.\n        this.enlargeSpaces();\n      }\n      // clear cache and re-calculate height\n      this.height = this.calcTextHeight();\n      this.saveState({ propertySet: '_dimensionAffectingProps' });\n    },\n\n    /**\n     * Generate an object that translates the style object so that it is\n     * broken up by visual lines (new lines and automatic wrapping).\n     * The original text styles object is broken up by actual lines (new lines only),\n     * which is only sufficient for Text / IText\n     * @private\n     */\n    _generateStyleMap: function(textInfo) {\n      var realLineCount     = 0,\n          realLineCharCount = 0,\n          charCount         = 0,\n          map               = {};\n\n      for (var i = 0; i < textInfo.graphemeLines.length; i++) {\n        if (textInfo.graphemeText[charCount] === '\\n' && i > 0) {\n          realLineCharCount = 0;\n          charCount++;\n          realLineCount++;\n        }\n        else if (this._reSpaceAndTab.test(textInfo.graphemeText[charCount]) && i > 0) {\n          // this case deals with space's that are removed from end of lines when wrapping\n          realLineCharCount++;\n          charCount++;\n        }\n\n        map[i] = { line: realLineCount, offset: realLineCharCount };\n\n        charCount += textInfo.graphemeLines[i].length;\n        realLineCharCount += textInfo.graphemeLines[i].length;\n      }\n\n      return map;\n    },\n\n    /**\n     * Returns true if object has a style property or has it ina specified line\n     * @param {Number} lineIndex\n     * @return {Boolean}\n     */\n    styleHas: function(property, lineIndex) {\n      if (this._styleMap && !this.isWrapping) {\n        var map = this._styleMap[lineIndex];\n        if (map) {\n          lineIndex = map.line;\n        }\n      }\n      return fabric.Text.prototype.styleHas.call(this, property, lineIndex);\n    },\n\n    /**\n     * Returns true if object has no styling or no styling in a line\n     * @param {Number} lineIndex , lineIndex is on wrapped lines.\n     * @return {Boolean}\n     */\n    isEmptyStyles: function(lineIndex) {\n      var offset = 0, nextLineIndex = lineIndex + 1, nextOffset, obj, shouldLimit = false;\n      var map = this._styleMap[lineIndex];\n      var mapNextLine = this._styleMap[lineIndex + 1];\n      if (map) {\n        lineIndex = map.line;\n        offset = map.offset;\n      }\n      if (mapNextLine) {\n        nextLineIndex = mapNextLine.line;\n        shouldLimit = nextLineIndex === lineIndex;\n        nextOffset = mapNextLine.offset;\n      }\n      obj = typeof lineIndex === 'undefined' ? this.styles : { line: this.styles[lineIndex] };\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          if (p2 >= offset && (!shouldLimit || p2 < nextOffset)) {\n            // eslint-disable-next-line no-unused-vars\n            for (var p3 in obj[p1][p2]) {\n              return false;\n            }\n          }\n        }\n      }\n      return true;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _getStyleDeclaration: function(lineIndex, charIndex) {\n      if (this._styleMap && !this.isWrapping) {\n        var map = this._styleMap[lineIndex];\n        if (!map) {\n          return null;\n        }\n        lineIndex = map.line;\n        charIndex = map.offset + charIndex;\n      }\n      return this.callSuper('_getStyleDeclaration', lineIndex, charIndex);\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function(lineIndex, charIndex, style) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function(lineIndex, charIndex) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n    * probably broken need a fix\n     * @param {Number} lineIndex\n     * @private\n     */\n    _getLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      return this.styles[map.line];\n    },\n\n    /**\n     * probably broken need a fix\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function(lineIndex, style) {\n      var map = this._styleMap[lineIndex];\n      this.styles[map.line] = style;\n    },\n\n    /**\n     * probably broken need a fix\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      delete this.styles[map.line];\n    },\n\n    /**\n     * Wraps text using the 'width' property of Textbox. First this function\n     * splits text on newlines, so we preserve newlines entered by the user.\n     * Then it wraps each line using the width of the Textbox by calling\n     * _wrapLine().\n     * @param {Array} lines The string array of text that is split into lines\n     * @param {Number} desiredWidth width you want to wrap to\n     * @returns {Array} Array of lines\n     */\n    _wrapText: function(lines, desiredWidth) {\n      var wrapped = [], i;\n      this.isWrapping = true;\n      for (i = 0; i < lines.length; i++) {\n        wrapped = wrapped.concat(this._wrapLine(lines[i], i, desiredWidth));\n      }\n      this.isWrapping = false;\n      return wrapped;\n    },\n\n    /**\n     * Helper function to measure a string of text, given its lineIndex and charIndex offset\n     * it gets called when charBounds are not available yet.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {String} text\n     * @param {number} lineIndex\n     * @param {number} charOffset\n     * @returns {number}\n     * @private\n     */\n    _measureWord: function(word, lineIndex, charOffset) {\n      var width = 0, prevGrapheme, skipLeft = true;\n      charOffset = charOffset || 0;\n      for (var i = 0, len = word.length; i < len; i++) {\n        var box = this._getGraphemeBox(word[i], lineIndex, i + charOffset, prevGrapheme, skipLeft);\n        width += box.kernedWidth;\n        prevGrapheme = word[i];\n      }\n      return width;\n    },\n\n    /**\n     * Wraps a line of text using the width of the Textbox and a context.\n     * @param {Array} line The grapheme array that represent the line\n     * @param {Number} lineIndex\n     * @param {Number} desiredWidth width you want to wrap the line to\n     * @param {Number} reservedSpace space to remove from wrapping for custom functionalities\n     * @returns {Array} Array of line(s) into which the given text is wrapped\n     * to.\n     */\n    _wrapLine: function(_line, lineIndex, desiredWidth, reservedSpace) {\n      var lineWidth        = 0,\n          graphemeLines    = [],\n          line             = [],\n          // spaces in different languges?\n          words            = _line.split(this._reSpaceAndTab),\n          word             = '',\n          offset           = 0,\n          infix            = ' ',\n          wordWidth        = 0,\n          infixWidth       = 0,\n          largestWordWidth = 0,\n          lineJustStarted = true,\n          additionalSpace = this._getWidthOfCharSpacing(),\n          reservedSpace = reservedSpace || 0;\n\n      desiredWidth -= reservedSpace;\n      for (var i = 0; i < words.length; i++) {\n        // i would avoid resplitting the graphemes\n        word = fabric.util.string.graphemeSplit(words[i]);\n        wordWidth = this._measureWord(word, lineIndex, offset);\n        offset += word.length;\n\n        lineWidth += infixWidth + wordWidth - additionalSpace;\n\n        if (lineWidth >= desiredWidth && !lineJustStarted) {\n          graphemeLines.push(line);\n          line = [];\n          lineWidth = wordWidth;\n          lineJustStarted = true;\n        }\n        else {\n          lineWidth += additionalSpace;\n        }\n\n        if (!lineJustStarted) {\n          line.push(infix);\n        }\n        line = line.concat(word);\n\n        infixWidth = this._measureWord([infix], lineIndex, offset);\n        offset++;\n        lineJustStarted = false;\n        // keep track of largest word\n        if (wordWidth > largestWordWidth) {\n          largestWordWidth = wordWidth;\n        }\n      }\n\n      i && graphemeLines.push(line);\n\n      if (largestWordWidth + reservedSpace > this.dynamicMinWidth) {\n        this.dynamicMinWidth = largestWordWidth - additionalSpace + reservedSpace;\n      }\n\n      return graphemeLines;\n    },\n\n    /**\n     * Detect if the text line is ended with an hard break\n     * text and itext do not have wrapping, return false\n     * @param {Number} lineIndex text to split\n     * @return {Boolean}\n     */\n    isEndOfWrapping: function(lineIndex) {\n      if (!this._styleMap[lineIndex + 1]) {\n        // is last line, return true;\n        return true;\n      }\n      if (this._styleMap[lineIndex + 1].line !== this._styleMap[lineIndex].line) {\n        // this is last line before a line break, return true;\n        return true;\n      }\n      return false;\n    },\n\n    /**\n    * Gets lines of text to render in the Textbox. This function calculates\n    * text wrapping on the fly every time it is called.\n    * @param {String} text text to split\n    * @returns {Array} Array of lines in the Textbox.\n    * @override\n    */\n    _splitTextIntoLines: function(text) {\n      var newText = fabric.Text.prototype._splitTextIntoLines.call(this, text),\n          graphemeLines = this._wrapText(newText.lines, this.width),\n          lines = new Array(graphemeLines.length);\n\n      for (var i = 0; i < graphemeLines.length; i++) {\n        lines[i] = graphemeLines[i].join('');\n      }\n      newText.lines = lines;\n      newText.graphemeLines = graphemeLines;\n      return newText;\n    },\n\n    getMinWidth: function() {\n      return Math.max(this.minWidth, this.dynamicMinWidth);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @method toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function(propertiesToInclude) {\n      return this.callSuper('toObject', ['minWidth'].concat(propertiesToInclude));\n    }\n  });\n\n  /**\n   * Returns fabric.Textbox instance from an object representation\n   * @static\n   * @memberOf fabric.Textbox\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Textbox instance is created\n   */\n  fabric.Textbox.fromObject = function(object, callback) {\n    return fabric.Object._fromObject('Textbox', object, callback, 'text');\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n\n(function() {\n\n  /**\n   * Override _setObjectScale and add Textbox specific resizing behavior. Resizing\n   * a Textbox doesn't scale text, it only changes width and makes text wrap automatically.\n   */\n  var setObjectScaleOverridden = fabric.Canvas.prototype._setObjectScale;\n\n  fabric.Canvas.prototype._setObjectScale = function(localMouse, transform,\n    lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n\n    var t = transform.target;\n    if (by === 'x' && t instanceof fabric.Textbox) {\n      var tw = t._getTransformedDimensions().x;\n      var w = t.width * (localMouse.x / tw);\n      if (w >= t.getMinWidth()) {\n        t.set('width', w);\n        return true;\n      }\n    }\n    else {\n      return setObjectScaleOverridden.call(fabric.Canvas.prototype, localMouse, transform,\n        lockScalingX, lockScalingY, by, lockScalingFlip, _dim);\n    }\n  };\n\n  fabric.util.object.extend(fabric.Textbox.prototype, /** @lends fabric.IText.prototype */ {\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function() {\n      for (var prop in this._styleMap) {\n        if (!this._textLines[prop]) {\n          delete this.styles[this._styleMap[prop].line];\n        }\n      }\n    },\n\n  });\n})();\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../es2015/.internal/fabric/fabric.js\n// module id = 894\n// module chunks = 2","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/buffer/index.js\n// module id = 901\n// module chunks = 1 2","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 902\n// module chunks = 1 2","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr((len * 3 / 4) - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0; i < l; i += 4) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = ((uint8[i] << 16) & 0xFF0000) + ((uint8[i + 1] << 8) & 0xFF00) + (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/base64-js/index.js\n// module id = 903\n// module chunks = 1 2","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/ieee754/index.js\n// module id = 904\n// module chunks = 1 2","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Dropbox/www/amcharts4dev/node_modules/isarray/index.js\n// module id = 905\n// module chunks = 1 2"],"sourceRoot":""}